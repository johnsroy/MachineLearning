"commit id","commit date","commit message"
"6189e3130ef417579e193b9f135b853ea42331ee","2016-03-20 08:40:25+08:00","fix inputbox

#8642 break #8607 ,now fixed
"
"50ed2ce292596745fb831123f9284f96e8945f11","2016-03-20 08:51:37+01:00","Merge pull request #8646 from xiushudongfang/fix-inputbox

fix inputbox
"
"54a37f9bb82ccaca01664f00ad6c765c7f4111d0","2016-03-20 18:06:53+01:00","Merge pull request #8591 from unknownbrackets/thin3d

Use thin3d for softgpu drawing (+thin3d improvements)
"
"538d801f17eeefc382ede40d22c30900866eaedd","2016-03-20 18:07:24+01:00","Merge pull request #8588 from sum2012/net-minor

Add sceNetIfhandle staff
"
"b3402ef1fbd5166f4d6bb8674d675c64efce4a90","2016-03-20 18:10:19+01:00","Merge pull request #8560 from unknownbrackets/prescale-uv

Enable UV prescaling by default
"
"c64064024db4ab4ebdd063f0da9f495aa5f36c85","2015-10-10 16:41:19+02:00","Initial vulkan code.

This was squashed from nine commits but using old versions of Vulkan.
"
"eedd81988c92d8adfbe9856cf7fbd38b31df0950","2016-01-06 12:52:08+01:00","Implement a trivial SPIR-V disassembler, just for fun
"
"2a449f78bbefe8d8217edc4f9bc7bcf6b116b614","2015-12-20 23:39:03+01:00","More vulkan fixing
"
"847cab231fc4445938c303c8bf551f9245ce8974","2015-12-31 00:30:36+01:00","Fixes in VulkanContext
"
"2a71e164f5cfd24aebc4eccac180f9ec0e4e69ac","2015-12-31 00:30:52+01:00","Enable vulkan validation
"
"73d6d2dc72edf232e3ccb6ee65989a6d6c70ead6","2015-12-31 01:07:06+01:00","More vulkan in thin3d
"
"83a5313a063bb7f5a93e3349342e0a9f5464363e","2015-12-31 01:33:23+01:00","More fixes
"
"129c706cfc764f4a29449d5a1e8cda1df9753d88","2015-12-31 14:05:48+01:00","Just some work on the shader generators
"
"4ddca8607f642656265da98685f071051605bc07","2015-12-31 14:06:18+01:00","Further vulkan stuff
"
"cfbecf5071da42df65f6d85eb02786fdffda7029","2016-01-02 02:08:05+01:00","More progress
"
"e89a7f0c676aba12a87b75d6bbd3e7c448692151","2016-01-03 00:46:41+01:00","Update VulkanContext
"
"d7e8f8433ffc34e69d53073c9f00ddcdd5113d12","2016-01-03 12:37:05+01:00","Support multiple texture formats
"
"776439d706d19bf0b26877e75066a004be3f5d8e","2016-01-03 13:27:19+01:00","Per-frame descriptor pools. Safe-delete more types.
"
"56e358aa24c2063b1a4a3199a37124c0d93d0d82","2016-01-03 14:00:05+01:00","Show Vulkan information in system information.
"
"5216a245901e221ee0e41f065412b5cd1c68071b","2016-01-03 18:31:03+01:00","Back to work on the PSP renderer
"
"cfcfd406fc21c164f46afcd09685197f6456b3c8","2016-01-03 23:09:37+01:00","Start porting TextureCache. Lots of stubbing going on.
"
"4063f7e0db232188370625524be57b039e1a84d5","2016-01-05 21:18:43+01:00","Fill out GPU_Vulkan.cpp with what's mostly a copy of GLES_GPU.cpp
"
"3701e2eca3a0698de01201b5a166ca1232976cfa","2016-01-05 22:55:47+01:00","Reaches the first clear
"
"49f1e702c93f06f0f83644bbf9226b5a46685826","2016-01-05 23:37:18+01:00","Okay, reached the shader generators
"
"906b259a8582018efaa1e2b20b58f6b9898133ba","2016-01-06 00:38:45+01:00","First PSP shaders actually compile
"
"ddb36a35a08af849e04f7602044082d2baa0c4e8","2016-01-06 12:52:42+01:00","Some descriptor binding fixes
"
"01e3fbae95f835a57b08aa732c0292b9d640592a","2016-01-06 23:08:26+01:00","Fix clearing bug, add FIFO_RELAXED flag, etc
"
"668830365d940aa3a8fd7fd474a99c78c55cb2a8","2016-01-08 01:05:52+01:00","Begin/End frame fixes
"
"28ae840abe020fbe2311034f146866d727ce2b6c","2016-01-09 01:23:32+01:00","Pipelines, samplers, description sets, oh my
"
"d67d187b728dd383b6cb85e57f36e3e4dee9a1c4","2016-01-09 11:07:14+01:00","Get untextured drawing working! (at least cube.elf)
"
"6141c3651b4bac9eec8cda9ce2288e1c8fd8dde9","2016-01-09 12:17:02+01:00","Separate uniform updates from shader updates
"
"6b8c0045612dfa23058fd5ecd1a9c0dd25228ab4","2016-01-09 12:37:05+01:00","Fix indexed drawing, flip rendering the right side up, enable culling
"
"ec6bc4a5f673b4eee87e1951d0dbdef46bccd1e4","2016-01-09 13:31:36+01:00","Vertex format fixes. Flip through drawing the right way up.
"
"4e6a9b81080d2dd6b5dfe28ece24d1afb164a003","2016-01-09 13:47:48+01:00","Fix indexed through-mode drawing
"
"9e34d7d625dc033b0d50c0afe2607e4b64862c5d","2016-01-09 13:52:27+01:00","Remove remains of FragmentTestCache from Vulkan backend
"
"7eeba080c72ca14d92fff66c9d9196b55feaa50f","2016-01-09 17:12:37+01:00","Fix primitive topology. Crashfix.
"
"dced84c9fcb913a5e2d0130b8f3c6db198297609","2016-01-09 21:19:18+01:00","Work on texture support, cube.elf works correctly. Delete unused code.
"
"78d5fff2fe87e8d9ecd6a99e7c6d5f6dcffe40e4","2016-01-09 21:54:57+01:00","More texture work
"
"87b743e92259ca74f82cb082bace3c447bb47a84","2016-01-09 22:14:19+01:00","Fix issues with texture replacement
"
"b51b38f97c104eef48909abe4858897157a414b9","2016-01-09 23:27:13+01:00","Switch to 'Mailbox' frame submission if available, lets us go beyond 60hz for unthrottle
"
"29341e53a58290c3830248f4315dcd05a05a63e5","2016-01-09 23:27:53+01:00","Assorted fixes and cleanups.
"
"3bf88d7475dce6136308d7a07f4d2bd76e4cac30","2016-01-10 11:41:46+01:00","Plug the texture memory leak
"
"4c281f16acd74d1fd8baf11f1441a5bcdfa4bda5","2016-01-10 12:27:45+01:00","Fix mixup with fragment shader ubo variables
"
"52e7f06908c8f1168fc20236caaeeb71ecfc91d8","2016-01-10 13:08:19+01:00","Add Vulkan to Win32 menu. disable gfx logging in debug by default.
"
"55ef97639a9aac45ef4e0fe8ff20d278aa2afea4","2016-01-10 13:08:54+01:00","More zero-initialization.  Fix scope issue, MSVC's optimizer was aggressive enough that this was a problem. Fixes textures in release mode.
"
"2e998891a4f336da8726e074795da07a142a9cf7","2016-01-10 13:47:56+01:00","The settings to the vertex decoder must match the implementation..

Fixes some character scale issues.
"
"3284899844854569858e1ac6177d987f5fa5b2c0","2016-01-10 14:24:10+01:00","More clearing fixes. Also fix some memory leaks.
"
"02d164887263c3e4d18a9603dfe713345441a073","2016-01-10 16:55:18+01:00","Delete pipeline caches asynchronously too
"
"4b978b1fd3c7ca1e36a52889aaae5b86d761f286","2016-01-10 23:41:19+01:00","Crashfix, fix left-behind culling disabling
"
"d5f685ce05cbca165adbbe9daab805482e663fae","2016-01-10 23:42:09+01:00","WIP trying to fix drawing issues
"
"5b70957b1f283771d2a5e6064a0cb0d9f6dfe6e5","2016-01-19 18:41:45+01:00","Expose another couple of vulkan device features.
"
"ca63cca9a27d9fa371c03401594f3fbbddf14acc","2016-01-24 11:22:06+01:00","WIP: Start work on getting the Vulkan code to compile for Android
"
"5f71b5b3ec251b90fcc4e34e5c59a571d49ed845","2016-01-24 12:19:04+01:00","Android: Vulkan builds but doesn't link as we have no link library.
"
"1677697735393b761ba3e6620dad5939632e3424","2016-01-24 17:30:26+01:00","Vulkan: Don't try to overlap proj with proj_through, will need a different approach.

Also, assorted bugfixes.
"
"432f276bec802d690e2766806776c635fe67ae01","2016-01-25 00:58:47+01:00","Cleanups. Don't loop over bones in vshader, causes trouble
"
"5a72564583da6edd01ce7621e897f4f32c09a1cb","2016-01-28 23:44:05+01:00","Cleanup
"
"2481714a8e35b7fae0ca799d64edbd4beacf2297","2016-02-21 18:05:01+01:00","Load Vulkan dynamically. Fix Android build (though - Vulkan is not working on Android yet)
"
"45cf39909199babc3e153982c37592818e8dd445","2016-02-21 19:20:46+01:00","Remove remains of xcb support. Will add back later.
"
"c8e06675bb78817ea92231e1476704b92d54abd5","2016-02-21 19:23:31+01:00","Possible buildfix
"
"d325aa2b3094a0ae4bcb8362d4efd2da4ca23f66","2016-02-21 20:21:24+01:00","Hook up Vulkan on Android, no idea if it works. Move VulkanContext to Common.
"
"96273c661650dc594978fafc3c6a33510742302e","2016-02-21 22:12:19+01:00","Turn off Vulkan in CMake-based and Qt-based builds, for now
"
"e97a6c6f77ba2af1753117d4086091489e2f8807","2016-02-22 17:57:44+13:00","VulkanLoader: Load vkDestroySurfaceKHR
"
"77420f799ee7769f682c82d283442712e63ab74b","2016-02-22 17:59:58+13:00","VulkanLoader: Detect loader failure on windows.
"
"78b878222f92dd747293e3b2257184d1e05e5aff","2016-02-25 15:41:45+01:00","Show backend chooser on Android so we can choose Vulkan.
"
"9c457da4c9bbea395759c14939d8666149855405","2016-02-25 18:52:33+01:00","Gets the Vulkan backend running, but not drawing correctly, on Android.

Not sure what's wrong, I get a yellow flashing screen.
"
"b06cf4e68846b45cd83f4be5c72873090ce9be15","2016-02-28 00:34:50+01:00","Re-fix depth buffer initialization
"
"8950509bc5a81ff4b33976bccfdbc43161e0c49c","2016-02-28 13:27:35+01:00","Buildfix (glslang project settings /MT)
"
"432fbe30d1513a4cefd18057ec45a65732880893","2016-03-05 01:00:59+01:00","Vulkan: We're doing dual src blending wrong (GLSL part, not sure how to do it right) so disable it.
"
"76d8a87b2f3486f432acc2d47518d93c54349dc4","2016-03-06 12:00:57+01:00","Vulkan: Attempt at fixing dual source blending. Should work but doesn't.
"
"22f47d37879e57c1ff5d0551ed6b0d9035246d09","2016-03-06 23:29:52+01:00","Remove redundant configuration, remove temp hack
"
"2d548d64dad9d1924524896d9f58ba8d6e6ad252","2016-03-12 09:19:19-08:00","Move Vulkan code into a filter.
"
"323130eb862af82d09e0cd4943255b7b3a111172","2016-03-12 09:21:13-08:00","Don't crash as hard on shader compile error.
"
"ba7deb7c9aff89a2fdc95ff473dd3fd17972a1e4","2016-03-12 09:36:59-08:00","Fix GE debugger preview in non-buffered.
"
"8efbcf8d4240f9deef877a0078425d4dfaf7a13a","2016-03-12 13:37:08-08:00","Use draws for alpha/stencil only clear in Vulkan.
"
"c92790c5a8b9d7c4080100c44918061f850392fc","2016-03-12 14:03:26-08:00","Specify a useful app version when loading Vulkan.
"
"6e2e0bfa33e023b302671e94a638977e6ce4f3e3","2016-03-13 15:26:32+01:00","Should not specify the Vulkan patch version when requesting Vulkan 1.0.
"
"b7b0b59e9ab1a4b7b0103d85c328b1e98819e71c","2016-03-13 15:42:10+01:00","Update Vulkan headers to 1.0.5. Remove references to vulkan-1.lib as we load dynamically.
"
"5ca012e83de57356712d9b405cac63fbd30e1a80","2016-03-13 16:22:46+01:00","Fix a bunch of new vulkan validation layer failures.
"
"79fd828d16e1590175fbad0a8cf4edcd2459f65a","2016-03-13 16:32:07+01:00","Work around what seems like a validation layer bug (trigger by scrolling
around the UI a bit)
"
"575cc890b7cef575edc864264dc4e120a2b82a67","2016-03-13 17:05:03+01:00","Turn off annoying 'debug flicker' I used to see if we were swapping buffers properly early on

Also minor logging changes, refine the false-positive debug layer check
"
"b0098f79616bb5a624418c414064acb5f0881dfe","2016-03-13 17:20:04+01:00","Replace ugly workaround with VK_LAYER_LUNARG_unique_objects which prevents handle reuse.

See https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/issues/121
"
"fe270c592ad6648eb31b122002ae913447744bd8","2016-03-13 17:43:50+01:00","Typo fix
"
"76b17a4912c131c475fefe7490949a5b73c34704","2016-03-13 17:44:38+01:00","Revert 'Replace ugly workaround with VK_LAYER_LUNARG_unique_objects which prevents handle reuse.'

This reverts commit 6342c07a19d5ab410cbc233a570488214923a9f8.
"
"82205a46609ab0ff66c3c90ba79ff3e94a7867d2","2016-03-13 09:33:39-07:00","Handle Vulkan init errors more gracefully.
"
"0b7e43d05c8ed4d96c43e32a33bf86ce0a4102d4","2016-03-13 10:38:38-07:00","Allow the graphicsContext to be overridden.

This is useful when coming from, for example, headless.
"
"c770349475ba67296037d9b7660d83f4f251ea36","2016-03-13 11:23:46-07:00","Switch headless to using graphics contexts.

Vulkan doesn't work yet, needs some thin3d for the command buffer?
"
"5cee8856eadec6b4922e2877fbae47aa6b9670a9","2016-03-14 00:52:09+01:00","Fix UV scale for some vertex formats (like GL). Separate updates of PROJ and PROJTHROUGH matrices.
"
"1f1e679aa039e2023cfdda564df75bc2f8eb1fff","2016-03-14 00:53:36+01:00","Silence another validation warning
"
"3e268e4d373c73ce29b024c5be43dd107a61d34e","2016-03-14 00:53:57+01:00","Mem leak fixes, cleanups
"
"242daae00a010b2fc82b90e15987cdd808a4ca8b","2016-03-13 18:41:26-07:00","Disable last texture reuse for now.

This will be slower, but otherwise a lot of textures are missing in
various games, like Final Fantasy 4.  Better to get all the bugs out first
and then start optimizing.

Note: there is still missing drawing in Final Fantasy 4, but only text
after this change.
"
"00d617c9d51866850d7716b4c8ccee0ea899204d","2016-03-14 01:46:54+01:00","Fix bug where we sometimes pushed too much vertex data.

Doesn't seem to fix much though...
"
"1970d3865059647585bd0a46c7e761d76a4d8a2d","2016-03-14 18:57:21+01:00","Enable the Unpack Subimage path on DX9 (maybe should just remove the check)
"
"697f3a8f94211f003bf07725e1d4e33d14f584ea","2016-03-14 20:00:38+01:00","Matrix depth fix. Still have depth issues though.
"
"c2775d4dfa253b5c293a681dea60627112b613c3","2016-03-14 22:07:37+01:00","Default validation on in Debug and off in Release
"
"5ea01ffff68deefe09fc6dbda72edd4dcb1c5d57","2016-03-14 23:24:19+01:00","Add a secondary way to upload textures - through buffers.
"
"8a62724316cd9a1e0f4709770e32774fafc5523a","2016-03-14 23:25:00+01:00","Upload PSP textures through a push buffer instead of image copy. More flexible.
"
"84e649f74ba900f30e38f6e075be8b029ce09e9f","2016-03-15 00:37:14+01:00","Vulkan: Enable mipmapping
"
"e45c24b75f039b1599441d754f0e21a25687b55c","2016-03-15 00:50:36+01:00","Show how much pushbuffer space is used each frame.

Optimizing this number (by avoiding redundant UBO uploads etc) will probably help performance.
"
"a995dd2ff4f0b441b77f3ae87e794725f20c59e6","2016-03-17 00:04:23+01:00","Get rid of strange offset in Vulkan matrix converter
"
"f289e8485d8c066fe338e4f9da315e28814aa2b8","2016-03-16 21:59:37-07:00","Vulkan: Make sure depth==stencil when clearing.

We have to clear both at the same time.  I think it makes sense to
consider this part of the 'separate alpha' flag, since alpha has to match
both color and depth.
"
"dad64b39b6ee64c02bfd093270f4d130676ae462","2016-03-16 22:01:15-07:00","Vulkan: Properly set the alpha test ref.

It's definitely not a float, oops.
"
"baa7132a89586a42c8b78e46fa9eb7654c511368","2016-03-16 22:51:18-07:00","Vulkan: Simplify color testing.
"
"3744008d1fef08a7c666fcd36afbc5d0da348460","2016-03-16 23:32:48-07:00","Correct the 5551 format for now.

Otherwise we get wrong colors - also we are still converting colors.
"
"da5037032893deb8ce145cf218ddd68f1e627183","2016-03-17 11:56:43+01:00","Split out VulkanTexture from VulkanContext.cpp/h into VulkanImage.cpp/h
"
"82f3df1e06e1a0b3819198cb2973b0805356b5d3","2016-03-17 21:59:16-07:00","Vulkan: Initial support for aniso filtering.
"
"add506a0d381524076e47a7899a104d6b7645286","2016-03-17 21:56:04-07:00","Cleanup differences in aniso handling.

Some places were not handling it as a power of two.
"
"966cb89d41657ec990c1c6d40170eb63b2afb835","2016-03-19 01:57:13+01:00","Vulkan: Fix our use of dual source blending, re-enable if available.
"
"f7113bb2e31dbf6b9faca1f0be7ab74b28cfa480","2016-03-19 11:47:58+01:00","Use separate pushbuffers for UBO/Index/Vertex. This will make decoding directly into the pushbuffers easier, plus other benefits later.

(For example, we'll often be able to avoid rebinding the vertex and
index buffers at new offsets by just keep counting upwards between draws,
if the vertex format is the same but other state changed)
"
"5d56537a169b5f61c1bea7f2455de51d6ad46b78","2016-03-20 09:35:10+01:00","Move VulkanPushBuffer into VulkanMemory.h
"
"2c61b1e763b8da2bf56495c8532cf9cc8b1f2f59","2016-03-20 09:52:13+01:00","Change the VulkanPushBuffer API to allow for adding support for dynamic growth
"
"8e9acff6aa0442e5e38f4f5d3d7deb4c054fcac4","2016-03-20 14:33:37+01:00","Always specify depthstencil state in pipelines.

Turns out it's only OK to leave out if rendering only to color,
otherwise behaviour is undefined - which means it may still be enabled.
"
"5d45413dabe051f38c0a07232b672a2fe3501988","2016-03-20 14:50:58+01:00","Fix a resource leak. Request COHERENT memory for pushbuffers.
"
"18d78f9a35326cec1707a2c1b3413a21b87550ed","2016-03-20 14:54:21+01:00","Minor optimizations
"
"d0659f0debcdc231332f4cf4828d0d768499ac96","2016-03-20 15:08:26+01:00","No need to align vertex/index data. Will only be harmful for an upcoming optimization.
"
"d7ffc39d2acc565296f8720adefa538efc697703","2016-03-20 15:46:41+01:00","Vulkan: Remove support for software skinning to reduce complexity
"
"5d19f3dfb84a00decaed617ae766e870dfb0d129","2016-03-20 16:06:11+01:00","Decode vertex data directly into the vertex pushbuffer, saving a memcpy.
"
"0b1cfaf751bb97f40af1ba8060c51afd6d8eb212","2016-03-20 16:33:34+01:00","Be more economical with UBO pushbuffer space by reusing the last data when possible.
"
"29bc07eb0acf3fdf0289f7f1d07cd156a3085924","2016-03-20 20:04:49+01:00","SoftGPU with Vulkan runs but displays black
"
"c33c3cf3d4a3503d445017e01cf04fb3a8672807","2016-03-20 20:26:52+01:00","Vulkan: Add ugly temporary warning about buffered rendering not working
"
"827481d41d03f317fb489dae354581fc2be31f59","2016-03-20 20:53:46+01:00","Combined two uniforms to get the base UBO down to 512b, in order to not waste space (nVidia needs 256-byte alignment)
"
"0e199272ed6a19b74c1d9889cd3091afda5ea598","2016-03-20 20:56:33+01:00","Buildfix to last commit, add a comment
"
"2b46ae59a0cd6a9ef9f2898f23d2b336cf1f6339","2016-03-20 21:08:58+01:00","Merge pull request #8601 from hrydgard/vulkan

Vulkan rendering backend. Early Work-In-Progress
"
"ffde7020d22239393ad47d8a69431abbb2b4d6ef","2016-03-20 21:48:28+01:00","Vulkan prescale UV fix
"
"87eadad326d2a09429a36414985f8f66fea30aa1","2016-03-20 14:16:54-07:00","Fix a failed lock release warning.
"
"ef1dc583a232f7240474f4b2b53bf1f7a8df7e40","2016-03-20 14:17:51-07:00","Fix various minor warnings.
"
"ab6dd51d9c4fd5e3969d6ed78919727903af3b0a","2016-03-20 14:24:35-07:00","Fix a small resource handle leak.
"
"e92e6bbd03a08ef2f71c155485798727a14189b4","2016-03-20 14:26:51-07:00","Move VulkanUtil.cpp into the filter.
"
"a6a56b9a698e2bfe24d86c8396be2f79edcab73d","2016-03-20 22:46:49+01:00","Vulkan: Cache the texture pointer. Use a checkerboard placeholder texture where missing

(framebuffer textures in non-buffered)
"
"8e459b7816297435544715befa782332185c34bb","2016-03-20 22:48:27+01:00","Merge pull request #8648 from unknownbrackets/warnings

Minor warning fixes
"
"1515754f2d24cd963a0e5b71f40f745ccdd10ecc","2016-03-20 23:02:40+01:00","Another prescale UV fix
"
"82a902382ba30eea7b07cb98e5cdb4a766dfa0a4","2016-03-20 15:13:17-07:00","Vulkan: Centralize shader UBO update, DRY.
"
"f2513ffcd6a14f393b810fc87588fe6f6475abd0","2016-03-20 15:15:13-07:00","Vulkan: Allocate more buffers on overflow.
"
"9e4389cbf574b29f82452bf09f3bbb48a6c428ed","2016-03-20 15:20:21-07:00","Vulkan: Defrag buffers when growing.
"
"f91cc6191adbc0ea55dc8db6f1098d4ae2a0e253","2016-03-20 15:23:03-07:00","Vulkan: Start with smaller buffers by default.
"
"e3d9630b9a4a22bd24081f933a53d0b4b15d0287","2016-03-20 15:25:59-07:00","Vulkan: Handle oom slightly better.
"
"2485c320f3c8008393d238fc547b1b53c301e587","2016-03-20 23:32:08+01:00","Merge pull request #8649 from unknownbrackets/vulkan-buf

Dynamically reallocate buffers when out of space
"
"0009b55210d1dc4050af304457786450d7c5b943","2016-03-20 23:36:09+01:00","Make placeholder texture black
"
"9fd040eed0388cec016b3c21604451874ee41a29","2016-03-20 15:36:22-07:00","Vulkan: Cache only device in push buffers.
"
"6d947a057e229ac00cce5a0e1c8618f0290e78b7","2016-03-20 17:24:20-07:00","Vulkan: Handle oversized push buf allocations.
"
"450d70ff064f37bf7251c0e134c2964f29fa2a11","2016-03-20 22:51:07-07:00","Vulkan: Remove some outdated comments.
"
"3976e840a1788d6a4edd0995ad9c72cae36dffd0","2016-03-20 23:03:48-07:00","Fix some old savestates.
"
"d90527e41eafa0f90fbcef8c814ca3fe7c99ffbc","2016-03-20 16:24:40-07:00","Correct some missing overrides.
"
"2461a849f90e25da2c120aa3cf7fb70a073fdf23","2016-03-20 16:25:02-07:00","Correct some warnings reported by clang.
"
"9c3e12ead02ba5bfabadd3bb6131b6318ed2fa2c","2016-03-20 23:14:08-07:00","Remove some unused things reported by clang.
"
"2d34c0a8bcd5dfe93ecc3df1ddf6f656711af35d","2016-03-21 00:02:59-07:00","Vulkan: Free anything pending before the device.

This includes, for example, device memory and etc.
"
"bdc0dac6c51dfcee022e6cdda83a6525dada0212","2016-03-21 00:03:34-07:00","thin3d: Plug leaks in samplers and vk shaders.
"
"62af4fe48b298827a61270b96fc5f12a30729f61","2016-03-21 00:04:02-07:00","softgpu: Prevent leaking thin3d buffers.
"
"3dcdd4b53302d622cce12ab77379e9934114794a","2016-03-21 08:27:08+01:00","Merge pull request #8654 from unknownbrackets/vulkan-leaks

Plug some Vulkan leaks
"
"2a35d4b4c5313619be0813213208e17954aa5ce1","2016-03-21 08:27:25+01:00","Merge pull request #8653 from unknownbrackets/warnings

Warning fixes from clang
"
"6831f6fc46f0015f897b8ec107b4c5dd65a27bcd","2016-03-21 08:27:50+01:00","Merge pull request #8650 from unknownbrackets/vulkan-buf

Vulkan: Cache only device in push buffers
"
"1b8985a0804268e6ed0ffca85bcad9cff828581b","2016-03-21 00:35:27-07:00","thin3d: Fix tranposed Vulkan bufs.
"
"f3d113a777e708f28fa4ebb2ce157da9d815032d","2016-03-21 06:57:03-07:00","thin3d: Use 32-bit indexed drawing to match.
"
"caea1da99aba3935e8bbcb27237f0345677bd190","2016-03-21 07:09:33-07:00","softgpu: Flip vertically in the Vulkan backend.
"
"257c01bd8474e5ba5e7e48bbad16d247119f010d","2016-03-21 16:48:59+01:00","Merge pull request #8655 from unknownbrackets/vulkan-softgpu

Fix softgpu rendering in Vulkan
"
"e8758c1ea072672ccc9876cca8728ea417a96095","2016-03-21 17:05:58+01:00","Merge pull request #8652 from unknownbrackets/savestates

Fix some old savestates
"
"20f227cc4dc650b631d41308fbdb8aa61fc7cc9f","2016-03-21 18:50:11+01:00","Vulkan: Fix Prescale UV
"
"dff585e440d9703012b5080521f4fb9d231f9759","2016-03-21 20:11:28+01:00","VulkanContext: Detect the appropriate depth buffer format to use, expose it.

This should help AMD compatibility.
"
"b97e02febe00e61e9d5d53d034a00d07cae5a1ea","2016-03-21 20:23:53+01:00","Typo fixes. Delete irrelevant comments
"
"efa508d492d2e94adc13b3e37dd30f6e75623da3","2016-03-21 21:26:48+01:00","Vulkan: Fix texture scaling
"
"963b18e6c2b50a220d1810a062b91b3e6f1e3ad6","2016-03-21 19:41:20-07:00","Vulkan: Prep for resize, destroy surface on exit.

I suppose this is a validation layer bug, it didn't report the leak.
"
"aec117d8ea07c4998ae483d8cd961e6b511c058a","2016-03-21 19:45:27-07:00","Vulkan: Allow resizing window/backbuffer.

Not tested much on Android.  Fixes #8656.
"
"b0329e81067e6ce5883ef058af29de7a3b7a04c7","2016-03-22 09:22:58+01:00","Merge pull request #8657 from unknownbrackets/vulkan-resize

Support resizing the screen on Vulkan
"
"e270b955bb04b422e7edf4666fc48272a0839b13","2016-03-22 18:36:08+01:00","x86/x64: Minor vertex decoder optimization
"
"8a39794c47dfe44832246ce51323d2e86b056348","2016-03-22 20:32:31+01:00","Revert 'Enable the Unpack Subimage path on DX9 (maybe should just remove the check)'

This causes some breakage that need investigation.

This reverts commit 1970d3865059647585bd0a46c7e761d76a4d8a2d.
"
"bd17351ef9c6716cc5951fa92a76c9580fb426f4","2016-03-22 19:00:57+01:00","Texcache: Minor refactor/cleanup
"
"4568affe4d38f71bc5dd818814e635e4d0800081","2016-03-24 17:03:04-07:00","Vulkan: Fix error message if backend can't load.
"
"49c353f40ccf819fdb803625c9c17b54d684d8ae","2016-03-24 19:04:25-07:00","d3d9: Check actual FBO format for INTZ support.
"
"adc9946641abfe490628764ba8e878bee3ccd2cb","2016-03-23 00:39:08-07:00","Vulkan: Ask for COHERENT staged texture memory.
"
"817df153f84c3bfcd26bbc4468f19fe97cfb2c6a","2016-03-26 11:44:22-07:00","Vulkan: Don't replace images on old fb textures.
"
"e8c8f19aece5095526bfd9df5d4e5eb6a8ac3cf0","2016-03-26 11:49:16-07:00","Move framebuf attachment into central code.

It doesn't look like this will be different, and there's a bug in it.
"
"aad04f2941c7c2df905ef04ae26a30a0e0e3a399","2016-03-26 12:01:55-07:00","Centralize the texcache key format.
"
"f31fbb9417eee6505eeb63aa1f2cc4296c5fe15b","2016-03-26 12:07:49-07:00","Cleanup fbTexInfo_ when detaching framebuffers.
"
"7d5f3084949cb642b4cbf595151824180f630cd5","2016-03-26 12:17:28-07:00","Fix a crash where we used an old framebuf.

This was causing Breath of Fire 3 to crash, because it had an offset
framebuffer set that was never detatched.
"
"121490172d94402d54eecb95618c32f29816f41e","2016-03-26 21:15:11+01:00","Merge pull request #8666 from unknownbrackets/texcache

Fix a crash where we used an old framebuf
"
"a49cba7d0d5c0af7901a5b4c3faa150940da8d45","2016-03-26 21:15:44+01:00","Merge pull request #8665 from unknownbrackets/d3d9-depth

d3d9: Check actual FBO format for INTZ support
"
"e7ea1da99f6a96977670b0603e3a40409718640c","2016-03-26 13:17:17-07:00","Vulkan: Swizzle instead of converting colors.
"
"29287ea0ee3681fd859e35d7fdcdc25df20194bb","2016-03-26 13:33:18-07:00","Vulkan: Reorganize a bit so we can decode directly.
"
"99bf2c5aeb1c673c128ed5a260c10e1f5c7ccac1","2016-03-26 13:43:42-07:00","Vulkan: Decode the simplest tex formats directly.
"
"fe4c0e9f5a74e2682301c05bd35ff247ba5146b0","2016-03-26 14:28:03-07:00","Vulkan: Fix various problems with tex scaling.
"
"9b15ce093443b7289fc4dc3667530fdc416f3514","2016-03-26 14:34:24-07:00","UI: Fix texture scaling level selection.

It previously was not possible to select 4 on a POT-only device, since it
would become 3, which would in turn become 2.

Also, this allows selection on other backends, e.g. Vulkan.
"
"a130e2695ea22fe30f40b909c32188b68f4beba1","2016-03-26 14:36:54-07:00","Vulkan: Remove unused color conv func.
"
"6c0a5ca503316dfc19a1c757f15eb086babccf74","2016-03-26 14:43:35-07:00","Vulkan: Oops, correct DXT stride.
"
"55cb508a9513eae8a393fed0bfe9d6211f7859e8","2016-03-26 23:08:09+01:00","Merge pull request #8667 from unknownbrackets/vulkan-tex

Vulkan: Swizzle and decode (some) textures directly
"
"9cd054413785e31448ae413de1e5bd9ab8b04885","2016-03-26 16:11:14-07:00","Flip GL debug stencil/depth in non-buffered.
"
"9a4b74cd09173a1fc5401ad5e52d1ef74e9f2e91","2016-03-26 16:11:59-07:00","Vulkan: Directly decode simple palette textures.
"
"19f76aab301b8dc12555d790303655870eee911a","2016-03-26 16:13:51-07:00","Vulkan: Correct font texture optimization.

Oops, missed this when swapping color formats.
"
"7931a01de7c4eadf9edf79b2b63eedcb07400503","2016-03-26 16:28:58-07:00","Vulkan: Decode 4-bit clut directly.
"
"5e23d635383d4739a68a4a5df18678bd0a245646","2016-03-26 16:36:20-07:00","Vulkan: Cleanup now that all formats decode direct.
"
"b6778bf4ad5e6d2b614b1290b7b3cc6b66a313be","2016-03-26 17:21:29-07:00","Vulkan: Fix flat texture scaling.
"
"3a08ff5c06caba0fdecf45913228d6ece284c706","2016-03-26 19:43:42-07:00","Vulkan: Use new stencil state calculation.
"
"b1a2a4437786d678b4ab986af73b07d090dc7370","2016-03-26 19:44:11-07:00","Vulkan: Update dyn stencil state only as needed.
"
"3593a7963e2def821a00159ff044af88515e9c13","2016-03-26 21:29:48-07:00","Cleanup and clarify texture swizzling funcs.
"
"1300631e9aff43053c6dd15f9c155edb26b3409a","2016-03-26 21:50:49-07:00","Allow unswizzling with a dest pitch.
"
"d2f85792abad1acf019ca50355cd86d3b6ec36ad","2016-03-26 21:53:35-07:00","Vulkan: Unswizzle non-CLUT textures directly.
"
"b4406957c9ca5f9da8306440fac8f4f684b6b9ed","2016-03-26 22:02:38-07:00","Halve the default tex buf size.

Might as well not allocate 2.5 MB that most of the time won't be needed.

If it becomes needed, it'll allocate at runtime, but this should be
uncommon.
"
"424af025c0734cd995c4690d0a111c162c6260a0","2016-03-27 10:05:57+02:00","Merge pull request #8671 from unknownbrackets/vulkan-stencil

Fix some of the Vulkan stencil problems
"
"b877cb0807652ba8fcd9e7b646ce850e49bdb5e3","2016-03-27 10:22:32+02:00","Merge pull request #8669 from unknownbrackets/vulkan-tex

Use out/outPitch for remaining formats in Vulkan
"
"f0dc921ed5c03690c376f88d3e9f3d2b867af2b3","2016-03-23 00:40:41-07:00","Vulkan: Setup a pool memory manager for textures.
"
"7d5a8aa4700630fb18463959f1b486138fd3a990","2016-03-23 01:05:20-07:00","Vulkan: Protect better against memory alloc errors.
"
"973a9f6124cafa4e721373f97848b3f63b71a9f5","2016-03-24 23:27:14-07:00","Vulkan: Delay frees for device memory slabs.
"
"bd7c4315328c7eb54e7b52e294aba9543c5ad1c4","2016-03-24 23:30:01-07:00","Vulkan: Increase new size for new slabs.
"
"9921fd2ea70bc0986bd33b07aa73176428cb88de","2016-03-25 23:48:39-07:00","Vulkan: Don't bother with extra userdata, comments.

Was a failed attempt to avoid new/delete.
"
"87d65e696c6400b03628e9c719a5499cb16f6672","2016-03-26 00:51:55-07:00","Vulkan: Correct alloc near slab end.
"
"62b64321211bbf9d036435ff71b37a4fb5b2b714","2016-03-26 18:16:39-07:00","Vulkan: Allocate forwards in device slabs.
"
"27a5697a96563f5a21d199441533e3c3d7c9b7c8","2016-03-26 18:22:21-07:00","Vulkan: Use the slab allocator for textures.
"
"16570f10bdc0f565cdc4ebacca5c48ed4a8046b7","2016-03-26 18:41:53-07:00","Vulkan: Handle texture allocation failure.

Users hit out of memory even using desktop GL devices, and it will
definitely be possible on mobile and desktop Vulkan.
"
"3352608027a342e5bd632dad1f275fcad054c34b","2016-03-26 20:19:58-07:00","Vulkan: Free texture slabs on exit.
"
"ed41785692ae5f27e5e17353cd628435663c7141","2016-03-27 08:33:22-07:00","Vulkan: Add EndFrame to texture cache.
"
"6fd0f308bd54612cb0f3ee6f84da9e88d2e54159","2016-03-27 17:45:51+02:00","Merge pull request #8670 from unknownbrackets/vulkan-mem

Add and use a texture pool manager for Vulkan
"
"4ae39d15e59b0cc61dac9e57e6deb5306b1da75a","2016-03-27 08:52:55-07:00","Vulkan: Add some basic info for reporting.
"
"59788d91a91485cef49eefbae1150ca85d5f9b7a","2016-03-27 18:18:13+02:00","Merge pull request #8674 from unknownbrackets/vulkan-debug

Vulkan: Add some basic info for reporting
"
"048a12f589cd87e06216a45e16bd4ee8e63f1aa2","2016-03-27 09:25:25-07:00","Buildfix.

Some compilers didn't like that, oops.
"
"14363a22db1c21c2fac0e359da2d00c57967b806","2016-03-27 09:26:34-07:00","Oops, one more typo.

This one didn't break anything, but better to be safe.
"
"8dd93576eca8a2a6677a4a3f973b00c99d311760","2016-03-27 12:38:15-07:00","Vulkan: Ignore queued frees after destroy.

We flush slabs so this gives false assertions in some cases.
"
"1aa8370f1110fa8324a3e237defca3c74cee1fa1","2016-03-27 12:39:01-07:00","Vulkan: Use logic ops when available.
"
"4ad0af4e6b6756e6b3cac0ad90e035e9c2a1835d","2016-03-27 22:39:06+02:00","Merge pull request #8676 from unknownbrackets/vulkan-minor

Fix a wrong assertion on exit and enable logic ops in Vulkan
"
"a8c386b94cbaf09925c99d2c55e433c998ce553a","2016-03-28 18:18:49+02:00","Make VulkanImage a little more flexible (make it possible to create depth images)

Just preparation.
"
"0a8d74728aab44cdf5bb4cb64f2bd43758a4b7ad","2016-03-28 18:40:23+02:00","x86/64: Add a couple of more cases to very minor vertex skinning optimization
"
"40d05e292c1943c087b32dc2d8f664c667b83328","2016-03-28 19:57:42+02:00","Cleanup in FramebufferVulkan to reduce the size of future diffs
"
"e2b58a05a6b841e736df08cb26ccdef6fac43a13","2016-03-28 21:35:16+02:00","Buildfix
"
"c75e9a09901cc3e387a46ec27461793620d2c200","2016-03-31 00:46:50+02:00","Fix vertex pushbuffer allocation for games that use indexed drawing with the same base repeatedly.
"
"e124962d1513eae6e9ccd2f1c1fcacffb06b8e7c","2016-03-31 00:47:46+02:00","Fix depth/stencil clears (already fixed in framebuffer branch)
"
"339daede56288ff4c140a923cab8284184b9b481","2016-03-22 00:12:41+01:00","Clean up, start building some scaffolding
"
"2e55ba345caf43e32490cd3b104a3c9ae50f8088","2016-03-22 18:18:15+01:00","Some comments
"
"731af0d0b4fd8baad12ce16a346bfc534940c574","2016-03-28 22:14:04+02:00","Add some infrastructure for 2D drawing, to be used by the Vulkan framebuffer manager
"
"f52fd0c853f7a7cb3b69d1c3e3e14cdf412f3dc5","2016-03-30 21:17:20+02:00","FramebufferVulkan: Fix DrawPixels
"
"9f918fd11b78e7ce21ee2986c4f015aee96f444b","2016-03-30 22:00:23+02:00","Start hooking up framebuffers to CopyDisplayToOutput
"
"2b996db298f18b4c4c106d9d898f645e36f7c81d","2016-03-30 22:17:40+02:00","Crash and leak fixes
"
"c2b66a0882c69c30d5057382aa7ff4ef941a4ff0","2016-03-30 22:53:06+02:00","Another leak fix, buildfix
"
"32f5930e15a5a97a8cf7fd467c20d23fd14d056b","2016-03-30 23:26:16+02:00","Move clear handling to FramebufferVulkan, center the clear properly in non-buffered. more cleanup.
"
"51f0e504b3608221673a66ac27ef6af0cf6e483f","2016-03-30 23:39:07+02:00","oops
"
"718789b99ddf5c58689e645fb90608210cb29c23","2016-03-31 09:23:17+02:00","Some cleanup in framebuffer code. Don't set BlendColor dynstate unless we need it.
"
"00d60d0068c9e341fabdb5671037bcdc97b8fc3f","2016-03-31 09:27:42+02:00","Merge pull request #8680 from hrydgard/vulkan-framebuffer

Vulkan framebuffer - First steps
"
"004c8b0fca49ea2dcb096cc52746ac88159c8cd9","2016-03-31 09:47:25+02:00","Make debug stats more compact.
"
"5ef608fa50fd31830871d54976317d44889cd229","2016-03-31 10:17:02+02:00","GPU stats: Have each backend format its own string.
"
"c1e9df0777483bfe1b6b96274d20490e980d1e69","2016-03-31 10:23:40+02:00","Adjust the displayed debug stats for each backend. Cleanup.
"
"ad0da06f65bb89a123bf26656bb55ba58d3ceef1","2016-04-02 10:28:38+02:00","Forgot to remove these from the debug string.
"
"727058fc276b1b1923ea9269f7440df0e716b2a6","2016-04-02 11:06:05+02:00","Remove an entry from GPUStats that didn't really belong.
"
"861a30a6cdeb7fd6a856a55c3dad5d896da6f333","2016-04-02 11:06:39+02:00","Fix an assortment of minor resource leaks, make vulkan validator happier.
"
"e1f660ebc14d377c706f4df71627d7cdcd20ee1a","2016-04-02 23:57:23+02:00","Update vulkan structure init to the new style
"
"5cd3956575043a54eb145483b15173fd60936e77","2016-04-03 00:01:56+02:00","Reformat VulkanContext.cpp (fix tab indentation)
"
"617bcebcd6c0e1446e87bbc18cebcb44fda93db1","2016-04-07 22:51:52+02:00","Update to latest vulkan header (1.0.8)
"
"e1bf0d3f81e7d771b71cac08657041bfe5bbec69","2016-04-07 23:30:45+02:00","Update glslang, lang submodules
"
"37616a6f95b2c85a8f50ca1f4415da45d02ac7bc","2016-04-07 23:45:23+02:00","Update the Vulkan validator workarounds to match the 1.0.8 validator... gah.
"
"62aaeb39b05f414d27529a9f56876279bd7bf35e","2016-04-09 10:30:23+02:00","Vulkan texture cache: Remove the 'replaceImages' path.

Images alloc is so fast, and we'd need to double buffer some images
anyway, better not to.
"
"0c1e7dcc184c05e900b22df64b47f5b6f0df46e5","2016-04-09 16:16:05+02:00","Use the OS to clear the CPU cache instead of the gcc builtin. Experiment for the S7 issues.
"
"83d564f883dac62deebe54ea8843044ee97c1d01","2016-04-09 17:38:33+02:00","Fix a potential crash in SoftGpu (crash logs seem to point here)
"
"774539dea8a9521e8d8df2908082f7eb43be099e","2016-04-09 18:20:31+02:00","Add more error checking in net resolve.
"
"4197148dc42926f845c97dfb221567cd2714fd54","2016-04-09 18:21:31+02:00","Add some paranoid checks hoping to fix crashes reported in Google Play developer console.
"
"3db8f7d3203f4908128b6d361c34273db8e9b79c","2016-04-09 12:08:43-07:00","Allow shader framebuffer fetch on GLES3 only.

Note: before we did not support it properly on GLES3 devices.
"
"55b8dc1261f6d0b5f1e1ff81428781c811c350cf","2016-04-09 22:29:41+02:00","Merge pull request #8685 from unknownbrackets/gpu-fetch

Allow shader framebuffer fetch on GLES3 only
"
"d909b0395bf33751a4c903e0cba75edd83270bca","2016-04-09 21:10:41-07:00","Make tests use high quality splines.
"
"59d9524308f20f0cb30bd4c9c02ea1a21d1035d2","2016-04-09 21:10:52-07:00","Switch bernsteins to use sse-friendly Vec3f.
"
"2bafba3909e499d08bbcad20c6eaea8882c93357","2016-04-09 21:24:19-07:00","Interpolate bezier patch colors using bernstein.

This closely matches hardware (some color values seem to be off by one.)

See #7525.
"
"2314a0f0ee942c7a327c1605e70647dd5e4721e5","2016-04-09 21:46:50-07:00","Update note per hardware testing.
"
"555c76d43914e92b9f35a68a3a0dc87a40f034c1","2016-04-09 22:05:48-07:00","Use bernstein for texcoord interpolation too.

This also closely matches hardware.
"
"c0660c5ee775285ece57ee7e1e657f6a87018a6a","2016-04-09 22:20:57-07:00","Simplify some repeated code patterns a bit.

Doesn't save many lines of actual code, though...
"
"0fdb711c4f6a360867b9f0dd07a558bc6639a19a","2016-04-10 09:26:57+02:00","Merge pull request #8686 from unknownbrackets/bezier

Interpolate bezier patch colors/UVs using bernstein
"
"e611915a52373b09f3104a7afc27a554afe30cfc","2016-04-10 10:21:48+02:00","Rename some GPU classes and enums to fix some consistency issues between the backends.
"
"7cb61920056b786fbe0e439447037b6f9a273b1e","2016-04-10 10:27:28+02:00","Rename the TransformPipeline files to DrawEngine, and GLES_GPU to GPU_GLES
"
"fa644179175ef4647ee6271b5878f479cfadc899","2016-04-10 10:34:39+02:00","Minor warning fixes
"
"58f77e8f5ffca7dae491afa098f03806cd845d0d","2016-04-10 10:55:13+02:00","Buildfix
"
"d85dce0c21493d02ab2523287161cb03f06d93e3","2016-04-10 10:59:23+02:00","Add limited support for newly discovered 32-bit index buffer format (by unknownbrackets)

See https://github.com/hrydgard/pspautotests/pull/184

Will truncate indices past 65536.
"
"1e0051a7922e3c371cc333af450a84e38ee0606c","2016-04-10 01:52:51-07:00","Add support for 32-bit indices.

Not clear how often these are used by games.  Let's find out.
"
"8ab9bcc3a8013c353b1884165b839e8e5d2790d0","2016-04-10 11:27:00+02:00","Merge pull request #8687 from unknownbrackets/ind32

Add support for 32-bit indices
"
"02995ff0837b2420f4fcd4ba19ad7ddbf458ae86","2016-04-10 01:52:51-07:00","Tiny cleanup to indexgen.
"
"3d5dd245282233af375b70b3afd68bf23eb02b01","2016-04-10 02:31:56-07:00","Remove an unnecessary func define.

Was already moved to FramebufferCommon.
"
"277b76e2ae9ea28e74c2fab52d1bde827a1c7f00","2016-04-10 11:58:15-07:00","Treat GE_PATCHPRIM_UNKNOWN as points.

Confirmed by tests on hardware - although it's doubtful any games use
this type.
"
"808c807448adf8dd0c33c3c1c02af7d9eb1f6b00","2016-04-10 12:10:15-07:00","Allow tessellation with less than a 4 factor.

Per tests on real hardware, this is allowed.  It works fine without the
clamping and matches the result on hardware.
"
"4a214af3674b62ec02d8da52fcc8e4aced8b586f","2016-04-10 21:40:37+02:00","Merge pull request #8688 from unknownbrackets/bezier

Minor improvements to bezier accuracy
"
"868bbb8ebe8c92246dd77692c86fad0f84057969","2016-04-10 12:59:06-07:00","Advance vertex/index pointers on bezier submit.

Just like other primitives.
"
"e95b2cf0d5920a0df2d28d27800d10c47266c9f2","2016-04-10 13:07:08-07:00","Reduce some repetitive code.
"
"d920ffdcad86bf43d1e0aaef3cff92179d5bb417","2016-04-10 13:11:55-07:00","Ignore upper bits of prim type.

This matches tests on what hardware does.
"
"9a11cfb7a33ddc7855cd4fdc09bdf215a0ae5abd","2016-04-10 22:30:08+02:00","Merge pull request #8689 from unknownbrackets/bezier

Advance vertex/index pointers on bezier submit
"
"b1f0d4869cbdcf9a0d4cc833537a88eb87eb1ff1","2016-04-10 17:12:48-07:00","Advance pointers after drawing splines.

Tests show this is just like beziers.
"
"0cd44e838b85277c8e666ca07d53cc7ae280c702","2016-04-10 17:33:34-07:00","Allow spline subdivisions below 2.
"
"9224eb375f63d1334feb77fb381981e5cc28feac","2016-04-10 17:53:50-07:00","Correct bezier handling for 0 division.

This should still be drawn and treated as 1.
"
"5e20ba18114c4c37c15e144598952d370e81edfe","2016-04-13 20:06:51+08:00","Temporarily disable PMP video for non-windows
"
"a0397bce4ca8919db0da0ad42e726845dd127d57","2016-04-13 23:15:41-07:00","Hopefully fix prescale in remasters.

Don't actually have a remaster to test, though.
"
"614665068a7691ba917d46a5311e1a6c28b861e0","2016-04-13 23:34:45-07:00","Implement morphing for texcoords.

Tests show that this can be used.
"
"ff802a983a1f8e6483455f889c41be74c9610c67","2016-04-16 17:45:05-07:00","vertexjit: Implement x86 tc morph decoding.
"
"ebce8d275378c7f75f2f53d3ac7c20a56f47b075","2016-04-16 19:00:34-07:00","Don't convert to float with prescale off.

Since we assume we need to normalize, it seems.
"
"f9ba0d7321598b597bf20610fc83946c0afb71a3","2016-04-18 20:08:07-07:00","Correct dependency handling when loading modules.

Should help #8700.
"
"5a748263728c36470f6041a8894838266f279a73","2016-04-18 20:17:49-07:00","Use new logging in utility module load/unload.
"
"bc03aa11f21bd86bc0e9a5f50a2aa60faca9b61f","2016-04-18 20:19:27-07:00","Log module id as hex, clearer.
"
"9434dfdd90e22281e9d9dd671d245bc317bc3101","2016-04-19 09:33:50+02:00","Merge pull request #8701 from unknownbrackets/utility-deps

Correct dependency handling when loading modules
"
"08ec95ae4f94b899af3306171cb9ff0e55ca427d","2016-04-20 11:35:05+02:00","Merge pull request #8699 from unknownbrackets/morph

Apply morphing to texcoord values
"
"1cd89a019c002ddc8ebd6c0f0f0cd81be5c5fe67","2016-04-21 12:31:56+03:00","Build fix for linux using Qt build tools. Corrects gcc version detection. Before patch some lines in g++ --vesrion output could be incorrectly recognized as version 4.6 and therefore keyword 'override' would be declared as macro despite being known to compiler. This was leading to compile error. Should fix #8695.
"
"a484c7ab8655c366675f977123d927aadf5ba49f","2016-04-21 13:59:14+02:00","Merge pull request #8705 from thesourcehim/master

Build fix for linux using Qt build tools. Should fix #8695.
"
"a53bd5c8128f840d6b2feaba951471ad42af46e4","2016-04-21 23:03:08-04:00","Changed possibly incorrect return value.

After Windows 8, Microsoft stopped supporting GetVersionEX and
VerifyVersionInfo.
MSFT added 'VersionHelperFunctions,' but they aren't usable/viable at
the moment.
Related bug: https://github.com/hrydgard/ppsspp/issues/7894
"
"571b2c6b7a6074a6a36d152e8cc6a0efb0f1c173","2016-04-22 09:59:01+02:00","Merge pull request #8706 from helloimowen/master

Changed possibly incorrect return value.
"
"259c696a35974cf260b8762c059c07cd37e820b0","2016-04-24 09:33:35+02:00","Merge pull request #8690 from unknownbrackets/spline

Minor spline and bezier accuracy improvements
"
"a518ad783d6757c26de98c09f7f2f2aebb47f4ca","2016-04-24 11:51:06-07:00","UI: Align screenshot preview in savestate manager.
"
"6e5e496115c0518b3f22dbdceae74f1110dc65a4","2016-04-24 23:37:47+02:00","Merge pull request #8709 from unknownbrackets/ui-tweaks

UI: Align screenshot preview in savestate manager
"
"bf39e61458e5dce539181e59ae9f247c566c4bd2","2016-04-30 13:44:31-07:00","Setup initial structure for texture replacements.
"
"c4e98433b88ee5d575404565e1fc1302c27d806e","2016-04-30 14:05:03-07:00","Add config to save or load replaced textures.
"
"cf53948cf6ee5cc570b36713f290c936fac7e960","2016-04-30 14:19:23-07:00","Implement some initial hashing so it's not broken.
"
"5dbc2b9267e6f3b7f97dc128ba071ad816897176","2016-04-30 15:03:39-07:00","Initial support for saving textures to PNGs.
"
"9039dd606fe0d3674653c345fe01905e6159756b","2016-04-30 15:07:56-07:00","Move TextureReplacer to Core.

Probably makes more sense here after all.
"
"565653c77b031dee1162ecb7a394e6e4c85cceab","2016-04-30 15:18:45-07:00","Save and load textures using full key.

Of course, need this, not just the hash.
"
"d6e5df6f21080919bfe760006c5917caadd8573e","2016-04-30 15:21:48-07:00","Save individual mip levels.
"
"59ada74deb0c4df1476d2e1e83b40889e8cb63a7","2016-04-30 15:41:12-07:00","Allow hashes to be ignored explicitly.

Still need the actual ini hookup.
"
"4f3bac1b0a6d8de657ecffed19ef62313b6d55b1","2016-04-30 16:21:16-07:00","Actually load the texture replacement ini file.
"
"f039259a1a6ea7e52fae085d8ea8353c31bee58c","2016-04-30 16:26:18-07:00","Use a same-everywhere quick hash for now.
"
"0c357c0ea372dacd5b6d33e31d5d2e6414e3550c","2016-04-30 16:29:46-07:00","Pass w/h in for replacement lookup.

So we can scale the w/h properly.
"
"120cd0fb7e97848a0a5118d863484346808b0928","2016-04-30 16:33:09-07:00","Don't convert pixels we're not going to use anyway.
"
"6d0c7a9faf9cc399a7ccf4d5ca78510f51d50b26","2016-04-30 17:30:32-07:00","Skip gaps in texture replacement hashing.

This should hopefully provide the least duplicates possible.
"
"c1a8edfedfcc10dfcea01ce0270b5a5659efe22d","2016-04-30 18:39:30-07:00","Replace textures from PNGs.
"
"149de4147a9eb7d1f178929a8b3275880639fb19","2016-04-30 18:39:40-07:00","Skip replacements for PPGe textures.
"
"9ffc717de10758caeeb0d2273665cbe99acd7528","2016-04-30 19:00:20-07:00","Properly save 16-bit textures for replacements.
"
"f536182b37f3bf20d2796c4c0dae9d9d4682f8c6","2016-04-30 19:35:35-07:00","Cache texture replacement lookup info.

This way we can avoid hitting the disk where possible.  We could even
preload.
"
"7528605d3d22d555d848959a598f295cd139f75e","2016-04-30 20:17:03-07:00","Correct loading replaced upscaled textures.
"
"7a4af06cee5272d15caee3291edd12b22801b5ec","2016-04-30 20:21:08-07:00","Save new textures into a separate path.

This way you can tell which ones you've done already.
"
"e1fd6b6f21dca0d1d1ac8b73153cd0cee6490162","2016-04-30 20:33:14-07:00","Account for scaleFactor when saving clipped PNG.
"
"223f95f28ce31f8a24137bcd732a0e2d5729ed6f","2016-04-30 20:55:30-07:00","Allow a short alias for video frames, etc.
"
"bed82da3526515ba1b2487f1ad45a5d85da321ed","2016-04-30 21:10:48-07:00","Make ini case insensitive.
"
"c4b27525e0d37354635f2c3dd9d65f7ebed724b5","2016-04-30 22:09:07-07:00","Disable texture replacement on Qt.
"
"f26c0328da9f1710c9532d6a1dd0840b71bfce5b","2016-04-30 23:58:58-07:00","Check alpha when loading replaced textures.
"
"23ab2cd187d82e95f1b579b7002198f7b158e9d8","2016-04-30 23:59:17-07:00","Vulkan: Correct check alpha.
"
"cd6f36a43993642cefce91e8b47ba6a5d0a819eb","2016-05-01 00:20:58-07:00","Correct handling of 8 bit and no-alpha PNGs.
"
"450554450ff7fbde3c82c61f9ec602a4a6708b28","2016-05-01 00:33:37-07:00","Attempt to buildfix Symbian.
"
"4645473dab11b47804c26593e6b1b1181f357d65","2016-04-14 12:18:53+02:00","Remove unused code
"
"106a7d6a3b769ba0d1b1f9d2e92e5478204d4595","2016-04-30 23:10:00+02:00","Remove more unused code (advanceCallback)
"
"a5be0976bd0a8afc44bee2355f80c46df4c5bb92","2016-05-01 01:20:21+02:00","Remove preprocessor hacks to choose JIT implementation.

Opens up for having multiple JIT implementations available at runtime,
which could be use for experimenting with new JIT compiler types or for
unit testing one JIT on another architecture.

Very few of the newly virtual calls are on any sort of critical path so
hopefully there will not be a performance loss.
"
"5aadce59a2ede8836bb5a0690af56d466d23321d","2016-05-01 10:25:01+02:00","Move architecture-specific code out of JitBlockCache
"
"8b450c80340906685be07bd1c212cf97b0200b48","2016-05-01 10:35:37+02:00","Merge NativeJit.cpp/h with JitCommon.cpp/h
"
"ffe4c266eff69a912d398d10fd72963f178b6bec","2016-05-01 11:13:51+02:00","Add CodeBlockCommon base class to remove further arch-specificity in JitBlockCache

Remove unused ArmThunk.
"
"e91fc59bbe148a7e718b4e872be738b6e78fb34f","2016-05-01 11:49:55+02:00","Merge pull request #8693 from sum2012/pmp-video

Temporarily disable PMP video for non-windows
"
"329be68f574d1d09c1ae1eaaf4a4d1946330aafb","2016-05-01 08:04:15-07:00","Fix error when disabled.

We want to return a reference here, so let's always return.
"
"99d29356d7bc999f16fd3ce59bc36a00be8669b6","2016-05-01 08:39:18-07:00","Track video addresses in texture cache.
"
"f5b93bc6f059daa803531167a170f172d0ddf557","2016-05-01 08:53:48-07:00","Remove global num videos hack.
"
"c20075b0e0ff8896fa7e8fb2fa3757f17f3f93f5","2016-05-01 08:54:43-07:00","Pass video info to texture replacements.
"
"994d2dd85e5d43761ae94e5738865502fa0e4e39","2016-05-01 08:58:14-07:00","Skip video in replacement saving by default.
"
"c30287c4e58f00ca73e03c6650594df7658c1223","2016-05-01 09:01:14-07:00","Another buildfix for Qt, linking issue.

This is a bit of a hack, but it resolves the linking issue that only
seems to happen in the Qt build system.
"
"ccce19e14a9b6d8d51b691fe933e5e0d81c558ec","2016-05-01 18:47:32+02:00","Fix accidentally truncated comment.
"
"b6d7aab8dc638012ff44fe656fc98753c04cf9bd","2016-05-01 18:47:59+02:00","Merge pull request #8716 from hrydgard/remove-preprocessor-hacks

Remove preprocessor hacks around the JITs
"
"2e1986d0c88b47a393e66f3ceccba8b07ea6caf0","2016-05-01 09:50:03-07:00","Fix a few reorder warnings.
"
"9280bb3eda487176e0501ce47a16d029abb5a784","2016-05-01 09:58:16-07:00","Merge pull request #8715 from unknownbrackets/tex-replace

Initial texture replacement support
"
"1a26699607d8fe7bf1a989eabed0b0f4a81e216c","2016-05-01 11:17:55-07:00","Refactor texture loading to move things around.
"
"82c1eaad65d2347eb000b03ee87c196f707a6220","2016-05-01 13:03:40-07:00","Let's not overuse nextTexture_.
"
"bce5c74dbfa60f060bcf27e08a09e64ed8a30015","2016-05-01 13:11:35-07:00","Refactor out texture rehash check.
"
"fbef79826b00a462a1cd9297c6842ace6a7bb36d","2016-05-01 13:22:53-07:00","Oops, correct replaceImages.
"
"6bd86f462d1f90c3e65d1e64dfb777248ce4c09c","2016-05-01 13:24:53-07:00","Move texture hashing to end of texture apply.

This might also make it more possible to do it on a thread, but it's
likely still too quick.
"
"bfe23361cdcda391d61bb0d986c872e94f042e7d","2016-05-01 12:57:17-07:00","Update maxSeenV earlier.

Now, the initial fullhash is already on the correct range.
"
"4ce02e0920646fa38f5ab3adf40fc74963141126","2016-05-01 13:42:06-07:00","Fix a couple more bugs in texture build.
"
"f1dda6a53d3d7fc8d01038e2ce4bd5d3959906ce","2016-05-01 16:20:05-07:00","d3d9: Move texture hashing after vertex decode.
"
"ffef628667e656fd9d48fc6e8fb2e9a04cd3eb86","2016-05-01 16:25:09-07:00","Vulkan: Move ApplyTexture after vert decode.
"
"53535558f8780a82fd0f6d4fe6b23975fff55206","2016-05-01 17:27:14-07:00","Vulkan: Move texture hash/decode after vtx decode.
"
"a4ca07e683f22217ae7914b4c5743e588ef36429","2016-04-09 11:40:12+02:00","Hide the Vulkan option on Android until it works.
"
"49a6a2f6cff03f4c8667ca8122263636f7dbd373","2016-05-06 21:22:21+02:00","Minor refactor - let's not access a global when we don't need to
"
"5eb66fe167fc1361542671dcbef0ae78fd5c87f4","2016-05-06 19:51:03-07:00","Vulkan: Allocate more image samplers by default.
"
"844d96f0551da4e2111c8ff9de2b76de83600445","2016-05-01 17:35:26-07:00","Vulkan: Free allocator safely on exit.
"
"4650a288cdd7fb264211c014aef5c4c7d1d8cdc7","2016-05-06 19:54:50-07:00","Vulkan: Fix auto tex scaling reload.
"
"4b89f44d1ca3df2750fefc6ae0273f3257ca3e65","2016-05-06 19:58:01-07:00","Avoid scheduling a rescale when scaling is off.

This happens for PPGe and kernel textures, and replacements.  Before, we
would continually reload, trying to scale, but each time decide not to
scale.
"
"5309d825c10536af053b2f7a290e66cfe5494052","2016-05-07 09:32:31+02:00","Merge pull request #8722 from unknownbrackets/vulkan-alloc

Allocate more samplers in Vulkan, other fixes
"
"98f2ceed5997c70f170e16ee645356b4106476cf","2016-05-07 09:37:42+02:00","Merge pull request #8723 from unknownbrackets/tex-replace

Avoid scheduling a rescale when scaling is off for the texture
"
"d399c4a4708b4022ae159388098c09d693c01968","2016-05-06 23:45:37+02:00","Initial commit for IRJit
"
"4acf85aa06ffbfdc54a936993aa4e310b0a75367","2016-05-07 17:37:19+02:00","It's kind of starting to run
"
"12edfcea5aad7ff0509229154a2bfcb1d080ea5f","2016-05-07 21:00:30+02:00","Enough to run cpu_alu.prx.
"
"38b7d89dfbbf49a036a1ee4536e52085bd4265e0","2016-05-07 21:34:27+02:00","Fix a performance issue in CallSyscall
"
"3c5510e5a36be46800dcdb7a8417f90007231368","2016-05-07 21:35:12+02:00","Disable debug file logging, fix issue with replacement functions, etc
"
"2c84411426fa74c6b2eefb62c6b7441c696fa697","2016-05-07 22:15:19+02:00","Merge pull request #8720 from unknownbrackets/tex-range

Move texture decode/hash to after vertex decode
"
"750d520cc7361e943636a4128274ccdade0fac60","2016-05-07 22:27:58+02:00","Initial work on mult and friends. Fix another bug.
"
"a33f8b68c62bd483d8a8c018398d9be9262313d3","2016-05-07 23:12:53+02:00","ir-jit: Get rid of the regcache. Should be replaced with optimization passes.
"
"09969c0156162fdf9b4cbf8dcaacbd9dad19706f","2016-05-08 01:06:07+02:00","Use the regcache in a new (incomplete) pass, PropagateConstants.
"
"ce8aae5ed1eca2e2e10f0ffaaa2303b8e83a6d34","2016-05-08 01:43:27+02:00","Make the IRJit core selectable in developer tools
"
"1a2edc67d07ca63e6659fa38b9675e2c415c609f","2016-05-08 02:03:11+02:00","Add support for float store/load
"
"7d4774db4c1bdea52d12781586b5c8168fe5ba8c","2016-05-08 02:08:25+02:00","Fix wsbw
"
"e750987052b8a5eea356d1535c7cd21181fc606a","2016-05-08 02:08:54+02:00","ir-jit: Fix bug in ext
"
"46e839b2b2f09c60c1e356a4c8ae7997b40fa020","2016-05-08 02:26:36+02:00","ir-jit: Fix bugs in rounding
"
"aae32bd929e9aed2cd4444477960028b0325d3eb","2016-05-08 02:47:19+02:00","ir-jit: Re-enable mult. Fix bvf/bvt
"
"14df39d7c9987f5daf50901869dfd2583f8e567d","2016-05-08 10:36:37+02:00","Fix IRTEMP clash bug. Add more cases to the constant propagation pass.
"
"98113edbd4359441df7ce25241bb2ee34ba66670","2016-05-08 11:29:11+02:00","More simplify pass
"
"3eb5480adeec8896e57f938c8cd667eea65829a6","2016-05-08 13:32:22+02:00","Initial VFPU
"
"492ea5fac43f015eade155861bb9c248dff1d761","2016-05-08 21:38:03+02:00","Address a bunch of comments, thanks for the review
"
"f8659b8e1e59cf570cd0f44a786d004311fdfb06","2016-05-08 21:56:52+02:00","Move the IR interpreter out into its own file. Rename it in the UI.  First CMake and Android fixes.
"
"4e52f613f115682f42f57d827bc55ce187083205","2016-05-08 22:23:51+02:00","Additional fixes and buildfixes
"
"ed0a0378d788006287091f51178aa7e4a1f285ba","2016-05-08 22:27:20+02:00","Another buildfix
"
"52517ab609b8d3c940d532406cfe131278417243","2016-05-08 22:32:08+02:00","Fix the fix
"
"5dbac165f434ac0f1699c752e5768ea47655c207","2016-05-08 14:06:42-07:00","Qt, gcc, and Symbian buildfixes.
"
"d4480d50fdad77788e7c0fc717a7c312b79ff6b2","2016-05-08 22:54:07+02:00","jit-ir: Less instructions cause flushing in constant propagation.
"
"c7e4658b6d9fa0fc1ea1f6116767c7f091f35686","2016-05-08 23:25:47+02:00","More constant propagation
"
"d19174b52b82b56f9f35265b1c5c7f319dbd9a28","2016-05-08 14:56:43-07:00","jit-ir: Skip const flush on downcount op.

This allows discarding more unused constants.
"
"0d7f15116761922d60dab15e6f4524bac9f9d23b","2016-05-08 16:08:35-07:00","jit-ir: Add a utility func for applying passes.
"
"d09f3a22a8d288aa1feab6b8b037cead76b1c7ca","2016-05-08 16:19:48-07:00","jit-ir: Propagate single-op constants.
"
"a22ff68e9ee0735811dfe95b34eafe65e53108fc","2016-05-08 18:48:05-07:00","jit-ir: Skip flushing when updating PC.
"
"a1b4b5170c0295fe454e5d757278978358e5ba7c","2016-05-08 18:59:32-07:00","jit-ir: Propagate constants even for overlaps.
"
"5221a02db4188f6c27cae682beaada8a04dad84b","2016-05-08 19:11:58-07:00","jit-ir: Propagate constants for shifts.

This might optimize away an IRTEMP_0 in such cases.
"
"6bd31ecb272409d5742df7c5dff4dfb87a56dad3","2016-05-08 21:25:34-07:00","jit-ir: Flush consts better for a few f/v ops.
"
"7ce923d01f17926bcec8cc1b9f5217ad832f4397","2016-05-08 22:11:53-07:00","jit-ir: Fix SetConstV.

Oops.
"
"f638477b9a4007ce7d8dcdecf44a4e8db56f4f48","2016-05-08 22:17:39-07:00","jit-ir: Add the rest to PropagateConstants.

Just for completeness.
"
"f6d245f3c4a5ce32fc978652ac05578deff3858e","2016-05-09 00:13:01-07:00","jit-ir: Remove redundant simplify pass.

This is just doing the same thing as the const folding pass, really.
"
"ccb8f8d77e5fef95b2cde188b1f303d40ac466af","2016-05-09 00:36:38-07:00","jit-ir: Fix replacement hooks.
"
"dee2a7e651466e5f680937b8f97810c9306e4ab4","2016-05-09 10:05:53+02:00","Merge pull request #8727 from unknownbrackets/ir-jit

Apply more constant propagation to IR
"
"eb6551d72a71288477abdef92a7aebf7ba5dba59","2016-05-09 01:10:04-07:00","jit-ir: Correct downcount handling.

Oops, was wrong - already accounted for delay slots.  Clear so we don't
double count when emitting a syscall.

Fixes FF4 utility msg flickering.
"
"b1a180d9fbcda48ec948ea61a49e40f67024f936","2016-05-09 10:42:26+02:00","Merge pull request #8731 from unknownbrackets/ir-jit

jit-ir: Correct downcount handling
"
"f50617d67924b32c6193648cc74551d9bb93db84","2016-05-09 00:37:08+02:00","Skip const flush on set float constant
"
"6e44e97ffa48ffa8fbe0e4896e6696fb0851fb7d","2016-05-09 19:25:51+02:00","Refactor prep: Split JitInterface into MIPSFrontendInterface and JitInterface
"
"e806c369b2f3b18ea6c8095ddbfe920fc4427b20","2016-05-09 19:57:18+02:00","Separate the IR frontend from the IR 'Jit'
"
"e711a47a7526bc2e3324be6e4158e5d2caa8fde7","2016-05-09 20:05:06+02:00","Complete the separation of the IR compiler frontend from the 'Jit'
"
"28087a6088c41c5cb7a9f56515f59b8ae38a741b","2016-05-09 20:18:22+02:00","IRFrontend shouldn't know about IRBlock
"
"a5d5c5ce2b589e4beb08f3ca61daad1e41bc10d5","2016-05-09 22:40:59+02:00","Do the voffset remapping before the IR. This will let us easily add some virtual VFPU registers for the IR to the end, plus it's slightly faster.
"
"558bb197c795d3caca1f6f52111a980ce2569c2b","2016-05-09 23:47:56+02:00","More VFPU
"
"45efcda6b1cd16f167e9310b78b91dd487e682e8","2016-05-10 21:50:08+02:00","IR: Some more VFPU
"
"db1d1ff9fdfdfaa1bf382060308629eab82aee9d","2016-05-10 22:55:27+02:00","IR: Merge the FPU and VFPU instruction sets, no reason to keep them apart
"
"b3dd36982f7a92596705f777e5bb42ef7c5eeb57","2016-05-10 23:14:26+02:00","Prefix prep
"
"219548b8e28627cebcb14f550a1f7287643a5796","2016-05-11 00:16:07+02:00","Prefix prep
"
"2cbfb192c4bc52e7167e927a9d1402d722134ef7","2016-05-12 12:17:25+02:00","IR: Lots more VFPU support, some with SIMD
"
"cb251ea93fa4296833e4ea7b4eca442bd88bb003","2016-05-12 12:18:12+02:00","Crashfix in savestate (hmmmm...)
"
"182674cddf7f5f1b03703a1bf14d5b8eee03d558","2016-05-12 13:10:26+02:00","IR: SIMD another matrix orientation. Fix various issues.
"
"850d0abc91fb29aece41586a3c9e35434c7ac494","2016-05-12 20:16:15+02:00","IR: More VFPU. Support normal fp compares.
"
"c69a8c07dc9b577c82c29e19dd4f62f791551954","2016-05-12 20:20:59+02:00","Forgot this
"
"1851458628fd5de7f76ebcaa823af499d997fe5e","2016-05-12 20:28:59+02:00","Bugfixes
"
"7268abec611ba76a4ad218ecbcb537068fc0aa93","2016-05-12 22:35:31+02:00","IR: vcmp, vcmov, vhdp
"
"99468c6fc157c173a537b53d9d514f8617460d94","2016-05-09 21:40:46-07:00","jit-ir: Optimize out unused temp regs.

This way, if constants have made the temp obsolete (common with ins, for
example), it won't even get set anymore.
"
"d06c6c080cf9b7d53aba958efc30681722eba42d","2016-05-09 22:25:35-07:00","jit-ir: Expand unused regs to regular GPRs.
"
"9f183c97ba53c392ea1fd4ac7bb43fad8dd2584b","2016-05-12 18:27:52-07:00","jit-ir: Prevent reading ahead for each reg write.
"
"29ed8d22012342f0dc1c57190bf4c17447e18537","2016-05-12 18:34:27-07:00","jit-ir: ExitToReg doesn't write to registers.
"
"a8126ca1321e82ebf0aa2db358161e8cf0febd25","2016-05-12 20:56:47-07:00","jit-ir: Add some missing CONDITIONAL_DISABLEs.
"
"57b3dbff7e800550517f24fbf44fe511a42263e9","2016-05-12 20:57:10-07:00","jit-ir: Avoid flushing on a few Vec4 ops.
"
"1ddb2fbfb99f73cf8363a15ca018ff9993961235","2016-05-12 21:02:56-07:00","jit-ir: Fix non-SSE Vec4Scale.
"
"c11c0465decc8f5e4bb26ce9ce478dc7a27f2de7","2016-05-12 21:25:57-07:00","jir-ir: Correct vftm SIMD regs.
"
"f52120353b6ad4fc9b03bf79b6958f2749032f15","2016-05-12 22:29:31-07:00","jit-ir: Apply prefixes for vector init ops.

Without this, Gods Eater Burst is horribly broken.
"
"9e3572dc63b76c7eb06ad02efeb7e86786667e2a","2016-05-12 22:38:56-07:00","jit-ir: Improve vidt to handle more cases.
"
"7b43e0e59d561c8b410e9224ceffc4b784ce0904","2016-05-12 22:53:21-07:00","jit-ir: Add nan/inf compares.

Without this, Gods Eater Burst crashes before going in game.
"
"49b133971c99d1793f0f4c8f4e6adcf69493c784","2016-05-13 10:11:13+02:00","Merge pull request #8732 from unknownbrackets/ir-jit

Add a pass to remove temporary regs
"
"066b0b7fdfc18e70896935ef199eda13f60d04a1","2016-05-13 07:59:39-07:00","jit-ir: Optimize out beql; break; sequences.

These are often used following divs, and are harmless.  Things get a bit
easier if we just never compile them.
"
"fc9159fbdad7662221d3951ca187cdb4b6156f78","2016-05-13 17:06:23+02:00","Merge pull request #8733 from unknownbrackets/ir-jit

jit-ir: Optimize out beql; break; sequences
"
"f636b2a315cff83fcfc150af61536c4f02d5d831","2016-05-13 19:31:27+02:00","Minor build and other fixes
"
"91a6cf5e44e74e40ec740747a00444b543b30e32","2016-05-13 20:14:03+02:00","Add a couple more passes (2-op, optimize f<->v fp moves)
"
"5b2504120dabb47d1719b7a3902beb8a6825a9a4","2016-05-13 20:15:20+02:00","Optimize some common prefixes
"
"5923013d659f5b45eeef7660607c853673559c96","2016-05-13 20:21:19+02:00","Simple workaround for timing issue with coreState after syscall.

Also fixes off by one in ForceCheck.
"
"b7091a8f5da11bb8c02ebdbbf886f9b214134a10","2016-05-13 21:02:23+02:00","Simplifications and fixes
"
"b7224e269c822725ff2dc69220f18e6f31a2acf5","2016-05-13 19:50:25-07:00","Qt: Remove CPU core option from menu.

We've removed on Windows too, and this fixes a build error.
"
"efc8a8e3531f27dd2063e6ab7d726da60d487551","2016-05-13 20:17:20-07:00","Hack to make Symbian build.
"
"e2aca38f8b3990adb57951f17f5873e8015f57d2","2016-05-13 21:48:23-07:00","Try enabling Travis caching.
"
"042dcc170f87a749e12e69e293eb22358485fcad","2016-05-14 11:17:55+02:00","Merge pull request #8735 from hrydgard/ir-jit-test

Buildfixes + Travis caching
"
"7a7c3b9b9fa42a7254e33a3b9738cee831ab4048","2016-05-13 22:58:10+02:00","More VFPU, vmmul thoughts
"
"91bc3c31a58a12557a532b09cb81f78ddca75c54","2016-05-14 14:01:27+02:00","Warning fixes
"
"cc1a16b0e05f32e893d2c892eb63b578b6604af1","2016-05-14 14:01:59+02:00","Merge pull request #8725 from hrydgard/ir-jit

IR Interpreter
"
"64eda6a4ecd3362934fcb6bff66110dea73cfa09","2016-05-14 14:31:38+02:00","IR: Split Syscall into Syscall and ExitToPC, so we can put ApplyRoundingMode in between.
"
"b612806ee4e6fad899aa65ea141042f5af1c455b","2016-05-14 14:32:43+02:00","Remove accidentally added file
"
"0541fe36dff11464f225fe99abc09cad4b240d32","2016-05-14 15:26:43+02:00","Symbian buildfix, fix for fpu test
"
"51bcb029217668ab7fa74f00e3d2a1246d547621","2016-05-14 16:29:40+02:00","Minor vulkan updates to match the latest SDK/validator
"
"b74df87db0e89636f5b42c53556ad10325992868","2016-05-14 08:40:53-07:00","jit-ir: Clear emuhacks on block destroy.
"
"e37777648ecba0cb08bb1971fbb849039b2f111b","2016-05-14 08:57:52-07:00","jit-ir: Restore emuhacks before saving state.

Let's just ask jit to do this, not its block cache directly.
"
"1f28d802a3fefa8acf4b09f909c39cb055302c3a","2016-05-14 09:05:42-07:00","FreeBSD buildfix.

We need Common to have the right _M_SSE define.  Also, let's not define
SSE4 until we need it, since we might need ifs.
"
"8f430e9631e4654fc876ff5888007c1aced9ac28","2016-05-14 18:51:39+02:00","Merge pull request #8736 from unknownbrackets/ir-clear

Clear emuhacks on IR block destroy and save state
"
"f8f93efc0ed237fe874a285fa5dad709a87f9ae3","2016-05-14 09:29:21-07:00","Split the Android travis build into each ABI.

This will create more builds, but we can cache them uniquely, and they
will complete faster.
"
"9cda186f4b3089eacd28c26473cfa6a947ee7939","2016-05-14 09:49:38-07:00","Remove __TIME__ from Log.h.

This seems to cause more ccache misses, and I don't think it's terribly
useful really.
"
"d4e45f4e0a1f2882bb35b6f01945e58efd7f7a09","2016-05-14 20:14:00+02:00","Merge pull request #8737 from unknownbrackets/travis

Split the Android travis build into each ABI
"
"7c9f368d6307da66d428a940ee193a5b4eb08e9b","2016-05-14 14:21:53-07:00","jit-ir: Add some descriptions of mnemonics.

Sometimes I forget what vhdp etc. meant, let's make the VFPU code a bit
more accessible.
"
"d5d77b41f9fd4755075c221865ad310e75850812","2016-05-14 14:23:18-07:00","jit-ir: Properly flip vtfm simd cases.

Disable the broken one and add clearer comments.
"
"2e097b8996a3a3c5dcf492c41c8f6fe0dc36faa8","2016-05-14 14:28:05-07:00","Oops, typos.
"
"661360ecd9e434daaf4157abfcbacd260129eed4","2016-05-14 23:50:45+02:00","Merge pull request #8739 from unknownbrackets/ir-vfpu

Add descriptions to some vfpu funcs, correct vtfm
"
"01d63a1a9d89c50ad4d571d45b928aa87c106dc3","2016-05-14 16:20:21-07:00","jit-ir: Implement vmscl.
"
"e1dbcd724e8b11274711176e72f8cef38913e13b","2016-05-14 16:20:39-07:00","jit-ir: Oops, correct vtfm for transposed case.

The ones that are aligned are here in this case.  Fixes crash in Crisis
Core.
"
"8a3dce3b8bc310164a53287cc2c9c10515ca8077","2016-05-14 17:35:04-07:00","jit-ir: Comment most of the vfpu ops.
"
"4ac773e8b4c1e3e7d871ef4be3388c67252d8837","2016-05-14 18:20:55-07:00","jit-ir: Implement bit reverse instruction.
"
"a05ae2a0a6c2a3a2c0e64e6d47162f8f5c850808","2016-05-14 18:38:54-07:00","Correct divide by zero HI/LO values a bit.

Interpreter is now correct, but it's probably not all that important to
get right in jit.
"
"6413b44434efff3011dd6816b8258a83c69a2333","2016-05-14 18:46:55-07:00","jit-ir: Enable IR for madd(u)/msub(u).
"
"c606f64f718f15c0b547e17a7558846b7cba268c","2016-05-14 19:21:15-07:00","jit-ir: Add div/divu instructions.
"
"a5560c657eaa89e94eac9f5ac14b39c72d8312f7","2016-05-14 19:21:52-07:00","Headless: Use --ir instead of -ir.

Other multi-letter options are prefixed too, let's be consistent.
"
"205419a72ec22e2b97ade67f86122d29a55a2a6b","2016-05-15 09:43:41+02:00","Merge pull request #8741 from unknownbrackets/ir-alu

IR the remaining ALU ops, correct div by zero
"
"e140d36818e201b370d934ca250fbc5a351f9a63","2016-05-15 00:59:17-07:00","ir-jit: Oops, fix matrix scale + tranpose.
"
"168573e7111566c0488fd8c9676108aefda2a063","2016-05-15 10:08:22+02:00","Merge pull request #8740 from unknownbrackets/ir-vfpu

More VFPU comments, implement vmscl
"
"7046f960e5d1fbdf80c66c182824bfed074382cf","2016-05-14 21:12:32+02:00","IR: Add vrot
"
"905af75925c61ccc95bf4d1fbb435d081e83cd00","2016-05-15 10:34:30+02:00","vx2i, vbfy, vsgn
"
"d6c2b6e9ae93e234accdaca9309c89da6024598c","2016-05-15 11:45:34+02:00","Most of vi2x
"
"6bf1390603574311bb2e9737b8f3f20c71cec6d9","2016-05-15 01:32:37-07:00","Fix timing drift on CoreTiming::ForceCheck().

Since -1 -(-1) = 0, we'll never think we moved forward this way.
"
"fa61deae3da66e309c49bfb31eeeaed6187e2215","2016-05-15 12:43:18-07:00","Remove unused value.
"
"3f0fc2d8519387b395192d9ea76896c2aa041738","2016-05-15 13:10:04-07:00","jit-ir: Fix FSat0_1 behavior on -0.0f.
"
"ab1461facadf522500f9a7577200d159039f3c2c","2016-05-15 13:16:03-07:00","Add prefix handling to vfpu color conv per tests.
"
"e9601584907fe238510f0d13de3ecdc263cd4b8d","2016-05-15 14:03:45-07:00","jit-ir: Add notes and report about vrot prefixes.
"
"0698515274c04da47dc7d56803a1ea7ea7848539","2016-05-15 23:17:44+02:00","Merge pull request #8742 from unknownbrackets/ir-minor

Fix a few minor IR-related things
"
"f544364c4a2bf5277a5859fe53d788b5365d2466","2016-05-15 23:35:33+02:00","Fix bug in vus2i (thanks unknown), recognize vectors in IR disasm
"
"dc772e6f3ab7c2573ea62831456c4c513c680ce3","2016-05-15 23:39:42+02:00","Add missing cases to simplify pass
"
"fff898b5262c775c15554462e6be4955aada803d","2016-05-16 00:05:03+02:00","Log the block when 'uneaten prefix' happens
"
"26e9acee4b4721879206606e02db7ad4c31b4eb2","2016-05-15 15:54:04-07:00","Display: Skip transitions between off/on in FPS.

We're just trying to detect frequent flips, so off/on doesn't play into
it.
"
"958d7f0944280318f9b0dc189d918154fc7a6495","2016-05-15 15:55:04-07:00","Display: Record bufw/fmt even when display is off.

These are returned by sceDisplayGetFrameBuf().
"
"44cee09adc41cce84c1ee38ef3db742781182b38","2016-05-15 16:29:58-07:00","Dsiplay: Initialize the framebuf params better.
"
"249a85b7e0cc2fe027aef71dbe49f00c533ab849","2016-05-15 16:38:00-07:00","Display: Validate framebuf parameters.
"
"5e8e2d5e568d01a01bd87da911dd0381b0a216a4","2016-05-15 16:38:26-07:00","Display: Allow only immediate address changes.

It seems you must latch a change to stride/fmt first, which basically
makes sense.  Otherwise it would revert, I suppose.
"
"597824eec603fea09728906a6d8d2f5c90e12322","2016-05-15 22:16:31-07:00","Display: Add validation/report to set mode.

This seems to be involved in using the video out cable, but fails for
anything but these fixed parameters in normal situations.
"
"558d4297fc63a740696f7fa52eaccd7352fe6795","2016-05-16 08:04:37+02:00","Merge pull request #8743 from unknownbrackets/display-minor

Add validation to sceDisplaySetFramebuf
"
"9ed604f9c8e0744f2bdd1b0f9460145a2c8efb9e","2016-05-15 23:46:46-07:00","Display: Return 1 during the vsync period.

Timing is based on manual tests, where the vsync signal is near the end of
the vblank.  Curiously, it stops right before the vblank stops, reliably.
"
"b5b94f4a4d736ca471427dc3ba49773be59ac5c6","2016-05-16 09:19:47+02:00","Merge pull request #8747 from unknownbrackets/display-minor

Display: Return 1 during the vsync period
"
"d0dc03f359c48054148905408e9a401da827cc1c","2016-05-16 22:02:21-07:00","Display: Wait for vblank when setting mode.

Some games call this even when not needed, and it turns out to have an
important behavior.
"
"842e4509654d1bced7b4f31be4939702324752f8","2016-05-16 22:33:50-07:00","Display: Correct default brightness, add reporting.

Not sure if any games use hold/resume in a way that ought to work.
Display didn't seem to react to them being called.
"
"b1c7f3dd3fa0225e3768ab9f4b12b2ceb72517d6","2016-05-17 21:22:23-07:00","jit-ir: Correct vx2i with partial overlap.
"
"a9cdf7651e300d2b6df999e0adab8a9ea873f56d","2016-05-17 21:22:57-07:00","jit-ir: Mark prefixes unknown in mtv.
"
"5534fba72cf3a77ce2a62d60236ee9ef929ee25b","2016-05-17 21:24:13-07:00","jit-ir: Add load/store reorder and merge passes.

Can do more in merge, potentially.  Maybe it's not useful...
"
"ee31f09b67043622f0015d94e2059a89088b83a3","2016-05-18 07:12:21-07:00","Buildfix.
"
"dd8e2d326a6e5cb9d1cc6aa5eec18f15a67adb84","2016-05-18 16:29:49+02:00","Merge pull request #8752 from unknownbrackets/ir-vfpu

Add some load/store passes, fix bug in vx2i
"
"3cae60b32066793976c1eec465fb164a0bcc64e5","2016-05-18 21:22:08+02:00","Revert potentially dangerous optimization that may have caused #8754, though not sure how.
"
"0a58424e754697898b6f06eb0abb73eff43caa8b","2016-05-18 23:53:17+02:00","Vulkan: Remove validation layer that is now included in standard_validation
"
"3554024a055ef30997e647791e821c6aba0fa747","2016-05-19 08:49:19+02:00","Merge pull request #8750 from unknownbrackets/display-minor

Add vblank wait to sceDisplaySetMode, fix default brightness value
"
"5105e1947f91471ffbd11a09607f8394646664b0","2016-05-18 23:11:07-07:00","x86jit: Set HI/LO properly on divide by zero.
"
"2d3df5c621b4ad57109e04d0450e74a91f4287ec","2016-05-19 00:07:41-07:00","armjit: Handle divide by zero more accurately.

Turns out, some games may depend on this behavior.
"
"306f7423e748079518058847a91cd1b61e4777ac","2016-05-19 09:30:25+02:00","Merge pull request #8755 from unknownbrackets/cpu-div

Handle divide by zero more accurately in jit
"
"915ff42a9a7378c0796e4e57b0126bc67dd09482","2016-05-19 20:37:29-07:00","Detect clears even when outside scissor.

Verified that scissor affects clears as well.  This allows a clear to be
detected in Katamari Damacy.
"
"68717411b131f73c6d5c1389d9a7e8ea51fadde5","2016-05-19 20:55:34-07:00","Track when we see a clear indicate a size of a vfb.
"
"eee98966f4a852e192bedcde580558bc69176ee8","2016-05-19 21:17:17-07:00","Add Memory utility to detect shutdown.
"
"f08c873a4baeed8c04753ba9991824b47e992d1b","2016-05-19 21:23:22-07:00","Save FBOs on decimate when they have a safe size.

Fixes #7695.
"
"a0ce8025d6d540a7869d2444dd6dea0dc72ddf86","2016-05-20 08:41:54+02:00","Merge pull request #8757 from unknownbrackets/gpu-save-decimate

Save FBOs on decimate when a safe size is known
"
"f0cc975865002d82d77f69c586c86f918827eba9","2016-05-20 22:28:26-07:00","Hook some funcs in Me and My Katamari.

One is a very hardcoded screenshot download / vfpu convert to 565, and the
other is some very weird check to make sure render is clear or has
happened or something.

The screenshot func detects downloads for the 'Royal Album'.  The render
check detects downloads for post-rename (no idea why it checks here.)

Fixes #7695.
"
"50584fe5a3fa35ae896c29dcbdffa7b2e6f00a84","2016-05-21 10:28:20+02:00","Merge pull request #8758 from unknownbrackets/hook-katamari

Hook some funcs in Me and My Katamari
"
"b09c2b1f75908cb294eafa5f1142bc825f093581","2016-04-24 10:57:56-07:00","Add some missing override definitions.
"
"a913e0f0fcbf699b19df673ace814cecbf905a7b","2016-05-21 08:18:08-07:00","Remove some unused private properties.
"
"2b06137e11f95ac0bdef3583bc9b22c11038c939","2016-04-24 10:58:10-07:00","Vulkan: Remove an unused function.
"
"eb45c5bc89739389d5317e54904b982399d5b2dc","2016-05-21 09:02:29-07:00","Update to latest armips to fix unittest on Android.

Also fixes ARRAY_SIZE warning.
"
"27163279d68db40af67db01d481c5f1101ba0d9a","2016-05-21 08:45:23-07:00","Enable ccache in CMakeLists directly.

This makes cmake/clang use ccache on Travis, as well as Blackberry.
"
"bb7dd908ba9703bafd1014c7baed5b7cff029906","2016-05-21 18:35:29+02:00","Merge pull request #8760 from unknownbrackets/warnings

Warning fixes + more ccache
"
"6159bc003b81e56d12cf115c9ecc0113b935dd6b","2016-05-21 07:56:41-07:00","Allow Qt platforms to use smallWindow dpi logic.

It doesn't look like there's any reason to limit this to Windows.
"
"0b33833a70c62db6668bba357d14da1fbf8f3bb8","2016-05-21 07:57:32-07:00","Include Qt files in MSVC project for searching.

Sometimes we miss refactoring things in these files.
"
"2bd447e78cc07b5e293abd08d7c75d6bccbfb2f8","2016-05-21 07:58:42-07:00","Flip the meaning of the -g switch.

I like asking people if they see FBOs being created, it's helpful.
"
"ba908b7b1eb8ff98d379ec50011c681b40a12a03","2016-05-21 09:22:14-07:00","Qt: Use new window size config settings.

It's no longer tied directly to render resolution.
"
"7258f8cae36545c0f4074b3738c11ce594d6d459","2016-05-21 10:43:24-07:00","Qt: Default to 2x PSP window size.
"
"7f1ed0737e68de4b62694b2a94610c9683472728","2016-05-21 15:30:54-07:00","Fix depal/indexed rendering in core profile.

Oops, this needs to be bound after we apply the texture.
"
"3ba46a71af22b3de0c992848c5c6e1646b4daf38","2016-05-21 15:31:58-07:00","Properly reset back to GL_TEXTURE0 in bind color.
"
"2d53eb54563a474f90bbe5b790e9125c6f145dde","2016-05-21 15:40:58-07:00","Ensure we don't try to hash framebuffers.

Let's keep when we do things consistent: measure alpha on apply always.
"
"f16f163edffc9602383b23e318302d23a19470d3","2016-05-21 15:45:03-07:00","Remove duplicate override.

This is the same function, it was meant to be refactored.
"
"f168978d3e0f148a65982c18baca140138cac5b9","2016-05-21 17:53:42-07:00","Properly set w/h on first use of a render-to-tex.

We were getting the wrong w/h when it wasn't in the texture cache already.
"
"916c53c859182b750644628ca95275c5b7992409","2016-05-21 17:55:45-07:00","Add render target breakpoints to GE debugger.

Including z buffer as well, hope it's not confusing.
"
"2cfe80ccc0cbe30da425911cda2ca65e77682ae7","2016-05-21 18:30:06-07:00","Add a basic context menu to the state list.

This allows us to toggle breakpoints on specific commands.
"
"8ba14b5858bf97ba84d316b9d5640100f890acbb","2016-05-21 18:33:45-07:00","Mark Change... as the double click action.
"
"8b5669828b16114fa6d2de9f3ee1c267a9f21aef","2016-05-21 19:11:42-07:00","Add watchlist feature to the GE debugger.

This way you can pick out items you want to watch.
"
"e65e794f28631af6fcfa60a801129469bda871c9","2016-05-21 23:02:29-07:00","x86jit: Fix vmmul of matrix with itself.

Was not SIMDing correctly.  Probably rare in practice.
"
"546c0a5d9b7c6de74d0e9bdbb9f647679f65ef3d","2016-05-22 01:34:31-07:00","Fix buffer overflow in RAM caching feature.

Would mainly affect files not even block sizes, such as CSO files, but
might affect all files.  Oops.  Fixes #8764.
"
"12f8df395b8621fad39d7793fae1559cb176702f","2016-05-22 01:35:16-07:00","Return correct bytes near end in RAM caching.

Reading beyond the end of file should not return data.  Also check what
the backend actually returned, in case it wasn't able to return data
either.
"
"8bd7e283553cbc2e83241323e776d129d0b29a7c","2016-05-22 10:50:04+02:00","Merge pull request #8765 from unknownbrackets/ramcache

Fix buffer overflow in cache ISO in RAM feature
"
"faa6b1631948da8f819c6a34356a9d2cdd8e3182","2016-05-22 10:55:39+02:00","Merge pull request #8763 from unknownbrackets/jit-minor

x86jit: Fix vmmul of matrix with itself
"
"540181c32d56812f66ebd06b20863dd331aa9e0a","2016-05-22 10:56:00+02:00","Merge pull request #8759 from unknownbrackets/qt-size

Improve display of Qt at 1x size
"
"136f2dfa096ac07245e55d2cbba4211105a446d7","2016-05-22 07:27:54-07:00","Enable ccache for Symbian.

Also, disable fork irc notifications.  Yay.
"
"dc69aba6168dad57c7cea56fc1f4e0dac3f01aed","2016-05-22 21:36:41+02:00","Merge pull request #8766 from hrydgard/travis-symbian

Enable ccache for Symbian
"
"8d87a5b7a2ae14e92555028c9bf380ce3406bdfc","2016-05-22 22:09:39+02:00","Merge pull request #8762 from unknownbrackets/debugger

Add more GE debugger features
"
"70c78effb047e8ca7c65155a8ed12ed3c8a01d29","2016-05-23 21:18:57-07:00","Use Android system props for CPU info fallback.

Some devices don't provide any useful information at all, such as the
Galaxy S7.
"
"4113fd940c51daded98e260f193e336228a0f594","2016-05-23 21:35:28-07:00","Add ugly invalidation workaround for SGS7s.

Otherwise they just crash, and crash often.  Special thanks to Jaaan for
numerous trials to try to find the best way to solve the crashes.
"
"a4926de436a0bfd2b4cec7d4290035b93931a3fd","2016-05-23 23:13:27-07:00","Qt: Allow full shutdown and config save on exit.

We want to save the config on exit, as pointed out by akien-mga, #8026.
Also works around what may be a Ubuntu bug, causing segfaults on exit.
"
"01d3cb37d678fdaa3d89d2b1c93a18b47f61462d","2016-05-24 09:42:59+02:00","Merge pull request #8770 from unknownbrackets/qt-exit

Qt: Allow full shutdown and config save on exit.
"
"9b63a44c86ae14379415d6ad87d609102496f574","2016-05-24 09:59:05+02:00","Merge pull request #8769 from unknownbrackets/cpuinfo

Add ugly invalidation workaround for SGS7s
"
"dff085f29f4aa1fa135fb6cae74436e7f75c4bfa","2016-05-24 20:34:15+02:00","Merge pull request #8761 from unknownbrackets/gpu-minor

Assorted minor GPU bug fixes
"
"fd0af5b27164551f6fb235d384377ddfe01fd570","2016-05-24 21:41:01+02:00","Vulkan: Mostly pass the validation layers in SDK 1.0.13
"
"1c357f7f7b705564649ec9c755b0efcf94fd0926","2016-05-25 18:42:21-07:00","Fix reads from cache outside the file.

Homebrew seems to all trigger us to read after the end of file, which was
looping infinitely.  Fixes #8773.
"
"8dd7527dc8b16e3da2c21a5541aee2f82bd532dc","2016-05-26 00:07:07-07:00","Clamp reads at the beginning too.

Safer, avoids an index overrun in disk cache.
"
"026a69ebb0e99beff9de837dfbf6b4e1dbe92eda","2016-05-25 18:53:59-07:00","http: Allow non-blocking on Windows.
"
"85506e98fe45fba0c9039d1eac9a23712989bb4a","2016-05-25 18:59:04-07:00","http: Parse headers with folding, not alloc.
"
"41e7d3ecde9539c87d3371280217d6487c804bfa","2016-05-25 19:02:38-07:00","http: Switch to using input/output sinks.

This should be more performant than reading one byte at a time in a loop.
"
"1cc49f3be4e5245fc660b510b0accf8bfb7dc2d4","2016-05-25 22:21:24-07:00","http: Allow retrieving other headers.

Such as range request headers, accept headers, cookies, etc.
"
"8fc610e2d145752ad999c46106770c807721c2c9","2016-05-25 22:28:28-07:00","http: Make it possible to override 404 handling.
"
"2dd157733b99f50a5e9275fb8b83f4ec01e2633b","2016-05-25 22:45:40-07:00","http: Allow customizing the response headers.
"
"9e9bc91405462300cf5b3fcd93e9c8da63618923","2016-05-26 18:04:24-07:00","Fix a crash when opening a file without extension.
"
"1f3615b41196b536be71e75f1c2b6e0c5d371320","2016-05-26 18:04:51-07:00","Avoid a debug warning in MSVC.
"
"06c3dca1da31592c8ece3ce34d40e05379251fa3","2016-05-26 18:05:32-07:00","http: Allow > 2GB responses.
"
"11c7c25b03efd0beb987a95da64d7deb996212a4","2016-05-26 18:06:03-07:00","http: Add a fast-path for large chunked sends.

These will be common.  Skip a memcpy.
"
"02db45982a3ba4843b340cb729a58cabc6315d82","2016-05-27 20:11:25-07:00","Pass Build.BOARD from Java, avoid lookup.

Fixes arm64 build with r10, but is ugly coupling.
"
"95d912c378eca900c99fb14ec58eaad6180e35e7","2016-05-27 20:24:01-07:00","Get rid of the input_state global linkage.
"
"2353cf6e859aa7abd9f6a28b6cb7775a333c37d3","2016-05-27 20:25:10-07:00","Delete no longer needed linkage hacks.
"
"afdd01571c99805b8b7723821843aca5f193058f","2016-05-27 20:41:37-07:00","Uncouple savestates from NativeApp some.

Still have osm.
"
"e6cf296d1a331ae7728f35857b77a0c550edae98","2016-05-27 20:53:20-07:00","Trigger save slot display from UI code.

Core shouldn't be calling UI code.
"
"ac21d2e84d7f7f70fa427c207c91edc281d18410","2016-05-27 20:53:58-07:00","Clean up save state preview fade.

Now it mostly matches the save slot text fade.
"
"2862253f128ab7af846c28de3fe69a9de0cd929c","2016-05-27 20:55:44-07:00","Avoid showing all slots in a row when cycling.

This was longer now, so more annoying.  Better to sync with the preview.
"
"27d135d48a335eb31e5b538eeb378695dad99345","2016-05-27 21:25:05-07:00","Decouple save states from UI.

It's the UI's job to decide how and what things are displayed, not Core's.
This also reduces reasons for linkage issues.
"
"a1fbcc3d931fe575bba2e2397150d9831fc5990e","2016-05-27 22:00:14-07:00","Avoid directly calling osm from Core/GPU code.

This allows UI to handle the message however it wants to, and reduces
cross linkage issues.
"
"be3e447a83f019c72ea713f215bf838a575780fe","2016-05-28 12:23:50+02:00","Merge pull request #8777 from unknownbrackets/cpuinfo

Pass Build.BOARD from Java, avoid lookup
"
"63e7304467b9e24544b2c85722d129e98bf1c91f","2016-05-28 12:25:01+02:00","Merge pull request #8778 from unknownbrackets/coupling

Remove some dependency coupling
"
"3147f1ac954cf28c6f553d29d568b5189db5457c","2016-05-28 12:34:55+02:00","Merge pull request #8775 from unknownbrackets/http

Clean up HTTP server implementation
"
"0d6ad3df2f53e64eebb22e7743942af28aaedc24","2016-05-28 16:11:02+02:00","Fix wrong type of parameter to UpdateRunLoop. Do not understand how this compiled.
"
"fed0089c81b415b9efa5500f65378a4e3cbc9875","2016-05-28 09:11:53-07:00","Rewrite 5551 test mask to 0xFF in more cases.

If nothing else, this may improve cacheability or something, since states
will be more regular.

May somehow help PowerVR in #7740?
"
"5a454877072e831d3c055676c7ae66fab13fb5ca","2016-05-28 19:35:15+02:00","Merge pull request #8779 from unknownbrackets/gpu-minor

Rewrite 5551 test mask to 0xFF in more cases
"
"04576189b4a3f3cd98d62008fb98954306e5203a","2016-05-28 21:15:25-07:00","Callbacks: Fix delete when multiple for a thread.

Oops, this was deleting all after the deleted one.
"
"e9916bdf0b255b95dbb0c830f4e6e4bca7908021","2014-01-04 22:41:37-08:00","ThreadEvent: Add management functions.

Currently never being triggered, though.
"
"be1cde15ba045f486bbefe4f46031b86e1b9ba11","2014-01-05 20:20:56-08:00","ThreadEvent: Initial support for create/delete.
"
"ceb36fc81de53315c222c300154fabc7c4dd3a52","2016-05-28 16:17:33-07:00","ThreadEvent: Allow an exit event handler on self.
"
"c6cd614f2be2d86bb39d292c90d0ca46273eeb94","2016-05-28 16:59:19-07:00","Thread: Allow mipscalls to be scheduled in a row.

Should be fine to just use the stack to save these things, likely that's
what happens in real firmware.  This fixes issues when a second mipscall
is scheduled in the same HLE syscall.
"
"97cce6ccfe01c759cb89c2433d61977fa4dd9296","2016-05-28 21:14:19-07:00","ThreadEvent: Trigger handlers for start/exit too.

Start isn't in the right place or on the right thread, and exit isn't on
the right thread either.  But these don't seem very particular about what
thread they run on.
"
"4fc12cdd2992c42dd35fe2b9107afcf17d30f288","2016-05-29 00:12:36-07:00","ThreadEvent: Handle getting scheduled off a thread.
"
"da34e31cbaa7e7d65a50fd625c23c02cc5084feb","2016-05-29 12:14:54+02:00","Merge pull request #8782 from unknownbrackets/threadevent

Add basic thread event handler support
"
"12b907ed601396cdb1c34842a899453595835382","2016-05-29 07:31:22-07:00","Put syscalls back where they were supposed to be.

Oops, didn't mean to move this.  Might've broken save states.
"
"47f16ed97b9dd400e3eb08c62dfc5f82ef08ac44","2016-05-29 08:05:42-07:00","Module: Refactor stub imports to dedicated func.
"
"9b706975adf1ee8d387bfa57e1f9bfb3cee8f75f","2016-05-29 08:27:19-07:00","Module: Reimport stubs on load state.
"
"1a3fc9cdeb7d275ad01bd273e15e2e3f2720ba35","2016-05-29 08:29:51-07:00","Module: Avoid writing missing stubs on reimport.

In case they were manually linked, or something.
"
"21e01b5b73b64ffa5da7a3ede02615997d58c8d7","2016-05-29 17:38:57+02:00","Merge pull request #8783 from unknownbrackets/hle-minor

Reimport module stubs on load state
"
"5b7bd8155deb310e9a8532f365392d5179e95d33","2016-05-29 08:49:18-07:00","Special case specific sin/cos result values.

Fixes #7737, thanks go to gid15 from Jpcsp for finding and daniel229 for
reporting.
"
"a835c4aa8f15bc22289e125c77485cdb6a5af1a9","2016-05-29 17:57:09+02:00","Merge pull request #8784 from unknownbrackets/vfpu-minor

Special case specific sin/cos result values
"
"a450a79f52da1723d0c9ac94bc222651d4ab4524","2016-05-29 18:25:17-07:00","jit-ir: Optimize loads to transfers if possible.

These (especially float <-> gpr) happen in all games, but gpr->gpr is
especially common in some minis.  Good to reduce bloat.
"
"65820d6184be3f8946b20c55d404f1dbc2eb4487","2016-05-29 22:04:47-07:00","Thread: Use a short delay for 0us delays after all.

It seems the behavior varies.  Should help #6924 and #6981.
"
"9f668a1d31bb3e81620be63755d7096de6eeb8b2","2016-05-29 22:13:33-07:00","VirtFS: Normalize leading slashes in index.

Otherwise, we might consider '/x' and 'x' to be different files, and fail
to use the handler properly.
"
"3909ae549a5946d65bc04e33c4a202a53a4a87ee","2016-05-30 08:49:36+02:00","Merge pull request #8785 from unknownbrackets/ir-movs

jit-ir: Optimize loads to transfers if possible
"
"5b9eecf67326a4e0c9997e64999e11e87ae0a48b","2016-05-30 08:50:57+02:00","Merge pull request #8787 from unknownbrackets/thread-delay

Thread: Use a short delay for 0us delays after all
"
"45f7afcfa1c7d433df5703c804b97b81c9c4548d","2016-05-30 08:51:38+02:00","Merge pull request #8788 from unknownbrackets/virtfs

VirtFS: Normalize leading slashes in index.
"
"0592f56df5891ac11b1f5fa241c03000166787b2","2016-05-30 00:38:20-07:00","Oops, this modifies the input string it seems.

Not sure if ISOs are actually case insensitive, though?
"
"21ba67e1d7b198a5127071a823c9b5573345e5e8","2016-05-30 02:11:28-07:00","Module: Add legacy save state stub fixup.

Forgot this, when we don't have the stub info.  Stub info is better, since
we might handle things differently.
"
"d0d570c6aca6e3a2c643882d084bc859da16988c","2016-05-30 13:00:23-07:00","ThreadEvent: Delete threads after handler runs.

It should actually run on the thread itself, it seems, but that's probably
not as important as the thread still existing.  This allows the handler to
get the thread name or etc.
"
"84a6ca33267e2196e77ed076b18fd99fcf041a82","2016-05-30 22:15:42+02:00","Merge pull request #8790 from unknownbrackets/threadevent

ThreadEvent: Delete threads after handler runs
"
"bfda12fa232b177d23a8d77c6b078924d2c90cbe","2016-05-30 22:31:02-07:00","Allow more options in texture [hashes] syntax.

This allows you to ignore the address or address and clut hash.
"
"58403383974f5b591062d7fc0587ba228bb5a8d9","2016-05-30 22:49:41-07:00","Create parent directories when saving new textures.
"
"a690492836f7c5c186a7bc9d6caad6dd1d4bf1fe","2016-05-31 09:30:15+02:00","Merge pull request #8792 from unknownbrackets/tex-replace

Allow more options in texture [hashes] syntax
"
"cc829f31b8502ff0001cd5258e551f71f5d668e6","2016-05-31 06:23:53-05:00","Attempt to fix segfault on VirtualDiscFileSystem::GetFileInfo for files where handler is specified
"
"7814cdced231287371e6dedf7ada30b6ed30c705","2016-05-31 08:02:25-07:00","Merge pull request #8794 from NCDyson/master

fix segfault on VirtualDiscFileSystem::GetFileInfo()
"
"baac12b32739e0c94d16782c5b3e40f3aee51b0e","2016-05-30 20:05:00-07:00","Log args for dispatch/interrupt early-fail.
"
"197f3393dfd8c0cbdceb25ab97d1dc09eb15fb41","2016-05-30 20:06:14-07:00","Thread: Better/minor accuracy for sysclock delay.

Certain negative values shouldn't cause a delay, could help if a game has
a bug.
"
"8df298f622d4cb367ac4e8efc36a9a4bdf003f48","2016-05-30 20:07:28-07:00","Thread: Auto-resume dispatch for worse threads.

Seems this doesn't happen when you start a better priority thread, pretty
reproducibly.
"
"9df727f94f218fd054db29872dace8698c2cc11f","2016-05-30 23:26:55-07:00","Psmf: Stop pretending streamMap is a vector.
"
"5f7c95f24941c600c304a891d009afb440ab649d","2016-05-30 23:32:42-07:00","Psmf: Count PCM as an AUDIO stream as well.
"
"74239c199d4d1cabbd4055a754833cbb053a27c8","2016-05-30 23:54:21-07:00","Psmf: Allow AUDIO type when specifying streams.
"
"510db2051d724ddad83c53c019f47dbc3da8ad4a","2016-05-30 23:55:13-07:00","Psmf: Detect PCM streams from private stream info.

This logic comes from Jpcsp.  Let's report though and see if there's more.
"
"cca9a73105a5c900521c931db09d2bb1f6b1739c","2016-05-31 00:52:28-07:00","Psmf: Start at stream 0 when not specified.
"
"7ad07ca82ec234e622e1ef6b9fb284dfaa416a02","2016-05-31 00:53:40-07:00","Psmf: Handle stream specification per tests.

These seem buggy, but generally sane.
"
"0a00777403a6250947127b8d28dec9b70dbf5fa2","2016-05-31 00:54:26-07:00","Psmf: Only write current type/channel if valid.

And improve error handling in general.
"
"91887ad85c3f1c8b60525945426e9eb9f72f4374","2016-05-31 00:55:11-07:00","Psmf: Correct errors in current stream num.
"
"419b960403bf70ea7065600b5fa7f40b7b1581a1","2016-05-31 10:40:14-07:00","x86jit: Fix params in Replace_fabsf.
"
"25136eb019b0551fe29077f2a866be64fcea2597","2016-05-28 10:47:39-07:00","Remove an unused function.
"
"30e13c7c37f36960364d3170e0d9a0c690917912","2016-05-31 11:49:59-07:00","Clean up some unused result warnings.
"
"f084084ff79eb2c4fb0d1d028651272e00b02137","2016-05-31 11:53:17-07:00","Clean up accidental debug code.
"
"6ee770bd8068fc8b63be0e6187cf8ec8a03d5645","2016-05-31 11:55:26-07:00","Add some missing overrides to declarations.
"
"f4a06cd79a791f54ef133c613e062180cea46f57","2016-05-31 11:56:23-07:00","Remove an impossible assert condition.
"
"cab2c29909fc816da060fd8d3a2db26bd56323b1","2016-05-31 21:04:36+02:00","Merge pull request #8796 from unknownbrackets/warnings

Minor warning fixes
"
"87f3cf565a43bf064e69e28a3c7cf96a5529bcb8","2016-05-31 21:04:50+02:00","Merge pull request #8793 from unknownbrackets/psmf

Correct some scePsmf info retrieval funcs and error handling
"
"606856c9adf504bd8541c05ff45ae67de1ebbc7a","2016-05-31 21:08:00+02:00","Merge pull request #8791 from unknownbrackets/delay

Minor sysclock delay accuracy improvements
"
"9471107d0df4d389a70ae851705ec8d770772934","2016-06-03 19:49:22-07:00","If possible, use /dev/shm instead of /tmp.

For some variants, /tmp will be tmpfs, but not always.  In case our mmap
fails to prevent flushing to disk (as apparently happens on Raspberry Pi),
shm will work better for us.

Thanks go to klyoungblood.
"
"6bbcf74926f52d0183d7859b95aebbc3703f0d1e","2016-06-04 15:08:33+02:00","Merge pull request #8801 from unknownbrackets/tmpfs

Improve performance on Raspberry Pi (and maybe other Linux)
"
"deffb246aebc8505ec7e1ede001b4457b7100348","2016-06-04 14:05:34-07:00","Mpeg: Require less memory for older lib versions.

It seems it started requiring 64k at 1.05.
"
"6d14c17f26694e36bc1ff6eec7d5ecddcc9afc5c","2016-06-04 14:17:29-07:00","Mpeg: Treat negative available packets as zero.
"
"b191fd29145507cf872280efe26f00084e5516b7","2016-06-04 16:09:38-07:00","Mpeg: Make sure not to demux outside the buffer.
"
"4d168359907f574771d7478ba44946f68e38a4e1","2016-06-04 16:12:23-07:00","Mpeg: Validate the pack header.
"
"41f2999a2b53225276d893c072a3171f5fba71cd","2016-06-04 17:34:49-07:00","Mpeg: Write into the ringbuffer using actual ring.

This mimics behavior with clamped sizes and wrap around, and also makes it
easier to implement the garbage data handling the PSP has.
"
"c8d0270bb4fa3148b78fce76f6fe79371db2a287","2016-06-04 18:00:41-07:00","Mpeg: Validate data more during demux.

This also parses a bit earlier, not requiring a full 2048 bytes ahead at
all times.
"
"4ee39f82e4ab78b8745161c736a2a384487a008a","2016-06-04 18:01:47-07:00","Mpeg: Validate added packets.

Older libraries only, but this will cause it to reject packets that don't
make sense.  So far, this seems to mirror the behavior of various garbage
packets sent to the real firmware.
"
"04dcaeae1d4cf44d474faede3ab70ea76e23a481","2016-06-04 18:02:55-07:00","Mpeg: Move, rather than resetting, packetsAvail.

When we've got garbage data, this has to stay incorrect.  Without this,
Megaman X gets confused when playing its video (because it enqueues
garbage packets.)

See #3318.
"
"785908e55299f4a17b943eb4e81fc221d4782fa4","2016-05-31 18:45:30-07:00","Write out correct bytes in extract file.

Oops, this was always aligning to 4KB.
"
"4826405c26280886ce75f9475a9897250451e910","2016-06-04 18:03:58-07:00","File: Retry open when a sharing violation is hit.

Some editors will lock the file while it's open, and it is convenient if
you can still have things work when that happens.
"
"185ad781f338808295f701e7279e6aabec85a521","2016-05-31 18:44:53-07:00","Psmf: Add better error handling for SetPsmf.

Checked on different devkit versions in case of changes.
"
"b13c68a373478bdc3d6ed28edf9a9786f261e4bf","2016-05-31 19:23:15-07:00","Psmf: Correct get video/audio info errors.

This actually grabs from the currently specified stream, and fails if it's
the wrong type.  Additionally, return stream-specific info... unlikely to
matter, hard to imagine a video with a mono and stereo stream.

Also reduces log verbosity.
"
"cf2796de4186fb46dc0929845a50499c98a586d0","2016-05-31 19:37:13-07:00","Psmf: Allow each struct to have its own stream.

Some games will create a clone, and then set a different stream on it,
e.g. one for the video, another for the audio stream.
"
"bda1956f905dcaa59a5719f3e9e4230b73f6f313","2016-05-31 21:48:21-07:00","Psmf: Enable error check on player create.

Reporting makes it look like this should be safe.
"
"c12f8353643ba40a8c400931b8abd7c529750e0c","2016-06-04 19:36:30-07:00","Download single-use renders right away.

Should prevent issues with the memory being reused soon after, hopefully.
See also #8781 and #7695.
"
"5fcf6ee0120fdc2dc8d884b90965c071df2ab1f8","2016-06-04 22:10:47-07:00","Provide clearer errors for invalid ISOs.
"
"ca80aaa3f32414098e1335732941e4ce13a0fc18","2016-06-05 08:21:24+02:00","Merge pull request #8805 from unknownbrackets/invalid-iso

Provide clearer errors for invalid ISOs
"
"3649231d66aab9e08b82d9ec6a1f9588652bb239","2016-06-05 08:22:12+02:00","Merge pull request #8799 from unknownbrackets/psmf

Correct some more scePsmf functions
"
"cad7235c8695e3f5f27af3b594e00663d5f0d426","2016-06-05 08:22:48+02:00","Merge pull request #8802 from unknownbrackets/file-minor

Fix extract file and sharing violation handling
"
"e72cc3321a467f44be98696f3bfb4fa20910f3f4","2016-06-05 08:23:17+02:00","Merge pull request #8804 from unknownbrackets/gpu-minor

Download single-use renders right away
"
"8294a54a70f4608e81a45ea9d1a41ec33ce0c443","2016-06-05 09:14:33+02:00","Disable dual source blending on nvidia Android. See #8243
"
"ce8d2bef57cc99524f6502c58fc08f3f857888b7","2016-06-05 13:44:38+02:00","Merge pull request #8803 from unknownbrackets/mpeg

Reject invalid MPEG puts for certain lib versions
"
"fc77e2f8fc6fe9c14d5261b0518ace81ca7cff66","2016-06-06 19:35:58-07:00","Flag replaced/scaled textures so we don't reuse.

Otherwise, we may try to use the replaceImages path, and end up with a
small updated texture in the top left of a large replaced texture.
"
"65ae92c78b7aecdd907797e306a581ebdf1bfbb0","2016-06-06 23:02:56-07:00","Also avoid updating images with replacements.
"
"80d72acaecfa869818ad5d72b1bf3083461b0f2e","2016-06-07 20:41:13-07:00","Psmf: Correct default stream.

Fixes Jeanne d'Arc, others.
"
"e48f27377d83c30e3fd50af65d5173762f13847a","2016-06-08 08:34:28+02:00","Merge pull request #8807 from unknownbrackets/psmf

Psmf: Correct default stream
"
"5da0375ee96281f25a20eb9f0e9bbd778c98b0f7","2016-06-08 08:34:46+02:00","Merge pull request #8806 from unknownbrackets/tex-replace

Flag replaced/scaled textures so we don't reuse them on change
"
"677693b764993de7c4a4d03575b28d70d654dd90","2016-06-09 20:39:43-07:00","Disable reporting when game id is missing.

We can't track compatibility without a game id.  That either means
inventing one for homebrew (one that is consistent for all copies) or not
reporting homebrew.
"
"16897bd19d98bc045daebcbce335b0e60793ee52","2016-06-09 21:07:30-07:00","Force 'Nothing' compatibility to bad stars.

Reporting 'Great' speed with 'Nothing' compatibility makes no sense.
"
"8dceaedf9127d6cc2ba662ab496f2234be06e3b6","2016-06-10 09:37:07+02:00","Merge pull request #8808 from unknownbrackets/reporting

Clean up compatibility rating slightly
"
"6151f8ef9f92ebb64fb141c97d913dee0cfb94c9","2016-06-12 07:09:01-07:00","Allow taking screenshots with a clamped size.

Sometimes 10x is a little on the big side.
"
"5b402dd6e5e4d98fafed908685a777c02503f5b8","2016-06-12 07:15:45-07:00","Generate mipmap levels for screenshot views.
"
"a02237d6f6af6dd638201a5dab20dc1851dc84cd","2016-06-12 07:21:56-07:00","Show a screenshot when reporting compatibility.
"
"7af1deb7680466d8952a483b82ed9e79057715e4","2016-06-12 07:30:36-07:00","Reduce chance of reporting data corruption.

We already check for spam, so this shouldn't be happening, but let's play
it safer.
"
"da0a79f69598bde9c907e1c85d7b5da050a32de2","2016-06-12 07:34:21-07:00","Add an extra param for reporting to verify data.
"
"347158ecc6ac353425e14ac4f658c648ab0a7e24","2016-06-12 09:07:04-07:00","Include Content-Transfer-Encoding in uploads.

We should specify it's binary, otherwise proxies might munge the data.
"
"2ceee793245d1406899fd0324988addb661130d9","2016-06-12 10:00:32-07:00","Send screenshots with compatibility reports.
"
"85e7980c4476779ee3fbba4c015a68765d606496","2016-06-12 10:33:33-07:00","Prompt for reporting even when disabled.

To improve visibility.
"
"b0ac553e778dd4b6c3f0767652a1f68b8d310258","2016-06-12 20:39:38+02:00","Merge pull request #8812 from unknownbrackets/reporting

Include screenshots in compatibility reports
"
"c0c43acb6ea6ce19167e317ff6c443892d522c61","2016-06-12 12:07:21-07:00","Buildfix for gcc.

At least our Travis gccs are hitting an ICE.
"
"cfff0e9d82a52f619428a51960bd02ee5c2ca2d2","2016-06-14 15:42:54+08:00","Enable extra ram for The Elder Scrolls Travels Oblivion USA Beta and Melodie - alpha
"
"239d6d36dacfc0f0b64d98e4e28913d645d817b9","2016-06-15 00:11:57+02:00","Merge pull request #8813 from daniel229/extra_ram

Enable extra ram for The Elder Scrolls Travels Oblivion USA Beta and Melodie alpha
"
"36debd03f5040f2501d21a5104da694e51281518","2016-06-16 23:46:11+02:00","Create screenshot directory if not exist when using Report Feedback
"
"0519b3ef79659fcf6c38bb61e0cbb32fbb2b195d","2016-06-18 07:17:30-07:00","Merge pull request #8814 from LunaMoo/screenshot

Create screenshot directory if not exist when using Report Feedback
"
"339f065a5c28edbffa2e8f780d3593902a218b1d","2016-06-19 07:14:31-07:00","Centralize texture deindexing more.
"
"5962093ef5488503d93b47b80edb27f55793da6c","2016-06-19 07:55:38-07:00","Centralize the majority of texture decode.
"
"3b6d9ca42acbc5dbddf0c712833f8354153bc57f","2016-06-19 19:40:46+02:00","Merge pull request #8817 from unknownbrackets/tex-converge

Centralize texture decode handling
"
"3db69b87d78e046a53c55a80d70df7a81b951ba9","2016-06-19 11:09:10-07:00","Move ScaleAlways to common code.
"
"778c518a376d2f59b66a1f669295c4ed4daec545","2016-06-20 00:18:35+02:00","Cheat menu access from gameScreen + minor bugfix +
Invalidate JIT for 0xE/0xD checks
And big thanks to [Unknown] for help:3
"
"6c14b82005433313b5c3a0b5ec5a49b50f0a9d45","2016-06-20 11:32:31+02:00","Fix #8448 properly, in case we fail to generate ID.
Limit homebrew ini file generation to UI.
"
"27a616c765ca99fd9a3503434510da7ceb4207de","2016-06-21 00:15:29+02:00","Name homebrew games ini files differently
"
"101df1da2b734657ba74c6306f1493bacef11a26","2016-06-21 06:29:26+02:00","Ooops;3, remove leftover
"
"2bd0567448ed73e546c4dca2c8274388b121198c","2016-06-20 21:40:53-07:00","Merge pull request #8818 from LunaMoo/minorCWC

CWC improvements/fixes
"
"8b17793c9f4ff7cb4c6bc53d76be45b9601f18f8","2016-06-22 00:33:06+02:00","Add basic TextureReplacement UI options.
"
"409c279c265ee3ff12b392861e5c82870f28fd14","2016-06-22 01:07:16+02:00","Merge pull request #8821 from LunaMoo/textureReplacementUI

Add basic TextureReplacement UI options.
"
"434c95700eafb12ed54671da1950c68d736336b6","2016-06-22 01:56:52+02:00","Write some defaults to textures.ini on creation.
"
"24fd336e60d7687681eb4573aa43d627ab621d30","2016-06-22 05:55:45+02:00","Create openIniFile function in FileUtil to avoid duplicates
+ correction
"
"12be18314071b44eec73f8e6a77d6fbf13294706","2016-06-21 21:14:56-07:00","Merge pull request #8822 from LunaMoo/minorTrUI

Write some defaults to textures.ini on creation.
"
"4c94cd764d0aeb9436699d364b86eb6e5371ce21","2016-06-19 12:21:32-07:00","Scale directly into the buffer if possible.

This will be possible in the majority of cases, and avoid an extra copy.
A small cost compared to scaling, but even so.
"
"f0ed9a9915e02efa2e6dae1e36bcfbdf8b187abb","2016-06-25 09:10:55-07:00","Vulkan: Correct CheckAlpha on scaled textures.
"
"79101736b868fe1195808a7039275e309d80a6ba","2016-06-25 09:13:14-07:00","d3d9: Decode directly into texture buffer.
"
"b67692240066d699330764c2b65afb6cfa42c79b","2016-06-25 18:56:35+02:00","Merge pull request #8825 from unknownbrackets/tex-converge

Reduce scale/decode overhead in Direct3D9 and Vulkan
"
"5ab2676704d4532c7754df64ff35a1465985b184","2016-06-25 09:59:20-07:00","Buildfix.
"
"7695cd78cb29017f2ed12ac936671bda1b80d31c","2016-06-25 23:11:07-07:00","Show a confirmation screen after feedback submit.
"
"d25cc720213f1a8c4662fc92885ef0799d4fe187","2016-06-26 11:39:47+02:00","Merge pull request #8828 from unknownbrackets/reporting

Show a confirmation screen after feedback submit
"
"dcf8da244d6c46141e2df1e2ef1acb797fd3ef2a","2016-06-26 20:28:01-07:00","Prevent buffer overrun from OSK dialog.

If there was never a null, by mistake, we'd corrupt memory and then crash.

Occurs in the 'Sonymon' homebrew.
"
"9d6684a7762a6e94f9ad0b116145fb9b5fb9c8d9","2016-06-26 20:33:25-07:00","Consistently resolve PBP paths, use /s in recent.

Drag and drop was using \s causing duplicate recent entries and confusing
some of the PBP parsing.  Let's make it all a bit safer.
"
"eb674b46998f7c9e3305a7015b1c55361317b279","2016-06-26 20:45:04-07:00","Reduce load delay with many recent http files.

If we have data for them, we can start up fairly quickly.
"
"5009dcab7ab0bc2d6cd179c89cd0e8ba291cd7f5","2016-06-26 20:50:58-07:00","Add reporting for sceKernelDevkitVersion() calls.

We currently default to 1.50 as the reported version, but we more or less
emulate a 6.60 system.  It may be better to return 6.60, but let's see
what would actually be impacted by that first.
"
"e22a429cb0896c7ca7338c6c8b94a729d0a7fd24","2016-06-27 09:47:01+02:00","Merge pull request #8831 from unknownbrackets/osk-minor

Prevent buffer overrun from OSK dialog
"
"3b67ed57a87c26d7faef461b171e90fc8c3d6acd","2016-06-27 09:47:24+02:00","Merge pull request #8833 from unknownbrackets/reporting

Add reporting for sceKernelDevkitVersion() calls
"
"befeba7d800f54defdfafca255d1a0a744c25ba9","2016-06-27 09:48:24+02:00","Merge pull request #8832 from unknownbrackets/pbp-minor

Consistently resolve PBP paths, use /s in recent
"
"aae487348c81beb3839c61ad1231627541fd34bb","2016-06-27 01:06:13-07:00","Vulkan: Fix spot lighting shader syntax.
"
"6e89d9f86525e1f2d522d7cbfd77a110f6df710a","2016-06-27 10:13:57+02:00","Merge pull request #8835 from unknownbrackets/vulkan

Vulkan: Fix spot lighting shader syntax
"
"b560038b3d2a17cfa6826e01ef23ef6238c7ab4f","2016-06-30 16:11:25+02:00","Work around a new false positive from the latest Vulkan validation layers
"
"0a5ac0c468b06dfea6f15ee901398eb3434e59d4","2016-07-01 11:21:54-07:00","Add an editorconfig to keep formatting consistent.

This may help to reduce indentation / etc. issues.
"
"5d5f25248f5a30f15d08cfafbf50c2dd28c938de","2016-07-01 21:25:27+02:00","Merge pull request #8842 from unknownbrackets/editorconfig

Add an editorconfig to keep formatting consistent
"
"0bf65150d624cbfbc5304b7721d78eb246189190","2016-07-01 10:39:34-07:00","Vulkan: Prefer 32-bit color formats if possible.
"
"4d4e334fc46ce735ac10fcb4261a59cf170db36b","2016-07-01 11:06:06-07:00","Vulkan: Allow C++ to determine use of JavaGL.

Based on config - this way we can enable Vulkan more easily even before we
determine why some devices don't like C++ EGL for GLES.
"
"4761c0aa3f87de58fe665c76a81d11ca194a4030","2016-06-29 23:18:29-07:00","jit-ir: Allow SIMD on vabs/vneg.
"
"65394f1dba4a3a932b2800850edf15cdc2e8023a","2016-06-30 20:19:28-07:00","jit-ir: Fix vbfy with overlap.
"
"8fab3dc91b2a90f5faf09818cc5cae0d5b388561","2016-06-30 20:20:25-07:00","jit-ir: Allow 3x3 and 2x2 vmmov in IR.

While this will generate a lot of FMovs, it should still be better than
bailing to interp.
"
"6fb34d0beea3ca3727b74a4fe740a674f2ea3fa8","2016-07-01 17:13:32-07:00","jit-ir: Add initial breakpoint support.

No memory breakpoints yet, and cache isn't cleared yet so these don't work
exactly the way you might expect...
"
"1df08518aeafc71429b35dbe4a68b843f3e5b061","2016-07-01 17:27:24-07:00","jit-ir: Implement basic icache clear.
"
"6a24cde8769ea835d4f51368c5c311c9b1e0ecef","2016-07-02 14:21:52+02:00","Merge pull request #8843 from unknownbrackets/ir-debug

Add initial breakpoint support for IR
"
"7cd666c35127bf3ce4bc7398df3a8eee5befc1a1","2016-07-02 16:35:13-07:00","jit-ir: Decrease downcount after delayslot.

Except for likely delay slots.  This makes breakpoints work more
correctly when they trigger within a delay slot.
"
"4578c3cb54df5ea9ace6c2524b4716d0adef9aac","2016-07-02 16:38:30-07:00","jit-ir: Implement memory breakpoints.

These generally work, but likely delay slots will make downcount slightly
off, and won't resume when you hit run again without manually stepping
through them.
"
"1de49436324065534a2e2c5029d2caf267e9a982","2016-07-02 20:51:06-07:00","jit-ir: Avoid crash in stack walk.

This can happen if something is data, I suppose, and not a valid block.
"
"ee29c6c50fb73b58fad72f4a34b58d379d9af677","2016-07-03 10:18:54-07:00","http: Allow binding a random port, timeout.

The timeout is useful to allow for shutdown of the thread.
"
"0c0525ed8717f56fc0fa985c8c60bfaea8e78db2","2016-07-03 10:21:03-07:00","http: Send listing back as text/plain.

Since it isn't text/html.
"
"f4e2ca0359e5d2f343cbe8059394ee7b81fd275e","2016-07-03 10:24:33-07:00","http: Add a screen under tools for the server.
"
"0edc4d16527af043d67cb725c59855359ae02321","2016-07-03 10:43:35-07:00","http: Check server status asynchronously.
"
"bc614b6f857c9ebfcf817d927016a66ffa463711","2016-07-03 11:32:18-07:00","http: Add actual serving of recent ISOs.
"
"a67c103063e7d46ef563f36163a458d67416078e","2016-07-03 11:36:23-07:00","http: Add a note about the recent list.
"
"42080f05e20ffe5ab0399f75664aaa81b7974aa3","2016-07-03 11:41:27-07:00","http: Show a stopping status for clarity.
"
"bde07bf9e7958e60e2c88b84b0ac34bf78e3e774","2016-07-03 11:41:56-07:00","http: Fix translations.
"
"3eee81953a9f4d12dfc113b90fc84be010adb623","2016-07-03 12:38:55-07:00","http: Report local address to server.

This allows matching inside a network.
"
"60afdc40b9918a5b49a5763fdb1a97b5e3e6582f","2016-07-03 17:38:29-07:00","http: Implement discovery for game share server.
"
"41e167f384393586b1e26ffb29bd4292554ebaf4","2016-07-03 20:43:44-07:00","http: Oops, fix crash.

Huh, I thought I tested this?
"
"2b613443cda18b2aef17ecf12c5139988a0d2f42","2016-07-03 20:44:39-07:00","http: Fix paths with spaces in them.

Should ideally escape other characters, but only space is necessary for
our server to parse.
"
"66479add9220098e1c6cb06de86b02b134d5b17d","2016-07-03 20:46:06-07:00","http: Disallow browsing when sharing.

Because it's probably not what you want to do.  This is less confusing.
"
"c3e70c11f8f16c94386d5ed1989575c6154c6729","2016-07-03 21:09:17-07:00","http: Save last-used port.

This is necessary for better caching, in case you share often.
"
"c793efd69acc1693aed9a70bf838bee84343abf1","2016-07-03 20:48:27-07:00","http: Load actual game list.
"
"429346bb9411e1eb3cd2223e0c639ba0006aa1e2","2016-07-04 00:27:49-07:00","http: Make sure we don't hang checking existence.

It's not great to delay loading when the server is down - we'll do a
proper check when we display the games.

This also fixes shutdown being slow.
"
"59c426090734e768145493866a2004cda8a09715","2016-07-04 10:01:49+02:00","Merge pull request #8844 from unknownbrackets/ir-debug

Add memory breakpoints to IR as well
"
"1837870c67d08ba424493964739708fe3089fb97","2016-07-04 10:02:18+02:00","Merge pull request #8841 from unknownbrackets/vulkan

Allow C++ to determine use of JavaGL
"
"1091fd2dc0f08c7e6dad86d0fb858175719a58c8","2016-07-04 10:02:52+02:00","Merge pull request #8840 from unknownbrackets/ir-vfpu

Minor IR cleanup in the VFPU
"
"287d1967a5041f3b39e5c00e08cceb57172dca6b","2016-07-04 07:24:04-07:00","http: Properly stop server on stop server.
"
"f53735f1d8ab584ea0f163d2ddcc41c04968bb61","2016-07-04 07:32:49-07:00","http: Add a safety bailout on list load.

Hopefully this will prevent a crash.  Currently http::Client uses blocking
reads so it will just hang.
"
"3c47440d0cffa6eaf741607ac619858daf20f230","2016-07-04 07:34:40-07:00","http: Set an explicit timeout on HTTP connect.

Before we were just relying on whatever timeout connect() wanted.
"
"cbb1ab17ca8c80995fe85b83e51e7e1818612e79","2016-07-04 20:38:54+02:00","Merge pull request #8845 from unknownbrackets/http

Add UI for wifi remote disc streaming
"
"65c7d0bd04f5197ebedbccd57b3b9e1f169f290f","2016-06-26 23:20:05-07:00","Add uncached flag for file loader reads.

This allows us to indicate that a read need not be cached.
"
"45218be5e3c0e4e52571755737532a1d3d5ea80d","2016-06-27 00:01:09-07:00","Send a CRC hash with compatibility reports.
"
"42fd4aeb12b3aa7e954a42290b33e9d94e6fc3df","2016-06-27 22:59:09-07:00","Show feedback when the compatibility is submitted.
"
"226abfeea87273e213acbf2340ad0a3a5fee710b","2016-06-27 23:00:09-07:00","Reset flag when trying server anew.
"
"33b392821c1f86f58e7f4b1440f23c00240ca8a4","2016-06-29 19:06:52-07:00","Stop reporting FrameRate.

This is just a speed setting, it doesn't affect emulation.
"
"27286d09499e0103e90c8b1f3e483834afc86786","2016-07-04 12:19:25-07:00","Add notice about battery-consuming CRC.
"
"30e99206c955340beaceda6dcbe21bd402d87dc6","2016-07-04 10:52:43-07:00","UI: Add a generic word wrapper class.
"
"a2494b4ff217725d990a36ea5471a821bf1d96be","2016-07-04 11:46:21-07:00","UI: Allow TextViews to use wordwrap.

But they must have a fixed width.
"
"5479f1010278a0e656203b4e46aa1d0fe7aba1dd","2016-07-04 11:56:09-07:00","UI: Allow longer load errors to wrap.

This should make translations easier.
"
"345e2756a96e1eed8fbcd2d5011db4bf14d41555","2016-07-05 12:13:30+02:00","Merge pull request #8834 from unknownbrackets/report-crc

Send disc CRC with compatibility reports
"
"1f8afd7467c90c1afde9a656d2e7ed23c4f988d3","2016-07-05 13:25:17+02:00","Merge pull request #8847 from unknownbrackets/ui-textwrap

Allow text wrapping in UI TextViews
"
"e0845b876fd7b5cb146945c8f6c70d1760b10372","2016-07-08 00:05:44+02:00","Fix some bugs in the IRJit. Hopefully helps #8848
"
"3fc255b4296eb867cec2fa7d6d16943ad67f0f92","2016-07-09 09:15:11+02:00","Make it possible to run even if SDL was built with joystick disabled.  Should fix #8851.
"
"c6d49660677ad8c620fac1122f26104c9456c703","2016-07-09 09:32:41+02:00","Make really sure we're not using the IRBlock copy constructor other than on Symbian.

Turns out it ended up being used on Mac, and our asserts just debugprint and don't actually assert...
"
"8c6cdd02746413954707e377b34a2f9a692c0f63","2016-07-09 10:13:43-07:00","Correct CLUT load size.

Should be measured in 32 bytes not 16 bytes.

See #8850.
"
"dddb3c39ebfeae001059f7c65c615a42512fbc98","2016-07-09 21:06:54+02:00","Merge pull request #8852 from unknownbrackets/clut-fix

Correct CLUT load size
"
