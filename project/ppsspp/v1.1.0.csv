"commit id","commit date","commit message"
"0d69576810a77253b5653d81b49de8478473ef09","2015-02-26 21:56:19+01:00","Merge pull request #7515 from unknownbrackets/gpu-minor2

For 5551 buffers, force stencil mask to 1/0
"
"3bf86dc340bf57ba4ec43eb58d8b7e788b624964","2015-02-26 21:56:31+01:00","Merge pull request #7513 from unknownbrackets/spline-minor

Improve spline performance
"
"d9902218497549373c8dab52be473c8d1543654f","2015-02-26 21:56:57+01:00","Merge pull request #7509 from unknownbrackets/gpu-minor

Correct full alpha for render-to-texture
"
"2cdb5a3f192f039261a230547b24a47a2b1b40cc","2015-02-26 21:58:15+01:00","Merge pull request #7483 from unknownbrackets/tls

Correct a lot of inaccuracies in the tlspl functions
"
"3b59c72280b76830a7912b63a04bbc549102ec11","2015-02-27 22:29:14+08:00","at3plusHeaderMap
"
"b0ee6f22fbeaa94ac1e9844a7e3a60e5cffd5214","2015-02-27 16:25:33-08:00","Merge pull request #7530 from daniel229/at3pheadermap

Update at3plusHeaderMap
"
"6294ecf64ba88d9ae27cbf2a63262a9ae18dcab4","2015-02-27 20:45:21-08:00","Prevent GE debugger crash on bad vertex addr.
"
"f200d5df94099019fde6f0ca8724cf207cfc2b96","2015-02-27 21:02:20-08:00","Use structs for the lowlevel at3 lookup tables.

More sensible this way.
"
"7379d37e7302655d6075bf5876d8633bc03d9e4b","2015-02-28 01:28:30-08:00","Bail on bad verts after grabbing byte increment.
"
"b25c2de3696eb0d8b62150644c395641fade7efc","2015-02-28 01:28:53-08:00","Allow block transfers from 0 that are too tall.

Hopefully this is safe.
"
"5ebfa574a005cec7205e3777267ffcf2e52b3db7","2015-02-28 10:42:02+01:00","Merge pull request #7534 from unknownbrackets/minor

Minor tweaks, atrac3 header map cleanup
"
"b01f18f3314860c3e6072e74420d76ecd319a10f","2015-02-28 10:26:58-08:00","Support escaped comment marks like \# in inis.

This fixes:
* Float values like INF and IND.
* Paths with \# in them.
* Keys with \# in them (in case of i18n strings.)

A small change in behavior: ; at the start of the line is now always a
comment.  Previously, if the line had a comment already, adding ; to the
front of it would not comment it out.
"
"522f9fabd80f3ed8b75a7f8fcde51606e91c582f","2015-02-28 11:15:02-08:00","Add some reporting to sceMpeg funcs.
"
"77ff1bc1c2c48d118f8de352500d288642fd9b2f","2015-02-28 12:17:18-08:00","Detect GLES version more accurately.
"
"d2960b23e82ea38a4194261c122e838f6d06d74f","2015-02-28 12:42:32-08:00","Stop background audio if disabled while playing.
"
"be26455f736eadb4258155a2990b814111b25409","2015-02-28 13:24:35-08:00","Fix size of first bg audio read.

Otherwise we get static at the start.
"
"7d937127f5ee88b146dcd07db0698c14b346e58a","2015-02-28 22:48:35+01:00","Merge pull request #7535 from unknownbrackets/bgmusic

Avoid the static at the start of background audio
"
"3efd3841c9140293f52fc32f4a8e6e1115f08883","2015-02-28 22:49:59+01:00","Merge pull request #263 from unknownbrackets/glver

Detect GLES version more accurately
"
"cf88c7ff6791f0897a6f94c59e783465eecc370f","2015-02-28 14:02:03-08:00","Add an option to ignore gamepads when not focused.
"
"b81fcf5d996a9ac52761f677234ba93ef297fe13","2015-02-28 14:07:32-08:00","Merge pull request #259 from hrydgard/clock-monotonic

clock_gettime(MONOTONIC) seems more appropriate than gettimeofday...
"
"cb664129193064637ee2a2a8a5b85047e3a95883","2015-03-01 06:52:45+08:00","Some work in sceMpegGetPcmAu

Fix #6546
"
"6cc84ffdbb0cf71af6457d9d6eeafd4cc21828f6","2015-02-28 15:09:41-08:00","jit: fix invalidation of blocks with only jr.

We need to expand the range not to the latest exit, but to the size of the
block.
"
"912cbd73685113ab53d89b7f5f470fa17d616790","2015-03-01 00:28:04+01:00","Merge pull request #7538 from unknownbrackets/jit-minor

jit: fix invalidation of blocks with only jr
"
"efa256619291db349e9ae0b2200259143128b41f","2015-03-01 00:45:57+01:00","Don't read past the end of sce_lbn files on virtual discs
"
"7aa5914a7a217f22923394d851ca4b7abc638d14","2015-02-28 16:01:41-08:00","Allow mouse clicks only when focused.

Fixes #6486.
"
"0653946acb3c79788eb1332f1b1a0838ad733633","2015-02-28 16:05:13-08:00","fix for crash opening directory
"
"cea907feb57fbb714150c6a4c74dd63d45182117","2015-02-28 16:08:37-08:00","Merge pull request #7540 from mikekov/master

Fix for crash opening a directory
"
"30ad27f961f35e7f17a68e55c74b643f46ab0b9a","2015-03-01 01:11:40+01:00","Merge pull request #7536 from unknownbrackets/control-minor

Add an option to ignore gamepads when not focused
"
"b5ee54a65312fbf61e7d70de7daa12449c9cdc2c","2015-03-01 08:39:48+08:00","Fix linux compile
"
"bb09c2d948a733b4f13983328f52df11978c5274","2015-03-01 01:57:16-08:00","Merge pull request #7539 from Kingcom/virtualdisc

Don't read past the end of sce_lbn files on virtual discs
"
"723d7c224dc2677e91af1a689f1e76c338e99675","2015-03-01 12:17:15+01:00","Merge pull request #7449 from unknownbrackets/xbrz-update

Update to xBRZ 1.2, with its perf improvements
"
"3773d25b2ea692fd61af117d739de023f4b94075","2015-03-01 12:27:02+01:00","Merge pull request #7537 from sum2012/mpeg

Some work in sceMpegGetPcmAu
"
"ba9d0b76658eca30d3b6ba586942678479169a34","2015-03-01 22:56:57+10:00","Don't set focus for Play choice
"
"17cc23e48d241903115239ccada5cf48e74ff925","2015-03-01 14:14:48+01:00","Merge pull request #7543 from Pulfer/focus-bug

Don't set focus for Play choice
"
"aeb03d1bc911062c90ebf8eff45dc1aab5765479","2015-03-01 15:28:11+01:00","Workaround for crash in Pangya Fantasy Golf reported in #6398

(Simple sanity check when decoding software skinned vertices)
"
"bfa52e61a3bf2b0c21c84cba857dcdcbeb58d541","2015-03-01 15:29:52+01:00","Some games spam sceAudioGetChannelGetLength, reduce loglevel to VERBOSE to ease debugging
"
"f861a4cc8c87c530872d6334fbb53367ba4d4f66","2015-03-01 15:59:17+01:00","Make the game button hold animation time-based instead of framecount based. Fixes #7404
"
"6f3125ac4d8ff1409d06ad170756498e4c2e8350","2015-03-01 16:09:52+01:00","UI framework: Make keyboard repeats time-based instead of frame count based
"
"d505ad14c4232927865a944a681c7560f7258c27","2015-03-01 16:10:22+01:00","Update native with time-based kb repeat, fixing #7531
"
"69e099e61556ad968f7c80c607e59171bfb5a003","2015-03-01 16:15:13+01:00","Fix #6398 for DX9 as well
"
"cbf8aa41a4a7ab3da01b415788745b1169652188","2015-03-01 16:17:41+01:00","Merge branch 'analog-options' of https://github.com/ShiftyAxel/ppsspp into ShiftyAxel-analog-options
"
"0d13a3be50429662bc4ea2b465b14a4029f3230e","2015-03-01 16:38:22+01:00","Share a translation, only show new dinput/xinput dead zone options on Windows
"
"5ac0cfc7211b95171b2c7450548e1ff2755fb794","2015-03-01 16:39:01+01:00","Merge branch 'ShiftyAxel-analog-options'
"
"83b8b23e409cbd8839c937663605d875b3961d63","2014-12-24 18:12:57-05:00","Remove a useless switch
"
"294ade904c5704d1db74f22e7c41d6406d9bccc6","2014-12-24 18:34:33-05:00","Remove some unused variables
"
"ff5d408c810e46c6dfbdaf5035ea6e472e6c8c52","2014-12-24 18:48:35-05:00","Combine two ifs
"
"37f50a37925244ddea56e5a3039a839ba8fb2d06","2014-12-24 21:42:41-05:00","Change to pass some arguments by reference
"
"22593cddcc1aa27135ada8fefe264c01dabc7762","2014-12-24 22:20:21-05:00","Use pre-increment instead of post-increment for iterators, and use auto for some iterators
"
"32825471a6a525cf3b2e8b216df711e632b559b9","2015-03-01 16:58:23+01:00","Merge branch 'chinhodado-cleanup'
"
"8f7e98f4840a19095c0f7bcd8450292d7b338055","2015-02-28 22:20:14-08:00","Keep Windows devices from sleeping while playing.
"
"72a2c8d0fef7c86866cdcf9e93911ce9b5d8fbbf","2015-03-01 18:11:22+01:00","Merge pull request #7541 from unknownbrackets/ui-tweaks

Keep Windows devices from sleeping while playing
"
"f312925374bd4bc94a1861bd90922f7496f5fd70","2015-03-01 09:26:08-08:00","Fix a log message.
"
"d49010832cd4d75a97ffee1ceb5f3559e580a0e3","2015-03-01 09:26:53-08:00","Make sceMpegChangeGetAuMode() operate more sanely.

I'm pretty sure this is what the intention was before, but it still
doesn't do anything useful (since ignore* are... ignored.)
"
"c16fac66889a914d8d1a8365dd9f866f35484e9d","2015-03-01 09:27:38-08:00","Force off full-range color during video decode.

Fixes #6528, so should make colors in videos more correct.
"
"238e0ed92e430af89eaaef53e584910dcd61551c","2015-03-01 18:32:47+01:00","Merge pull request #7544 from unknownbrackets/mpeg-minor

Minor tweaks in sceMpeg, fix color range
"
"383f894db73dd5e0384c04ac627a077377b86074","2015-03-01 10:31:30-08:00","d3d9: Make blending more like GL's recent changes.
"
"f45afb72c9abae54dcb1d5b5229fddc232f518e4","2015-03-01 19:44:09+01:00","Merge pull request #7546 from unknownbrackets/d3d9-minor

d3d9: Make blending more like GL's recent changes
"
"179e996b0b6ef6df76ab1ac3b5a7dadec4463adb","2015-03-01 09:58:47-08:00","jit: Discard unused regs before a syscall.

This is a pretty minor optimization, though.
"
"0c9f541a43b9692132e35480f3695186d66c50cb","2014-09-17 22:31:18+02:00","Move depalettize-shader generator to Common
"
"13bf0acd2857250d74307d6a957ce7c9cfc06440","2014-09-17 22:52:27+02:00","DX9: Add DepalettizeShader manager (not hooked up, so untested)
"
"78190f3e8cf9b8ba6a6be603a13eedabf3881fe3","2014-09-17 23:26:20+02:00","DX9: Hook up the depalettize code. Doesn't work yet though.
"
"1dfecbf2b8cbb7eb99a5e357cb41ec2306fadbef","2014-09-17 23:49:50-07:00","d3d: Actually upload the clut texture.
"
"7b76f7ae60c028ce695941e22fbbe0ec4f69c4b8","2014-09-18 08:00:41-07:00","d3d: Fix depal flipping and negative z.
"
"869f74d1b08095cd82ef59a5a609e20c115a1932","2014-09-20 22:08:42+02:00","Depal: Apply the half-pixel offset that looked the least wrong. Still not right.
"
"bda6f0a4b8195eba47ad6607f00b79dc17079eb8","2014-12-21 13:30:23-08:00","dx9: Reset more state before depal draw.

Was alpha blending before.
"
"3bc954778cbe3d7d81b23a9b784edd0c5de0ffa1","2014-12-21 13:30:46-08:00","dx9: Explicitly restore viewport after depal.

Otherwise, it doesn't get restored.
"
"105087d3676e9c9abdc03e12fc5d94a1fa8d5e0b","2014-12-21 14:09:18-08:00","dx9: Swap depal bgra in shader.

We don't swap palettes anymore, except in the shader.
"
"993fec45200eadaeeb5fd92662fa2667a625128e","2015-03-01 20:43:25+01:00","Merge pull request #7545 from unknownbrackets/jit-minor

jit: Discard unused regs before a syscall
"
"d4e74e69983a2322f0ae52bd856e304362cbab5a","2015-03-01 11:47:39-08:00","d3d9: Clarify a comment.
"
"dd1a40653fc3832f3100591bb3def90b33607711","2015-03-01 21:01:49+01:00","Experiment: Disable 24-bit Z and interleaved depth/stencil on mali.
"
"c0450f7f9ebea183d97efef4e1deaf7c91a0af3e","2015-03-01 21:04:36+01:00","Merge pull request #6920 from hrydgard/dx9-depal

Dx9 depal - needs debugging before merge
"
"acdd0807f55128471007f9960cff4f1a718a0a22","2015-03-01 21:02:19+01:00","Experiment: update native, disabling 24-bit Z on mali. see #7218
"
"fd1dcb881f73c3e67daf5c87dbb1789282f611fa","2015-03-02 01:03:12+01:00","Add ability to flag function to clear a bit of stack. See #6374, idea by JPCSP, pointed out by sum2012.
"
"22ce464e420db837b0971e8268028eb2509ca19f","2015-03-01 18:31:25-08:00","Don't wake a vblank waiting thread within 115us.

Fixes #6966, matches PSP behavior.
"
"818627801d55ec3de6be8464af454e66de5060ee","2015-03-01 18:35:28-08:00","Fix newlines in old merge, oops.

This is now showing up in git because I touched it, and it's got the wrong
newlines.  Just making it go away.
"
"3e1e8f1bc09c51419bb8c9475553fc23f85d6913","2015-03-02 14:02:37+01:00","Merge pull request #7548 from unknownbrackets/vblank-waits

Don't wake a vblank waiting thread within 115us
"
"98d7afae8916553cb607016c99acae0cf0617e8e","2015-03-02 22:34:51-08:00","Switch to #pragma once in a few places.

Doesn't really affect git history much to change these.
"
"168ab062662b537129e92fdd2bbbef1b7cc0e852","2015-03-04 02:16:47+10:00","Fix image format for screenshots with Qt UI
"
"f81ec4ce658c61d2e8bbe344de3b0059ea3ba511","2015-03-04 02:53:33+10:00","Keep Qt UI screenshots in RGB888 format, just convert the buffer properly
"
"e898200c19452b97968a2f32a11bebfb59596169","2015-03-04 03:21:38+10:00","Free flipbuffer
"
"27270e263d7be8d6239d11290805d96ecc05194c","2015-03-03 18:54:55+01:00","Merge pull request #7553 from Pulfer/qt-screenshot

Fix image format for screenshots with Qt UI
"
"b3bb733b0dbc5cd2790d56ff96f1bd554ac7bcc1","2015-03-04 07:21:38+08:00","Add back hleDelayResult in sceMpegAvcCsc

Fix #7549 Dengeki no Pilot: Tenkuu no Kizuna video flickering
But not break Bleach heat of soul 6
"
"4c827d1b3ec8cd04fa2c8d59f8288b5c4ce012ab","2015-03-04 20:59:09+08:00","Add install error translatable
"
"3e272e4573c995be4ae687bc151d3ade8abee46d","2015-03-04 15:04:07+01:00","Merge pull request #7556 from sum2012/install-error

Add install error translatable
"
"e7e8bf9221f627e74cdd7b8ba9e613522ff76a10","2015-03-05 02:06:11+01:00","Set DPI awareness in manifest

instead of doing it at runtime, still works in WinXP according to StepS in the IRC,
should probably be tested there to be sure
"
"565da731d1ac0608800d1ef0901f40926cd281c3","2015-03-05 04:07:55+01:00","Don't include 2 manifest files

So we apparently included 2 manifest files.
One from the *.rc file and one generated by the IDEs manifest tools
* added the contents of rt_manif.bin to PPSSPP.manifest
* made ppsspp.rc include PPSSPP.manifest
* set the *.vcxproj to not generate an additional manifest
"
"3e408047d319acfd65b0cba222291446a11d570d","2015-03-05 10:36:03+01:00","Use unknown's measured stack clearing amounts in sceLibFont
"
"af4b5590380f74d8ba9bb7f15da24ef717b48597","2015-03-05 10:37:28+01:00","Merge pull request #7547 from hrydgard/func-stack-clear

Add ability to flag HLE functions to clear a bit of stack.
"
"45d8f0285b8f537c7077e4ba3638246f762f6ef1","2015-03-05 10:41:20+01:00","Merge pull request #7560 from Bigpet/dpiaware

Add dpiawareness to manifest
"
"2b98f15f17f0ead8da8fa54c39f7d94bef7e2da2","2015-03-05 10:58:25+01:00","Add option to auto-center the analog stick on touch within the boundaries of the stick

TODO: Should this be default? Does this make sense for d-pad too?
"
"3d012f2679b5e5988f3e32de333ba2c2d4597f9d","2015-03-05 12:26:21+01:00","One more stack clearing value in sceFont
"
"3df63fdb432d48501a8efee90919d4d4514dce85","2015-03-05 12:36:15+01:00","Merge pull request #7554 from sum2012/sceMpegAvcCsc-delay

Add back hleDelayResult in sceMpegAvcCsc
"
"27ee4eaefd5d38e9cf23553d1a72508f51baa82b","2015-03-05 14:37:08+01:00","change manifest namespace to asm.v1

I really just changed it v3 to test it being the same as the second that
Visual Studio auto-generated but that seems to not have been a good idea
I pretty much just accidentally commited it anyway.

Fixes #7562
"
"d78b9a831089e5606ec05f70f9bce7325c9ea72b","2015-03-05 15:14:55+01:00","Merge pull request #7563 from Bigpet/dpiaware

change manifest namespace to asm.v1
"
"c991dd7555f6d5da6145d190c60d28a5d510539f","2015-03-05 08:31:59-08:00","Oops, fix an important typo.
"
"c3f38f31f918482936061f671447653bebdf7512","2015-03-06 00:42:08+01:00","Update the (currently unused) ARM64 emitter from Dolphin's current one (by HdkR).
"
"30a362f227e2ea6f09fdf7395347e6ae51d906d4","2015-03-06 00:19:31-08:00","Make compilable with VS2015

So Microsoft decided to make their C runtime conform to C99
"
"f5795a68a7fe5249ac5e6dd1deb6996cfdfac4dd","2015-03-06 00:24:39-08:00","Make compilable under VS2015
"
"3ffd5dda1e9637b20bdd00c70ec1df5eed04c437","2015-03-06 21:45:00+01:00","Merge pull request #264 from Bigpet/vs2015

Make compilable with VS2015
"
"594ed65bd36f208c884ac7980fdb5e89605812f4","2015-03-06 21:49:04+01:00","use the timezone value for non GLIB, non MSVC platforms
"
"3ada9887403df9299af5402c5bf079475d34986e","2015-03-06 22:10:10+01:00","capture by value, since the dispatch seems asynchronous
"
"077eae625594dfa65242baf8f306e22012f7ab5d","2015-03-07 00:16:50+01:00","Merge pull request #7566 from Bigpet/vs2015

Make compilable under VS2015
"
"12010bb4ce09fd80295d4e45a40724a0fc8c470d","2015-03-05 09:49:25+01:00","Revert 'Experiment: Disable 24-bit Z and interleaved depth/stencil on mali.'

This reverts commit dd1a40653fc3832f3100591bb3def90b33607711.
"
"516dbf37e44114984289a0800a662e4a72dd461e","2015-03-07 01:29:38+01:00","ARM64 buildfix
"
"23150858a4d593e2725e6ac8ae00e2bb4ffe18eb","2015-03-07 13:56:17+01:00","ARM64: Make sure that eglGetProcAddress is declared, so the return value doesn't get truncated to int.
"
"9c3ccc97a2fa9a7347daf30e6df25b2cc7a41134","2015-03-07 12:07:53-08:00","Support EXT_shader_framebuffer_fetch.

We only supported NV_ before.  Not tested on any supporting device, but
this is primarily found on PowerVR devices.  This may allow them to
perform effects (like min/max/etc.) more accurately and quicker.
"
"2344760018f995a4195d7d1daffd95995ac6828c","2015-03-07 12:09:27-08:00","Use framebuffer fetch for more accurate blending.

On devices which support it, framebuffer fetch should give us more correct
blending than copying fbos or using a fallback (such as doubling which may
clamp.)

Not actually tested on any supported device.
"
"656fe78656a99b92cfbd144a148e93e95f5dab04","2015-03-07 16:09:17-08:00","Check for ARM_shader_framebuffer_fetch.

Also, let's combine them too.  Unfortunately, the shader needs a require
that matches the one they have, so we need the individual flags also.
"
"08a1bb8796968944593a5edc1068ca5404efc081","2015-03-07 16:11:43-08:00","Add support for ARM_shader_framebuffer_fetch.
"
"7b262949aa41f73f7509820896035145eb4b1c38","2015-03-08 10:58:12+08:00","Add sceAudioRouting

First step to fix 'Invizimals' 's game
"
"dae6a4e40a702cb56f4f678c1d3d1cc48f1d4509","2015-03-08 11:42:48+08:00","Fix and add 2 function
"
"e5b349d33e5e48b737bb405fa14a936358262ee8","2015-03-08 11:45:27+08:00","Change to INFO log

Because this is still not test yet
"
"dbae0423d682e11730cd2de78aa7eb339aa9443b","2015-03-08 11:48:55+08:00","Add sceUsbCam module
"
"a04af187ea055699cba72db093a78dead9656c72","2015-03-07 19:52:09-08:00","Fix 16-bit indexed rectangles.

This was causing us to draw double the rectangles.  8-bit indexed
rectangles are already correct.
"
"6509468d47d619d86e5f7e4c3aa313c165222299","2015-03-08 12:09:30+08:00","Fix save status
"
"0157f88035e8ca89e4b246a05f1c7d75554e5ae3","2015-03-08 12:37:56+08:00","Fix sceUsbCam
"
"6aec7238fb4e6994e57effe49646eb725ab9c165","2015-03-08 12:40:30+08:00","Attempt to fix linux build
"
"c55ecc4eb998ae5477588b80666be8121c786f3c","2015-03-08 12:50:06+08:00","Another attempt to fix linux build
"
"039b51083cffb758509e2106681426bc5800c9e7","2015-03-08 13:27:40+08:00","Add sceG729 module
"
"c9ddf8c642cad52dcca5a9c14c40df74966026e5","2015-03-08 13:38:47+08:00","Build fix
"
"eb349a19781dad480c467929f8f20c4138f6e085","2015-03-07 22:31:55-08:00","Make sure not to try multiple shader fetch exts.
"
"39347efda44252113ee59e5bae706217c3356235","2015-03-08 00:12:29-08:00","Fix shader blending on ARM devices, oops.
"
"8b2712975ae7dd72a356175396e54310e26566eb","2015-03-08 16:27:12+08:00","Forget update HLETables.cpp
"
"0030b85e00d04f0f4036ccc12a02c12bb79d35df","2015-03-08 16:41:21+08:00","Typo in Android.mk
"
"18e7e736464486568f2f071b0d0869beab3363dc","2015-03-08 16:53:49+08:00","Type missing in HLETable.cpp
"
"a464221f8389a84533bdd80121a737b6eb525255","2015-03-08 17:15:42+08:00","Typo in Core.vcxproj
"
"8c8613b2db280392d7af5259ea577ee852045bed","2015-03-08 12:05:28+01:00","Merge pull request #7569 from sum2012/patch-1

Add sceAudioRouting,sceUsbCam,sceG729 module
"
"c2435c1e9b7184f821b156a00f462809db332428","2015-03-08 20:07:03+08:00","Add sceNetUpnp module
"
"4e302df69b1e6940c32634d36df373a996c4beb8","2015-03-08 20:10:10+08:00","fix space bug
"
"39cb74a8d3937558e54477e929bd7e45f5e48899","2015-03-08 13:12:13-07:00","Simplify transform in throughmode/sw (rectangles.)

This should make it a bit faster, a bit less work.
"
"c7984dd93e4671999ee48069920837b69920019b","2015-03-08 13:13:04-07:00","Use texture stage 3 for the palette, always.

It's better to keep a stage dedicated to each thing.  This also makes it
easier to potentially process depal in the shader, if we do that.
"
"83e4edbc7cf8927895fc9562323132f64746d03f","2015-03-08 14:19:44-07:00","Oops, don't affect hardware transform.
"
"fb071a066d19f6bcb8a6ec09f56f208ce2dbe2a6","2015-03-08 18:01:00-07:00","d3d9: Change vertex attribute logic to match gles.
"
"04eb83002cc5cce0300784e7219182cf8c207765","2015-03-08 18:03:17-07:00","Assume lmode does nothing in throughmode.
"
"cf7a4ab2cf97df56c10a612ce0197d22544cb265","2015-03-08 18:28:59-07:00","Avoid shader id data that doesn't change shader.

This may reduce shader switches, or more likely at least total # of
shaders, when alpha test settings are changed but alpha test is not
enabled.
"
"a82bb31c6f118312e835680acdb023cfaaacda3f","2015-03-08 18:35:53-07:00","Decimate the fragtest cache less often.
"
"534b06d3ff4895d3291c1fb9d8bb7af8ce1c6a1e","2015-03-08 18:36:05-07:00","Correct clearing of texture cache on oom.
"
"f0676b0c85d589fb1e1d3e145d201c16767cd504","2015-03-08 19:08:21-07:00","Optimize color tests against zero.

They seem to be somewhat common.  Speeds up Tales of Phantasia X a bit.
"
"f6e6512b5dc4145055d6763c09044af6e7a01156","2015-03-09 09:53:44+01:00","Merge pull request #7574 from unknownbrackets/gpu-alpha

Small optimizations to fragtest cache and oom tweak for texcache
"
"b501c3caec6a98a24556f8a321b81cef4ce28a1c","2015-03-09 09:54:11+01:00","Merge pull request #7571 from sum2012/net

Add sceNetUpnp module
"
"9db4c5f34d746afb7befd98e827efa7c82f5d35c","2015-03-09 09:59:45+01:00","Merge pull request #7573 from unknownbrackets/gpu-minor

Small optimizations to software transform
"
"33b291a36e4859e599b7e56454fd93a76702e34d","2015-03-09 22:24:23+01:00","Merge pull request #7567 from unknownbrackets/gpu-blend

Use framebuffer fetch more and on more devices
"
"dad8f5cd2536d81fa1a585b78941a5bcd7e09e60","2015-03-10 10:56:09-07:00","Fix a bad pointer dereference / cast.
"
"3ce582f8a75c9d771ef8b58245e2965c2e768d6a","2015-03-12 19:58:09-07:00","Act as if unreadable files don't exist.

This mainly affects Linux.  If a file cannot be opened for reading, we
should just return false for Exists(), since that will prevent us from
trying to read from the file later.
"
"e45daac41c365f64b61279c7ef120d13cdff6059","2015-03-14 00:14:59-07:00","Fix a dumb mistake for shader framebuf fetch.
"
"7e0489c83e053009f1c5bc2070f67623ae03b07a","2015-03-14 14:58:32-07:00","Keep better track of framebuf usage flags.
"
"2b0e0c547d55f18067d3273eaccaef26ed663e9b","2015-03-14 16:01:43-07:00","Fix glInvalidateFramebuffer in EmuScreen.
"
"d8478255d450af6aca33000efd8d547b67d4b6e8","2015-03-14 16:02:04-07:00","Invalidate temp FBOs each frame.

These are used for depal and render-to-self, as well as shader blending.
"
"e7b830ff618707f895aaf1c15e232d6ae52b1e62","2015-03-14 16:11:20-07:00","Invalidate buffers used for download.
"
"0f38a1f459b34c5b6fccf456026dbad8dc445944","2015-03-14 16:16:05-07:00","Invalidate buffers after using for post shaders.
"
"6b26e1a591aaa00c6765700cb3aa822618acaf09","2015-03-14 18:11:00-07:00","Read pending vertex data before exiting gpu loop.

Fixes save pictures in Crimson Gem Saga.
"
"d4840165bc5ce485e60b682690bd5a9d54046add","2015-03-15 11:14:43+01:00","Merge pull request #7594 from unknownbrackets/gpu-minor

Read pending vertex data before exiting gpu loop
"
"085ecc0a64061e94b101108225490d7625462276","2015-03-15 11:18:30+01:00","Merge pull request #7591 from unknownbrackets/gpu-framebuf

Better glInvalidateFramebuffer usage, track usage flags better
"
"655c25c692efe9d1241d66fb7c32c49d393ca1d3","2015-03-15 21:08:11+08:00","Add sceUtilityLoadUsbModule() and sceUtilityUnloadUsbModule()
"
"1f987ef6fc4fb27c86152b01e1a599119bc0983f","2015-03-15 15:32:53+01:00","Merge pull request #7596 from daniel229/sceUtility

Add functions sceUtilityLoadUsbModule() and sceUtilityUnloadUsbModule()
"
"b083085c76e04c2ea3dfd0507e8e42f26a824b35","2015-03-15 15:43:05+01:00","Merge pull request #262 from unknownbrackets/ini

Support escaped comment marks like # in inis
"
"88249e89a826929eaac409749006a0c45aa1282c","2015-03-15 23:33:32+08:00","Report sceUtility(Un)loadUsbModule.
"
"e3f5998b25712b65ba80eab0bd5ddae1697162ac","2015-03-15 08:37:54-07:00","Merge pull request #7598 from daniel229/error-report

Report sceUtility(Un)loadUsbModule.
"
"7ee91124255b19b52f2b571444ccac76f65d3fa0","2015-03-15 09:10:09-07:00","Avoid constant reload of frequently changed tex.

If we detect that it's frequently changing, this will cause it to spiral
into an infinite loop of staying frequently changing and reloading to try
to scale.
"
"37344d1d5775f742f771eb99773c7c42a6f3a8d7","2015-03-15 17:31:47+01:00","Merge pull request #7586 from unknownbrackets/ui-tweaks

Act as if unreadable files don't exist
"
"8f8aeaef77da16958024d9ddeba75102484758aa","2015-03-15 13:15:16-07:00","Improve depal shader failure cases.

Primarily, this handles lost (e.g. Android sleep) better, in that it
recreates the vertex shader.  Previously, this would simply cause all
future depal operations to fail, and to constantly retry compiling and
linking the failed program.
"
"d00f6adf114437918712d4bd68074cdb9efec255","2015-03-15 14:43:07-07:00","Avoid querying attrib locations in depal runtime.
"
"0b7ae3dc8be1ab3f2d3f6403852dd1ed821348f8","2015-03-15 23:26:49+01:00","Merge pull request #7600 from unknownbrackets/depal

Improve gl lost handling for depal, minor tweaks
"
"0dda098b2b72233ec1e53f7db893235ce46cbfeb","2015-03-15 17:05:23-07:00","Oops, forgot to actually reset vertex shader.
"
"b8d798c3a5909b08247e9fbe62025660f1567763","2015-03-17 08:40:57-07:00","Allow directories to fail to open.

This allows virtual disc files while not allowing unreadable files.
"
"86c76fc4dc2ae16b06f9ffa53563e166866c873e","2015-03-18 00:29:32+08:00","Add remain frame information in sceAtracGetRemainFrame
"
"a4d8be50232946143d68e14deac8b51ddac7e5d4","2015-03-18 11:43:31+08:00","Fixes saveicon in Gakuen Heaven.
"
"9d52ee4e21c96eed00ca5289dd2fde3e8437574c","2015-03-17 23:06:25-07:00","Fix cases where breakpoints were skipped.

After reset or savestate load.
"
"6c03fc4f01f3a6b44b4ae1a216f95ee23afd4785","2015-03-17 23:50:20-07:00","Correct savestate interaction with proxy blocks.

At least, I think that's what's going wrong here.  Either way, this is
safer and apparently fixes #7612.
"
"fd2ff57ce8bf7b724be20758bc307fbf88814cf0","2015-03-18 16:24:56+01:00","Merge pull request #7610 from sum2012/atrac-minor-

Add remain frame information in sceAtracGetRemainFrame
"
"e272631bc4ff91ae151823b96b3682ea53ec396e","2015-03-18 17:57:58+01:00","Merge pull request #7614 from unknownbrackets/jit-minor

Correct savestate interaction with proxy blocks
"
"cf7115aa176e555638c659f56535f6e41290e8a1","2015-03-18 18:11:30+01:00","Merge pull request #7599 from unknownbrackets/texscaling

Avoid constant reload of frequently changed textures
"
"6b2acbae8fe556b1c7abea1f9e35e987cb829116","2015-03-18 18:11:54+01:00","Merge pull request #7613 from daniel229/replace_download_frame_in_gakuenheaven

Replace download frame in Gakuen Heaven.
"
"67e847366a951e5a761e3e9e93139cb1422b19e4","2015-03-19 22:34:35+08:00","Add more log in sceAtrac
"
"6acd06348e9cf654c72c3afc858293cd115ada1e","2015-03-15 18:44:44+01:00","Better error message when starting without a binary for the current ABI
"
"acc730f944daf9cae8abdc772fd415d6aea9df2a","2015-03-15 18:59:48+01:00","Update native
"
"f7215c39eea90c83e635f999fcc77eb4e2329b21","2015-03-19 23:09:39+01:00","Add missing memcheck to Replace_memcpy_jak
"
"b92c0538b67863d41b96918dafa416fb76ef562a","2015-03-20 21:36:31+08:00","Remove blank
"
"1ce1da9e73515b05f000cdbff8b089da6f0507c7","2015-03-20 21:38:13+08:00","Remove another blank
"
"87f31d0803d64ca15971188467bef906d8c418f2","2015-03-20 14:40:04+01:00","Merge pull request #7616 from sum2012/atrac-minor-

Add more log in sceAtrac
"
"b26e597479544040893109f165b791364edf9ce7","2015-03-22 05:42:44+08:00","Imp sceUtilityCheckNetParam

CS Combined Assault v06 homebrew use it
"
"38eb713794b68ae058e1f62fda9d8ed7360db9e5","2015-03-22 05:58:00+08:00","Fix tab
"
"09c86707302bc0e0405ad71f11f146032f661d26","2015-03-22 06:01:06+08:00","oop
"
"2c89d78f9d9ce824109d085806d6499cdc4524f4","2015-03-22 06:16:28+08:00","Add a logging  in sceAtracGetRemainFrame
"
"35c04e118779093aaff07489c94cc1dcb3a0c403","2015-03-22 06:35:49+08:00","Fix tab
"
"ea8dc984d28a33fbbc2b5a6e22dc472f57a03456","2015-03-22 00:32:21+01:00","Merge pull request #7622 from sum2012/net

Imp sceUtilityCheckNetParam
"
"cac05197ed0d8c2a757801d71d9c7333e6029ee5","2015-03-22 00:32:47+01:00","Merge pull request #7623 from sum2012/Atrac-minor-

Add a logging in sceAtracGetRemainFrame
"
"433347e3b609fab4f0c030b8acd73b2e546b9b84","2015-03-23 07:25:44+08:00","GPU:Do not 'decimate' the usageFlags.

Fix #7625
"
"41631eb2b15400675ea84c0c9b555c57c5073b03","2015-03-22 00:12:08-07:00","Try a different format of HLE logging.
"
"2c8199ec731db8c85054551661661b50448eaa2b","2015-03-22 00:38:56-07:00","Make gcc happy when there are no var args.
"
"1b2b5f41a9414511be7a1a484c53e22b48c8c245","2015-03-22 14:41:59-07:00","Fix a typo.
"
"fcf05182235c80a3789b2ea447184055e5bd12fc","2015-03-22 16:57:56-07:00","Update all the HLE tables with arg and ret info.
"
"52a37c1330c696f1ab7db18ad8930a94baced93d","2015-03-22 17:11:52-07:00","Actually use the table's arg and ret masks.
"
"110cc119ced89535edb71923af0e232c5efaeba8","2015-03-22 20:27:08-07:00","Change some logging in the last Callback func.
"
"74c6f2696d6a3109554db67ec83b0af2419ea4c7","2015-03-22 21:06:08-07:00","Add log formatting for 64-bit arg types + stack.
"
"c2153ff9762b66022b8329118018024d9121b43f","2015-03-22 21:22:40-07:00","Add new logging in sceKernelCreateThread().
"
"5fa3bf0eb95828fb2640dbb493b6978dc3b80d13","2015-03-22 23:35:24-07:00","Move the viewport transform to the proj matrix.

The viewport has an implementation defined maximum size.  On some devices,
it's as low as 2048 or 4096.

Tales of Destiny 2, for example, uses a large viewport, which may be
outside this range at 1x or 2x on such devices.  This makes it work much
better.  It may also have better subpixel precision.
"
"3ef8c7015136a37a38cc4ac06cf969f92335afff","2015-03-23 09:17:17+01:00","Merge pull request #7629 from unknownbrackets/gpu-minor

Move the viewport transform to the proj matrix
"
"3549705195d778628964bae940dbd316323dbccb","2015-03-23 20:29:51+08:00","Use better solution from @Bigpet
"
"79fc557ad1f3285a7ce51bde2c88796c646610d4","2015-03-23 15:22:08+01:00","Merge pull request #7626 from sum2012/GPU-minor

GPU:Avoid 'decimate' the usageFlags corrupted memory
"
"b9fbaedf2bca799a38b416129a5d45aa98493e77","2015-03-26 00:25:55+01:00","Merge pull request #7628 from unknownbrackets/hle-log

Add a more centralized method of HLE logging
"
"62e621f8a17ab742c37c0cb8758cb08cd601f54a","2015-03-26 00:29:51+01:00","Merge pull request #6976 from unknownbrackets/atrac-minor

When seeking to atrac positions, force alignment and start from zero
"
"425eed7bea5f1710fa5e670e73a4923110307af6","2015-03-26 20:23:37-07:00","Keep separate track of ffmpeg pos and decode pos.

FFmpeg buffers, so forcing the pos only makes FFmpeg read in garbage
because it doesn't know that you seeked in the bytestream on it.
"
"ae4811d0d15dacd9765a9fb1472c02ba5fd263a2","2015-03-26 22:34:45-07:00","Still fudge seek positions for low level.

Since in this case we're tricking it into reading the same buffer area.
"
"0978500f2f5ab9a615e21f44695657e50dcc263a","2015-03-28 00:09:46+01:00","Merge pull request #7635 from unknownbrackets/atrac-minor

Keep separate track of ffmpeg pos and decode pos
"
"27e27f11ad1d06f42bc18419dcb8422ca7c186db","2015-03-28 13:01:10-07:00","Shutdown a couple dialogs more correctly.

This brings them back to none instead of shutdown.
"
"c642f92bfbaba9ccf863951f424de9c1cc1ace70","2015-03-28 13:01:30-07:00","Initialize a few display state values on init.
"
"0aaabcaac951576acc774ab44f48ef2cf843996a","2015-03-28 13:01:49-07:00","Clear old registered action types on reset.
"
"03bd1b9b6935fd9986ccc21415d4a031801672b2","2015-03-28 13:06:57-07:00","Initialize a few sas values earlier.

This just makes things a little safer, none of these ought to be used
without Start or similar.
"
"d575a711abde4d416265cb6bb64e534457bd1471","2015-03-28 13:08:13-07:00","Update ffmpeg Mac build, fixes #7423.
"
"0edfb75bfb78e502af6cdaff057db4c839b07d2e","2015-03-28 22:00:50+01:00","Merge pull request #7639 from unknownbrackets/minor

Update ffmpeg, clean up some state on reset
"
"fc3d6ff04a63ee4cadc425d17016b55e2869ab5a","2015-03-28 14:28:51-07:00","Disable reporting for some thread funcs.

We know they are misused and it's not giving us extra information.
"
"8d5f843bb858d8a849c0afa7cb02897c2fbe6400","2015-03-28 14:46:09-07:00","Cleanup thread start and create logging.

Also report less cases.
"
"13c08abb64b97d5b1d1d7dfb1ff51fc7f5ddb42d","2015-03-28 22:57:06+01:00","Merge pull request #7640 from unknownbrackets/minor

Disable reporting for some thread funcs
"
"67d9233de1db657962947fffaab745cff9d35af0","2015-03-28 20:46:37-07:00","Fix some compiler warnings.

Oops, f format in hle logging wasn't working right.  See #7641.
"
"bdd1db1fa222a328d6bfc761180378d5cd8fbd92","2015-03-29 12:23:47-07:00","x86jit: Handle vmin/vmax and vsge correctly.

Unfortunately, this boots vmin/vmax from simd, currently.
"
"1a384da70f7e1ae8d493eb2e7013d163382e9f74","2015-03-29 23:29:12+02:00","Merge pull request #7643 from unknownbrackets/jit-minor

x86jit: Handle vmin/vmax and vsge correctly
"
"bf4a5f03522a255723c1c098d97f42fd66f26c12","2015-04-03 11:13:38+02:00","Detect the Android UIMode, use as device type. For better automatic configuration for things like Android TV.
"
"98083c8985ef52cb018fc8bd4ec89d2aaefccdd4","2015-04-03 11:14:21+02:00","UI: Make InfoView focusable, make it possible to make TextView focusable.
"
"2f5b1c6ebe10e1d7ee4c3429ebfc5c7e71b6d52b","2015-04-03 11:35:55+02:00","Add Mupen64's hack around the broken Moga library (that won't work in android 21+)
"
"2c51f06c78e18191544d16983c36bd86022cdebe","2015-04-03 11:39:52+02:00","Update submodules, get rid of analytics

Don't want to take a dependency on google play services. The old
analytics lib is broken on android target=21+.
"
"6573bca31383fdea3a3b4e91d6aed02a418b7d45","2015-04-03 11:48:58+02:00","Fix UI navigation using gamepads when tilt is enabled
"
"3eff1100d0c0ec52841b49f459c4240ecb0d259a","2015-03-19 21:23:52+01:00","Try to add the very basics of Android TV support
"
"b7498f4581e661aba9bd9b7ee0983597a82fe832","2015-04-03 11:50:03+02:00","Make some UI adjustments on TV devices
"
"16e9828b86930312f001f86b325623f1ce20f306","2015-04-03 16:57:59+02:00","Merge pull request #7650 from hrydgard/android-tv

Android TV
"
"6936a035865d15db3ffaab76504712bef89ad1b8","2015-04-03 07:58:51-07:00","Reduce travis Android parallelism further.

We're still getting ICEs, for example in #7650.
"
"8fd906672d3414290cb2795b34fc0aee339b87cc","2015-04-03 18:20:56+02:00","Default to 2x rendering on some more devices.
"
"1e757af64528279fae877403f55c106add97751e","2015-04-03 17:49:46-07:00","Update travis build to use ndk r10d.

Need to extract it from this archive because Google's is compressed too
heavily and runs out of RAM extracting.  Bonus: this one is smaller anyway
(lzma2.)

Thanks go to SonicAdvance1.
"
"3120ba3cf4fc1d49452a504dc40d67e25a1a9bb6","2015-04-03 19:12:48-07:00","Merge branch 'travis2'
"
"0b3e290c4e6bb7a5afbeff87b037270b2da5e737","2015-04-03 20:02:05-07:00","Try using only one connection for NDK download.
"
"d91ab195c4c9489fb9579ac1ae375cef1c97f374","2015-04-04 11:27:22+02:00","Don't use CLOCK_MONOTONIC_RAW on android, it is super choppy on Nexus 9.
"
"a2dd635d6c0c9d9ff64857ceed93f0962bd43e78","2015-04-04 08:22:34-07:00","Tweak options to debug Travis dl failure.
"
"42a50832b3f27f92726cb1fc6050e0a2c9a9bb81","2015-04-05 19:40:57+03:00","Ignore manifest files generated by MVSC.
They are generated since PPSSPPP switch to static linking.
"
"d43368f4ca98c975565d15f3afc0433e4b0738ad","2015-04-05 19:17:30+02:00","Merge pull request #7656 from pal1000/work

Ignore manifest files generated by MVSC.
"
"0fc64dc7173c994edf15cdcca84823e7c2d3ed50","2015-04-05 17:22:38-07:00","Return an error when the atrac stream is full.
"
"2450724be24ef430340dcc7b5bd445875fd31b42","2015-04-05 18:03:50-07:00","Make Memory::Memcpy() execute memchecks directly.

This makes it easier to handle breakpoints in HLE.
"
"e2ecd1eabd8442f012e8f654f2804c161053928b","2015-04-05 18:09:35-07:00","Add memchecks for ReadStruct/WriteStruct.
"
"a7ed59e11b1a05857e8df94d7b594ba7fa198119","2015-04-06 09:18:58+02:00","Merge pull request #7657 from unknownbrackets/atrac-minor2

Return an error when the atrac stream is full
"
"2209cf22deef0a7fd4d9a1e10946f6506e3ba5ce","2015-04-06 00:37:33-07:00","Do the memcheck after the memory access in HLE.
"
"1ac81b501480465ecce19c02ebb9ad7bc6021e0d","2015-04-06 10:05:44-04:00","sceIo: Remove always false condition
"
"a269e118b35531e977a835ea346b4d415119b50b","2015-04-06 17:03:14+02:00","Merge pull request #7658 from unknownbrackets/debugger

Make it easier to use memchecks in HLE
"
"f4dfd49a7bc0269604ae204f158da669d3d27c03","2015-04-06 08:05:26-07:00","Add more retrying to Travis download.
"
"b309c839734f471edb2573fbe12cb4ecbcaf7339","2015-03-05 23:31:03+01:00","Initial work on ARM64, based on the ARM jit.
"
"3aebc063293a1b84ae42dc117b302a376a1574c6","2015-03-07 14:44:15+01:00","Better logic immediate support in ARM emitter. From V8.
"
"8945b2476d8895b67bd1de886424609828018810","2015-03-06 21:42:19+01:00","Add the beginnings of a rudimentary ARM64 disassembler
"
"524583d53ec2e9f549d1841aa4ec6bbfb780d3dd","2015-03-07 17:58:15+01:00","ARM64 emitter work, dispatcher work, etc. More work needed.
"
"f732fbb8855e634ea42b5f205da15b653d6aa3f3","2015-03-07 22:27:44+01:00","ARM64 emitter: Add MRS/MSR support (only for the flags register). Add some more to ARM64 Disasm
"
"e7e58591dab1b3522f53800ab27a327c77df87a9","2015-03-07 22:29:44+01:00","More JIT work, not quite there yet...
"
"feec574ece30f4fdd8dc61c8e8d6510cfdd314ed","2015-03-07 23:04:48+01:00","Arm64Emitter: Add some helper functions to add / sub by immediate
"
"34ab5329713ba9a2ffd1feef592c1c7a2a6556c7","2015-03-07 23:05:31+01:00","ARM64 jit: Fix some pointer truncations and other fun stuff..
"
"58b059ca14f597915dd2c0628a1c2056d55537af","2015-03-08 00:56:15+01:00","Some casting cleanup, misc
"
"80a813bcbd78fb4016d7e2e7298663ab2a184d34","2015-03-08 11:26:03+01:00","ARM64 Emitter: Optimize MOVI2R by always starting with a MOVZ, killing the register dependency in the out-of-order engine of the CPU.
"
"73dd26fb7548619e3e6939ece0e19d45af28d967","2015-03-08 11:26:45+01:00","More ARM64 disasm, warning fixes
"
"cc722f09f6e3ffb2142a53ab6b6d3d37d4c0f75e","2015-03-08 11:46:35+01:00","Improve ARM64 disassembly by merging MOVZ+MOVK. Minor stuff.
"
"c4cdca83fcc0a51586ba7e5d39a65ed6865e0555","2015-03-15 20:51:08+01:00","ARM64: Fix some branch distance checks, add more stuff to disasm
"
"742f48ad56f60354967243cd2ebafcabee23ec30","2015-03-15 23:30:13+01:00","ARM64: More emitter and disasm work
"
"8dc77ff32e4225ef5135509c3353b5b39427bb8e","2015-03-15 23:38:21+01:00","ARM64: Turn off some debugging stuff, start implementing instructions. Something is wrong though, if I implement more than addiu things break..
"
"d16bd1fd30b06b3ffe2868c3bad03602b2e713f1","2015-03-16 00:29:20+01:00","ARM64: Port over basic load/store from ARM. Works in FastMem only.
"
"2ff608b72e6cfb08c52a7980a3aff6cc3428bffc","2015-03-16 01:24:03+01:00","ARM64: Add FDIV to emitter
"
"d2c746dd64b1e3e773aebbcb4fb2985b3e03d13b","2015-03-16 01:24:48+01:00","ARM64: Get the FP reg cache working, implement some basic FP arith
"
"0922db6062dbcccecb5b2ea7bcc181337f6d7efb","2015-03-17 00:54:56+01:00","ARM64: Some FP work.
"
"d3669daba461759da8aaebb623e017e88f3eaef9","2015-03-18 14:44:01+01:00","ARM64: Fixes to emitter and disassembly for logical immediates
"
"70f44c3894db6edd19a2c6bedb30e300646a8913","2015-03-18 16:02:25+01:00","ARM64 emitter: Default to non-extend instruction forms (LSL 0), fix bugs. also fixes to disasm.
"
"77501e220df0aaaa03c342d59445937490304039","2015-03-18 16:04:52+01:00","ARM64: Enable a few more instructions, more emitter/disasm unittests
"
"86ff2a28060514f2ea331578096fd9edddc2b957","2015-03-18 16:11:18+01:00","ARM64: Enable a bunch of arithmetic instructions that now work, thanks to emitter fixes
"
"2bca05c4f2e0eb7979e0cf417065dc7b39faa2c1","2015-03-18 16:57:06+01:00","ARM64: implement shifts, movz/movn. Corresponding fixes to emitter/disasm
"
"9e2786b3198a9d203cd6b803b0cfa72ef4e8e2cf","2015-03-18 17:11:49+01:00","ARM64: Fix and enable a bunch more instructions. temporarily disable movz movn
"
"da2f4147da67e3da037aff14fe3b5481c7aff5a1","2015-03-18 17:41:13+01:00","Update CMakeLists for ARM64 (untested)
"
"4233921ab71f9e70e267190800776e9099caa5a2","2015-03-18 18:23:39+01:00","ARM64: Some more instructions, func replacements
"
"5dff3f8c89f4794bca346d56a5c87442d066cb9f","2015-03-18 18:46:33+01:00","ARM64: Implement scalar FMOV. This makes the FPU2op ops work.
"
"57e759a605110e82993f146bc3f08c07bcc5a70c","2015-03-18 19:02:32+01:00","ARM64: Fix and turn on basic block linking
"
"acd9502b447f0c42cee684008195d635dd43a7a9","2015-03-18 21:43:49+01:00","ARM64: stp/ldp disasm improvements
"
"d5faf8b97ac72fcfcf097b687756f71424a227e3","2015-03-18 22:43:12+01:00","ARM64: Fix conditional branch instruction (!)
"
"a12e448fb49906977c6494e1eef0ad3b5a929175","2015-03-18 22:44:38+01:00","ARM64: Stub vertex decoder jit, implementing just enough for the cube.elf cube.
"
"a8be9781542807c13d09f125b142220f4c285dd4","2015-03-18 23:58:34+01:00","ARM64 emitter: Add fixed point versions of SCVTF and UCVTF
"
"120e0bba3ca716b95905975cf37c10a793212cd5","2015-03-19 23:03:49+01:00","ARM64: Disassemble csel and multiply instructions
"
"1a02e32ad1a699ce21927287e9d853898d1bad9c","2015-03-19 23:04:22+01:00","ARM64: Implement the multiplication instructions
"
"5496b3d3b14ed9c447bcd3e375be2151a4a643ad","2015-03-19 23:04:46+01:00","ARM64: Some minor vertex decoder work. Hm, I think SCVTF will actually divide by 128.0, not 127.0 :/
"
"2566972a4d1c16eb38c3d7db4c2c9a186b44dd28","2015-03-20 23:36:19+01:00","ARM64: Further disasm work
"
"ceb9f66502726b9d3d94bbb689577874231a0fa2","2015-03-20 23:37:14+01:00","ARM64: Fix bug in mult
"
"25ec85551f42de4175882b2a26d23359753a3312","2015-03-20 23:37:48+01:00","ARM64: Implement FP compares, misc
"
"9f689b871a7ff44cbf70277f6813c6a407ccb18f","2015-03-21 11:50:15+01:00","ARM64: Work on emitting and disassembling fp conversion ops
"
"0f430e6cd19996f181aacdb290017dae04676f11","2015-03-21 12:23:31+01:00","ARM64: More asimd scalar disasm, encoding fix
"
"1e9fdf08c5fe4889ec2a3f7d83c6436b0e6434e9","2015-03-21 18:26:17+01:00","Temporarily disable vertexjit
"
"5a5f3c94fdc796f53acda7a0519458a3d27571d1","2015-03-21 18:26:53+01:00","ARM64: Guess what? more emitter & disasm
"
"34e61ab875d36ccb6f93de4b7f0f61212c30c814","2015-03-21 18:29:30+01:00","ARM64: More FPU instructions (int<->float convert), minor stuff
"
"6cb107d6fc54bdaf6d6707740268e915fc232e49","2015-03-21 19:19:12+01:00","ARM64: Fix LDP disassembly
"
"db0fd1042fbded96ba252c85b623ce8d00b79ece","2015-03-21 19:22:24+01:00","Add 'Arm64EmitterTest' which can run on startup to play around with instructions.
"
"ff758f58ad1def97144edeef0cd6150095dac0ef","2015-03-21 19:47:31+01:00","ARM64: The Return of the Pointer Truncator - The Movie
"
"9a5a093105516144f50a5049783215cc9b7974d1","2015-03-21 21:18:26+01:00","ARM64 emitter/disasm: More scalar FPU instructions
"
"8df8c210d1bb05d5334f0639d0867dfc5c85cf16","2015-03-21 21:19:11+01:00","ARM64: Start porting over VFPU stuff from ARM, fix regalloc bug
"
"500ca94ab8b32db00e6998df6ba3e160de8bbea0","2015-03-21 22:03:14+01:00","ARM64: Port over tons of VFPU code from ARM, leave most of it disabled.
"
"9c79831237c6bf6964f295b89641538e8c1b1866","2015-03-21 23:32:16+01:00","ARM64 emitter: Fix FP immediates
"
"1b1ab73b0feff0daac524ce85b3ff2758d42105e","2015-03-21 23:32:51+01:00","ARM64: Enable some more VFPU instructions, some code cleanup
"
"f06e9a9d18855a7ad0e65309204c1a7e53fe7ffa","2015-03-21 23:37:48+01:00","ARM64: Even more VFPU instructions
"
"ca58f322e53e1c40c69e9c7d02edd8fa6c649a82","2015-03-22 00:04:50+01:00","ARM64: Port over some missing VFPU instructions from ARM. Not much left now.
"
"2780eef595f1da283cb6849addd7282273883562","2015-03-22 00:44:27+01:00","ARM64: Another couple of VFPU ops
"
"0849e270ee0d7c755e3cf5e8cb4ef4d81bf7de55","2015-03-22 11:05:36+01:00","ARM64: fmla encoding, more disasm
"
"ad648baa9c1e0d619b5656e23e51bf7f3556aa23","2015-03-22 11:46:14+01:00","ARM64 regcache: Add support to 'pointerify' registers. Use in load/store to cut down instructions.
"
"8eedcc7fb045c5b36809d49fb4eed5e634a01006","2015-03-22 12:21:00+01:00","ARM64: Speedup fpu/vfpu load/stores too using 'pointerification'. Actually noticeable gain.
"
"acf08eefa8cf8bfe7f77ea387ab5f3ce72c98ec4","2015-03-22 22:42:33+01:00","ARM64: Fix FCVTL, use it in v2hf
"
"4618275f992a1fbfe31f3896c3a3934db6f2dff0","2015-03-24 00:29:12+01:00","ARM64: Add a few aliases to emitter. Disasm fixes.
"
"44286a2b37c4ac27b6a11d66c54c809908c0ebc6","2015-03-24 00:32:31+01:00","ARM64: Accurate float->int conversion with rounding mode.
"
"ad3d5394515fac67c681bdf62e78f4c36cab9878","2015-03-25 22:20:06+01:00","ARM64: Attempt at lwl/lwr/swl/swr. The first two don't work
"
"7d918c0ad8c564c1eb487bd8fa6eb750ffbc7caa","2015-03-25 22:59:12+01:00","ARM64: Just some disasm improvements
"
"0a70618f879f2fc50174b2303184f2890d4708f4","2015-03-26 00:11:25+01:00","ARM64: Accurate floating point rounding. For some reason, FTZ doesn't seem to work though.
"
"fbaffdceab6e8a69fd430740a906e3fac94e1888","2015-04-03 21:03:01+02:00","Remove some outdated comments, minor stuff
"
"95cd1478de7f3d94936385d8c9e09e0f29fafc20","2015-04-03 21:29:38+02:00","Restore the x86 build.
"
"9f24076b633f0a0fb23b667099396c2322508ada","2015-04-03 23:50:51+02:00","Make the unittests build on mac
"
"f6c4e8e784a93c9c28ba8aefc149b625cf3901a3","2015-04-04 09:39:29+02:00","Quickfix blackberry build
"
"13c9390c534595455db97b52afa38340a76e4305","2015-04-04 12:53:13+02:00","ARM64: Emitter fix, disable swl/swr/lwl/lwr again fully
"
"065cd97dc233f1aae65ba60d94a0abcd598d2d16","2015-04-04 19:31:58+02:00","ARM64: LLVM buildfix, some more disasm
"
"853d6ea34b4291c03cff34c6665a370eba7c5fbe","2015-04-04 19:46:15+02:00","ARM64 emitter: Add FMLA/FMLS vector versions
"
"a3db3ed5c1732915a9f4f00c20834d5385e56610","2015-04-04 21:18:30+02:00","ARM64 emitter: Fix UXTL/SXTL and friends. Add disasm.
"
"013bbc71af60af4db1e783dad30bb3e8889daea7","2015-04-04 22:15:58+02:00","ARM64: Fix DUP disasm, INS disasm
"
"a710abb58b8925fd72f2ac547d4789b18d439aaf","2015-04-04 22:42:04+02:00","A bunch more vertex decoder funcs
"
"a8c2d0945a296dab607a0ebdcde05f9862627c05","2015-04-04 22:42:24+02:00","ARM64: lwl: Pass INVALID_REG to be sure SCRATCH1 doesn't get overwritten...
"
"f82b613371e9a5cf0fba74a6a0642920da1a7424","2015-04-05 09:36:00+02:00","ARM64 emitter/disasm: Implement ASIMD LDP/STP instructions
"
"597595f27984e9ff9af243d8d223fe42f833843f","2015-04-05 09:59:28+02:00","ARM64: Start implementing soft-skinning. Disabled for now, needs work.
"
"f937b4b74bd55f20779768ed393f3b85e1e3d3cb","2015-04-05 10:10:21+02:00","ARM64 vtxdec: Basic implementation of the 16-bit color formats
"
"459ba28655b6652c890f717e766f597792701858","2015-04-05 11:12:42+02:00","ARM64: SW skinning runs without crashing but is broken.
"
"39be916d8a7826c2efe587e2cf745840c1c77c4f","2015-04-05 22:40:05+02:00","ARM64: More emitter/disasm
"
"4bd95b0cb777b3061942a37af4d3450f5bf45dc6","2015-04-05 23:03:55+02:00","ARM64: Fixup software skinning. Now seems to work, at least in a bunch of games..
"
"a7b7fedc9fd4936f81f6f62f5f72243cbe347ae4","2015-04-06 00:39:59+02:00","Cleaup. Add a missing vertex dec func.
"
"d0b35e88a20378f40411633053934ccbee5fc36c","2015-04-06 00:42:55+02:00","No need to generate a zero register..
"
"50113a446d2ff638cd24a3ba3286430348bc471c","2015-04-06 18:31:40+02:00","Update native
"
"8afab3f94fb56f7db04d6e303488ad5639674412","2015-04-06 18:42:21+02:00","Merge pull request #7652 from hrydgard/arm-64

ARM64 Support
"
"bc490e60abec834c26b25ad2f5f72a97882757aa","2015-04-06 23:29:52+02:00","Merge pull request #7661 from lioncash/false

sceIo: Remove always false condition
"
"788b9d78f8d2cad1fce1ae87eedb982c7e8cabfd","2015-04-07 18:20:37-07:00","jit: Avoid a super unlikely write to zero.
"
"7ce5841f303342e827c31b342a3751ef56ea48bd","2015-04-07 18:25:28-07:00","jit: Avoid mfhi/mflo to $0.
"
"b0d291032d4c961e55c212007c002d3a8b3ffa50","2015-04-07 18:30:17-07:00","armjit Avoid cfc1/mfc1 to $0.
"
"ffb583e298d034c131330e07c62970e5d92bb0cb","2015-04-07 22:27:20-07:00","ARM64: Move files into MSVC project filter.
"
"4ba111311998e14339cfbac523b0adb798bd3f38","2015-04-08 09:33:15+02:00","Merge pull request #7665 from unknownbrackets/jit-minor

Avoid some unlikely writes to $0
"
"b5bb07b12cbc8258ad28bb515aa47f529d48a92d","2015-04-08 00:55:49-07:00","Fix HLE logging for args > 8.
"
"53340056fdf3ab4fd46f002d3fb7a0393def0fa9","2015-04-08 11:28:52-07:00","Remove some unreachable code.

This wasn't being used, and the other path should be fine.
"
"5285f977e483ec184431ea1b2bd14b1efa3107a8","2015-04-08 11:29:28-07:00","Initialize a member that was missed.

Oops, this didn't matter much but it should start at 0.
"
"fc0788bc95c1f036ef3d831a0fbe61b83e7e36de","2015-04-08 11:31:12-07:00","Avoid unpredictable behavior in error condition.
"
"c0dde25e5aa25caae4cdd61729240ddf6e9f4552","2015-04-08 11:33:13-07:00","Set the sid on StreamInfo.

It's not used anyway, but if we have it there it might be later.
"
"8a3a67dc5b0c0f1f64d1a74cb02c86209aa2a31f","2015-04-08 11:35:40-07:00","Avoid evaluating an uninitialized value.

Doesn't matter anyway here.
"
"10626e356d20004965060381347e4879036521bb","2015-04-08 11:44:45-07:00","Avoid a potential divide by zero.
"
"3cb474047bf21b553498f923838ada076c96425e","2015-04-08 11:49:02-07:00","Fix potential shift by negative number.
"
"5452129dfe6aa118246dc5038d89dd61c75ef733","2015-04-08 11:55:16-07:00","Avoid null termination issues on long paths.
"
"08032e4b14ceee3dd8a1fe3abb5e4bfaf0440a93","2015-04-08 11:56:29-07:00","Fix a leak in an error condition.
"
"56a596d099360d5cb11b26fb84ddf23cfa52587e","2015-04-08 20:58:04+02:00","Fix line endings in some vcproj.filters files. Should prevent future annoying conflicts, althoug this one is ugly.
"
"b9dfb4dbe2bd748f75749d9ba7773c0a410e0970","2015-04-08 12:03:54-07:00","Validate read size in ReadLocalFile().
"
"afe42fa505e0df93d87d0bfba66d6e238ea6f1bd","2015-04-08 12:08:46-07:00","Log an error if ftruncate() fails.
"
"8e8a18e9b513acaaa197580957e63bebf8453838","2015-04-08 12:10:45-07:00","Log read failures from hashmap too.
"
"9a8cd2c0678fcb27403b427cd48712a228a24197","2015-04-08 12:14:00-07:00","Log some file reading errors.
"
"0847d46b79a04345a3446336864cefb3b49c40ff","2015-04-08 12:15:41-07:00","Remove always-true condition.

It was only for logging anyway, can't be that important.
"
"b2b20a6eee3618b8262b9ed9d9f8e566e69cb1e0","2015-04-08 12:16:53-07:00","Correct an invalid format parameter.
"
"050a7c1a851fc9bf4f8c35b5b8cce1d659369e73","2015-04-08 21:21:08+02:00","Merge pull request #7667 from unknownbrackets/warnings

Fix some warnings
"
"ed8a3eaf6dd0bf33974b8438c6fbcd9626f275cf","2015-04-08 21:35:00+02:00","Move the vertex decoder cache into DrawEngineCommon
"
"2002576e9d047b38156144e7aa858492190f7ad1","2015-04-08 21:37:54+02:00","DrawEngineCommon: Make it possible to call Flush from shared code.
"
"9dc7f7c3a23e28d2eac4cf149bc514fbb1669008","2015-04-08 12:44:32-07:00","Correct > 8 args for HLE logging again.

This time for real?  Arg, stupid mistake.
"
"058499e5bf40c60b2e88d4d888bdbefab5d01f17","2015-04-08 21:44:54+02:00","De-dupe the spline code
"
"51531db9428e5c15adc63b7a9cdca8428c57dc53","2015-04-08 21:46:37+02:00","Merge pull request #266 from unknownbrackets/warnings

Validate read size in ReadLocalFile()
"
"073ef432ff2e671077176f5aaad6d1757c9c36e9","2015-04-08 21:55:23+02:00","Update android.mk
"
"a67f00967958b8f3bfa416c6f44536ad269c2400","2015-04-08 22:20:55+02:00","Merge pull request #7668 from hrydgard/consolidate-spline

Consolidate spline code
"
"fdf5c36865c9561bacc67b09fc967c0f3a4354b8","2015-04-08 00:01:58+02:00","Fix line endings of a few project files to be consistent. Hopefully will avoid the annoying merge issues in the future.
"
"31961eace91aa59ac247ade84dd443cbd7b8d294","2015-04-08 00:16:22+02:00","Color conv attempt 2. Start consolidating simple color conversion functions in a single header+cpp.
"
"1285ae4a612b238db2656b43b43a99f0a6f5b726","2015-04-08 20:23:27+02:00","Add ColorConv.cpp/h to a bunch of project files
"
"c2cf2bd97ebe2baf4cf083371db8f42afffb83f8","2015-04-08 00:33:12+02:00","Move some more color conversion functions to ColorConv
"
"b5acf15cc95d227205a30ab8ffef25d56a866852","2015-04-08 19:59:12+02:00","Extract some explicit loops into calls to color conversion functions.
"
"66609852104f0d7dc47d3fd8dd56972b656c0493","2015-04-08 20:21:48+02:00","Extract a bunch more color conversion loops.
"
"a19ea78b4b362d5021fd8c663b8471a538afcb7e","2015-04-08 20:52:35+02:00","Consolidate the texture scaler code.
"
"4621586342a60cca714aab08eb30630d6dcf07f4","2015-04-08 22:50:36+02:00","Move simple conversion functions out of the ColorConv header.
"
"db110d60a102238a4a3044c36cfe19137f13dfbb","2015-04-08 23:01:17+02:00","Rename some colorconv functions
"
"138d837445277517ce1f88658dfd81635df48c51","2015-04-08 23:02:30+02:00","Merge pull request #7666 from hrydgard/color-conv-2

Consolidate color conversions, remove code duplication in texture scaler
"
"acc1ae6f2e9544af76e016399eb8c0770f8481e3","2015-04-08 16:57:17-07:00","Blacklist NV_shader_framebuffer_fetch on Tegra 3.

Reported to cause rendering problems:
http://forums.ppsspp.org/showthread.php?tid=4481&pid=105487#pid105487
"
"a32668cd1a79d94269f806cf7cc6be086e566897","2015-04-09 09:18:34+02:00","Merge pull request #267 from unknownbrackets/gl-blacklist

Blacklist NV_shader_framebuffer_fetch on Tegra 3
"
"0f06858fd18bdfae7b03624a7ac7accde536d0b6","2015-04-09 00:27:18-07:00","Update native (blacklist fb fetch on Tegra 3.)
"
"6c0bc5502b19944b825478a04bfd0a7ab07dc635","2015-04-10 11:47:59-07:00","Oops, fix another leak.
"
"fa85229d3de15e57d923ce9f9360618257f012ce","2015-04-10 11:48:45-07:00","Use a temporary for more code clarity.

Static analysis thinks there are typos here.  Temporary is clearer and
possibly faster depending on compiler intelligence.
"
"c10373ef0667d049d2ef86135d56cbac1a700fff","2015-04-10 12:05:08-07:00","ARM64: Fix some minor MSVC warnings.
"
"1bd20723cfa54f8a1fe87f873bafa1f2024125f5","2015-04-10 21:07:20+02:00","Merge pull request #7670 from unknownbrackets/warnings

ARM64: Fix some minor MSVC warnings
"
"9069c84928ad6d39278bb0f3e1906848a8ee81d0","2015-04-10 13:20:52-07:00","x86jit: Use ANDPS for abs.s.

Should be faster considering they're likely to use other floating point
math on it.  As long as that's the case, this is faster than PAND.
"
"106326fc7cd287ed7efa9593ffd9d94cbed54a06","2015-04-10 22:28:36+02:00","Merge pull request #7671 from unknownbrackets/jit-minor

x86jit: Use ANDPS for abs.s
"
"7e38df077fc347f4b5ecb7370ebc8ec15b266d5c","2015-04-10 19:57:13-07:00","x86jit: Prefer MOVAPS over MOVSS for reg->reg.
"
"e58eb5e1862e6eca8773b5fde06b529c5a8aa897","2015-04-10 19:58:56-07:00","x86jit: Small optimization for fd->fd fp convert.

We just generate a little less code.  This is also slightly faster
generally.
"
"eaed080add176292239d6aa8029ac093dc329e9a","2015-04-10 20:25:29-07:00","x86jit: Fix immediate kernel addresses.

Using a signed add + a value with the top bit set = bad.  Will have to
live with losing the kernel bit here, should be fine.
"
"7ea9bcbc13c5a68d3daf5861f1dbc7dfe15d5558","2015-04-10 20:26:54-07:00","x86jit: Avoid mapping rs in vfpu load/store.

This allows immediate address load/store, when possible, which can be
faster (especially with slow mem enabled.)
"
"115486e4312bbdaf132b0b99ee4ed6e4ab13e1fa","2014-12-25 10:28:07+01:00","Fix some fp instruction in/out flags
"
"59d0baca9375fa094d81fe465abd99efdcd97885","2014-11-24 21:57:27+01:00","Add way to print some block bloat stats.
"
"a897723e6a70684b697b7232b5dc1e9c88758fe2","2015-04-11 00:52:42-07:00","Separate out jit reading nearby instructions.

This makes it easier to use an IR for these things, or remove them.
"
"81dec36da84c0ddf834e72d2813d87e5d29eb07f","2015-04-11 01:07:10-07:00","Use an accessor to read the compilerPC.

In the IR it will be read from the block.
"
"56f071d26a87bd874eb1086061466978f7d4dbee","2015-04-10 20:44:39-07:00","x86jit: Support SIMD load/store with fastmem off.

Which is a lot faster, since it usually takes the fast path.
"
"0bf482231b202be87448f6c43e5fc3bbf6591130","2015-04-12 00:28:09+02:00","Merge pull request #7673 from unknownbrackets/ir-parts

Merge in some parts of the jit IR stuff (not a lot)
"
"e27bf8567ee1e712163343341bb28237f2ee7b59","2015-04-12 11:23:57+02:00","Change translation category

https://github.com/hrydgard/ppsspp/commit/59d0baca9375fa094d81fe465abd99efdcd97885#diff-a79dfbd66a9e1e1dc097bc65fc5f7027R570
"
"6deb4d303dcda7d655851a8838c48765f83a40b5","2015-04-12 11:46:09+02:00","Merge pull request #7675 from vnctdj/master

Change translation category
"
"ffe7ef1ee2629044024173c2fbcccf19517db28f","2015-04-12 10:33:33-07:00","Avoid spurious warnings in sceAtrac.

Valkyrie Profile for example calls this, doesn't seem like 0 matters.
"
"be7d1d1169a555f9c8740424b88ae5f9d6e07b95","2015-04-12 11:02:12-07:00","Add a bit of a hack for smaller framebuf memcpys.

Hopefully this doesn't false-positive in any other games.  Helps Valkyrie
Profile's battle entry effect.
"
"7bf67509d119a0edc68747f46a71915a420d378a","2015-04-12 11:21:53-07:00","ARM: Cleanup a TODO in NEON VFPU.
"
"d014d420db1ef4a8eb1e047fe952f037f5e29730","2015-04-12 11:41:26-07:00","Unify JitOptions across the backends.

This is required to make ExtractIR not a member of the various backends.
"
"bf7969e5b5e1f4af7a9702882135e93c00bd23b1","2015-04-12 11:45:29-07:00","Add MipsJit to the MSVC project files.
"
"0818c77f1174a515f700da462fb4361513327703","2015-04-12 11:46:35-07:00","Normalize case of MIPS/ in MSVC project files.
"
"071b6b986a6df19450014cced75513850a5ecadf","2015-04-12 11:53:16-07:00","Best-effort update of the MipsJit prototype
"
"6dcf56530b035c88678620dba34416b75c810689","2015-04-12 11:55:10-07:00","Add some missing FPU flags to MIPSTables.
"
"a8b50d0c9b41897331789c627935eb13ea4622b3","2015-04-12 11:57:49-07:00","Fix MIPSInfo masking for 64-bit flags.
"
"18769f6ff46c4150b53c4ed8b782b6c56509ea74","2015-04-12 21:38:45+02:00","Merge pull request #7678 from unknownbrackets/fbcopy

Add a bit of a hack for smaller framebuf memcpys
"
"45f259178b845e4dc8d4d4958f798023dc076f9a","2015-04-12 21:40:01+02:00","Merge pull request #7679 from unknownbrackets/ir-parts

More parts of the jit-ir branch
"
"2107771347d0a540247b8e40ebc49b9f7d8cde3a","2015-04-12 13:12:31-07:00","Oops, typo.
"
"f81781d25c866bf611f7caba9bc28ce5d659ca22","2015-04-12 13:15:00-07:00","Unify JitOptions in FakeJit also.
"
"c6113b831da432ce444db15aa32a4e3ef2605b50","2015-04-12 13:16:01-07:00","Remove unused and duplicate define.
"
"70fa830ba50866a1a884b73f6e83da160f7c59de","2015-04-12 13:35:10-07:00","Split out the ReplaceJalTo test logic.

This makes it so the IR, in the future, can work correctly for
replacements.
"
"c1b91ff5c18cefd1d14e0beb86def4bcfefc2f75","2015-04-12 13:50:23-07:00","x86: Add a way to eliminate some mov instructions.

Not currently used yet.
"
"ca144971118a94a4d31e55c8b109e0fbe3a19d1d","2015-04-12 23:02:43+02:00","Merge pull request #7680 from unknownbrackets/ir-parts

Even more parts of the jit-ir branch
"
"391ca8bed3082a109dd750bda23d37ecf0c86314","2015-04-12 22:37:55-07:00","Add functions to validate memory ranges.
"
"1e8f2c2630178606f6a23c111e1bb7905a70a6d7","2015-04-12 22:38:17-07:00","Allow clut load outside valid mem, fill with zero.

And only for the parts outside memory.
"
"67662ee23fa14467f815bfa018e222ed5b614fc4","2015-04-12 22:39:49-07:00","Force clut address to align to 16.

Hardware seems to ignore the lower bits when loading.
"
"1b0a9a48ae733a0016b6cc14afe777f02e414a56","2015-04-13 09:34:54+02:00","Merge pull request #7683 from unknownbrackets/clut-align

Fix clut load alignment and access outside valid memory
"
"a1f5c537d48f3bdada28d4e7d506ffbf4513bb4f","2015-04-13 09:57:02+02:00","Merge pull request #7672 from unknownbrackets/jit-minor

More x86jit micro optimizations for the FPU
"
"8effb3e3a78204f3fde1c1aff0d1578d6451c225","2015-04-13 18:44:30-07:00","Try new Travis Ubuntu version.
"
"4aa92ed99e87ac02d898a264689a74fbe2994f37","2015-04-13 19:09:53-07:00","Read fcr1-30 as 0.

Accidentally broken in 91966824bbb8dc54783d9064ffe8260d81e86dc0.
"
"b81850973479506add814af81070dbda342fd4da","2015-04-14 23:16:34-07:00","x86jit: Fix clobbering address in lv.q/sv.q.

We can't let it go into EAX.  Hmm, maybe there's a cleaner way.
Should fix #7686.
"
"6bc9a525f800cbdbc80b790d43a4ac81d947016f","2015-04-16 18:14:46+02:00","Spline: remove n and m, confusing
"
"b3305246a38e62d7eb596afbfc389fd11286f1ef","2015-04-16 18:18:49+02:00","Spline: Not that it should matter, but move the patch_div clamping down after the subsampling
"
"2e38762708f93052c14da6626e3f24fc3e112b32","2015-04-16 18:22:08+02:00","Spline: Add commented-out sanity check for debugging
"
"6587f4de8f63e4a238837d443c9060e76e988021","2015-04-16 18:29:50+02:00","Spline: Fix #7684 by removing awful epsilons that 'fixed' off-by-ones depending on vertex count because of fp rounding.
"
"68893c763fe9d88868541b92a8f4195e3e170421","2015-04-16 18:31:28+02:00","Spline: Fix an unrelated kind-of-bug
"
"5d704e48c12e21357ef7a64a5a5406a950193f80","2015-04-16 09:45:07-07:00","Merge pull request #7688 from hrydgard/spline-fix

Workaround crashes in spline code, fixing #7684
"
"a9ff7c22feb3b5ba444cbd41928e4b38528516fe","2015-04-17 08:33:05+02:00","Reject too-small spline patches. Might help #7690.
"
"42bcea7b418422695bfd1be704ff26b61245f9d4","2015-04-17 12:52:57-07:00","Report when minz/maxz is used in an effective way.

As long as it's outside the viewport it should be clipped anyway.

One concern is, does clipenable affect z?  A game could depend on that.
"
"327ca4c96eef73b7be9aeff1efe947495dd0220b","2015-04-17 23:24:21-07:00","Stub invalid vertex decoder colors to avoid crash.

These values are invalid, but before we'd call a null pointer if we hit
them.  Should do tests to see what actual behavior is.
"
"49783edf6d25abc5325c51496ea65fc78154d2f6","2015-04-18 00:26:58-07:00","Reorganize travis, disable Symbian, add Qt.
"
"ce9f404bef32e6e02c5ac067449eeb15a7e8c8d6","2015-04-18 12:39:04-07:00","Unswizzle when reading from the swizzled mirror.
"
"58563324bd3f82eaba83f1bf3b834d65eb23c94f","2015-03-14 11:06:03-07:00","Include texture size in cache key.

This makes Tales of Destiny 2's towns significantly faster.  It may
however cause us to keep textures around for longer - but we still account
for them in our metrics and invalidation.
"
"b726a414d71e99a3b344bd771e4a8bacebac3b01","2015-03-14 17:05:44-07:00","Log a reason when invalidating textures.

Makes debugging easier.
"
"5ee062c681e09abff4e79df16476852d858fd116","2015-02-28 02:35:07-08:00","Try to optimize bezier color sampling.
"
"b12a5953257de543ab802f9988d55aa71a5012ac","2015-02-26 08:40:24-08:00","d3d9: Make sure to clear alpha to zero.
"
"eb98d89fc9e62190039433d2b575af431860209b","2015-02-26 08:41:10-08:00","d3d9: clear alpha on switch from 565 buffer.

For parity with OpenGL.
"
"2e4d20883f193acf44db0a70fd32df19bdc27931","2015-04-18 17:40:21-07:00","d3d9: Reset viewport when clearing framebuf.
"
"9f7554c08f59d72ea67a9bdc486beb7ea5c6183f","2015-04-19 10:23:15+02:00","Merge pull request #7699 from unknownbrackets/d3d9

d3d9: Clear the stencil/alpha on buffer reformat (matching GLES)
"
"52b7bab8296582476e3787398ea0dc4d5e28ce43","2015-04-19 10:24:39+02:00","Merge pull request #7698 from unknownbrackets/bezier-minor

Try to optimize bezier color sampling
"
"e979b3a6ce223d0b4444588bc5cb8958d6563bd5","2015-04-19 10:27:29+02:00","Merge pull request #7696 from unknownbrackets/texcache2

Unswizzle when reading from the swizzled mirror
"
"0315a662cfa79fc281eb67820a652f959ac66ead","2015-04-19 12:25:11+10:00","Enable Symbian again.
"
"a4a10588ed1ba490dc61785cac79e0291ff7fd31","2015-04-20 00:08:44+02:00","Merge pull request #7697 from unknownbrackets/texcache

Include texture size in the cache key
"
"bd6d9a97a5cb0504302458c346238c4a245637ae","2015-04-19 16:07:00-07:00","Retain NaN bits in fp16/fp32 conversions.

This matches PSP behavior better.
"
"2b69711b67796d0e7293f8ae45873b159c7ce975","2015-04-20 08:25:20+02:00","Merge pull request #268 from unknownbrackets/fp16

Retain NaN bits in fp16/fp32 conversions
"
"af9e04dc974c20f74954f3e0ac92be891dff5fb1","2015-04-20 16:36:07+08:00","Replace framebuffer download in Youkoso Hitsuji-Mura Portable
"
"aee69d46c6b7810d5ec3f262d326de68af1bdcec","2015-04-20 12:29:23+02:00","Merge pull request #7702 from daniel229/youkosohitsujimura_download_frame

Replace framebuffer download in Youkoso Hitsuji-Mura Portable
"
"aad95db0706cb9ccebbbb8c4924878c423ae0ae1","2015-04-23 20:16:45+08:00","Remove OLD_EBOOT.BIN support

Utawareru Mono Chinese version use it but this still work
"
"5b61c03b7fa38685b39a445b6e54a85fcac3a509","2015-04-26 00:11:47-07:00","Avoid accidental sign ext for > 24 bit clut shift.
"
"c8fc9b0bf3cc55900289c271d6f65fbbb79e8284","2015-04-26 00:31:00-07:00","Cleanup some incorrect handling of clut offset.
"
"6e50a0b2743da8d7486ad5e400e9962962f3976e","2015-04-26 00:36:08-07:00","Allow depal palette entries to repeat.

This is what happens if the base is 0x10 in 8888 mode (means | 0x100.)
"
"5822faabf914b06e6f728700879aa4fbb7441bf1","2015-04-26 00:42:58-07:00","Make sure to wrap clut indexes at 1024 bytes.

So that's 256 for 32-bit and 512 for 16-bit.
"
"ab67c49ae96de1406927907cf035fa4af40329da","2015-04-26 00:43:36-07:00","Make sure we don't hash outside max bytes.

If we've never even loaded that much, play it safe.
"
"4fa50a9a50b5a6ad70d30d04f02cb5631d73d46a","2015-04-26 00:50:47-07:00","Reduce clut allocation size a bit.

Really think this probably should only be 1024 bytes, but need to work out
some more details before shrinking all the way.
"
"de525f36d100bd4ea5c7f425cf4789cffecd95a5","2015-04-26 10:17:34+02:00","Merge pull request #7716 from unknownbrackets/clut

Avoid accidental sign ext for > 24 bit clut shift, clut wrapping
"
"5c9ad1f7410379024c6c6f323c9907381e87fac6","2015-04-27 09:41:16+02:00","Merge pull request #7712 from sum2012/eboot

Remove OLD_EBOOT.BIN support
"
"afe52db36632f7eba3f28e50a74ed8b1973e0fce","2015-04-27 07:53:19-07:00","Fix some issues in sceNetAdhoc with old savestates.

This was causing the PPGe dlist to be shared with the thread, causing
weirdness and a double-free on exit.
"
"43eaffb3b44695568fb4133e72bdb0a024a1a9a0","2015-04-27 18:07:41+02:00","Merge pull request #7719 from unknownbrackets/net-minor

Fix some issues in sceNetAdhoc with old savestates
"
"35d3b25df90971ba305abb956413ace22f2d91bb","2015-05-06 02:32:40+02:00","kana keyboard pa->ha fix
"
"7d9ff90bec0435c8268af278e71fa6bff20153a7","2015-05-07 10:45:24+08:00","Add UIContext::DrawTextShadow for drawing text correctly under Qt
"
"a06f599320f302c0e5e34d5b94ee30b5ce335e97","2015-05-07 11:14:04+08:00","Use UIContext::DrawTextShadow instead of DrawBuffer::DrawTextShadow for drawing text correctly in Qt.
"
"dfa3a93d0261bad4b55d9d9b64b873fa29988cc5","2015-05-07 23:20:31+02:00","Merge pull request #269 from zhykzhykzhyk/master

Add UIContext::DrawTextShadow for drawing text correctly under Qt
"
"d86d9c634aa58016ab0d7a903de4057f5033bb0f","2015-05-07 23:20:43+02:00","Merge pull request #7733 from zhykzhykzhyk/master

Use UIContext::DrawTextShadow instead of DrawBuffer::DrawTextShadow
"
"bcb7c378603fa33f2633bc47e7a4626fb064b994","2015-05-07 23:21:18+02:00","Merge pull request #7732 from Bigpet/kana_osk

kana keyboard pe->pa fix
"
"a090b5853fedede163f18bd16211769630f80c90","2015-05-10 14:17:20-07:00","Process UV rotation even in full transform.
"
"ea36554c6a0576e973973d2a6d381fa60f0f3d9d","2015-05-10 14:37:14-07:00","software: Examine v0/v1 for uv rotation.

If we determine tl/br heuristically, it can never rotate correctly.

Anyway, this still is not rotating correctly...
"
"b782165b6aa587d038bfd0e372937fb9599499f2","2015-05-10 14:39:38-07:00","Avoid some division.
"
"63ee530046dbb1b396f06c954c0106aa8b43fca6","2015-05-11 20:09:29+02:00","Merge pull request #7736 from unknownbrackets/uv-rotation

Process UV rotation even in full transform
"
"5d0d67140f2cc56a52cf76366eea718fff394f8e","2015-05-12 20:01:04+02:00","Reverse Y when checking for rotated rects in Direct3D 9. Fixes #7738.
"
"3f7830743a06eb52bed316436d22aa1fbd776b59","2015-05-12 21:01:15+02:00","Implement basic screen rotation as requested in #297 . Does not work correctly in non-buffered rendering yet.
"
"95b6b50fd5fbb7e581ab53a539ab5e45c2951cbc","2015-05-12 22:44:02+02:00","Disable screen rotation in non-buffered rendering (as it won't worK)
"
"eefcf860271cdcb4658b8db37cb13f6639fa6ba9","2015-05-12 19:50:56+02:00","Initial profiler work
"
"fa1930773f2178fa6a6f646bae23ba5b4c57d43c","2015-05-13 22:26:51+02:00","Rewrite the frame profiler
"
"b9089e505117e52ec93708235c8f9db2e47e9bb2","2015-05-13 23:34:41+02:00","Colors don't belong here, let the visualization handle that
"
"28d8ed5881cfe18751b6c98a67c58dd4bedc3956","2015-05-15 18:04:05+02:00","Win32: Fix a bunch of little window resizing issues
"
"05d48b053e638109adaa6892c24373f21e6bf6a0","2015-05-15 18:14:28+02:00","Profiler fix for Android, count events
"
"ee81c7f1a176230a1608de691022aee935a626ad","2015-05-15 18:49:54+02:00","Rotate controls along with the display. Only rotates d-pad and analog stick, but easy to add more buttons if desired.
"
"ae9ece28d22271ee2bf26cdb9a0a44099c1040db","2015-05-15 18:54:05+02:00","Update native
"
"157b4e2ac90ab7cdcf8f03d18b466b23e14e11bd","2015-05-16 01:14:29+02:00","Didn't mean to leave this on
"
"b7ffb3a1027702a1170a757601ea128f8e46a4d2","2015-05-16 20:09:01+02:00","Rename the setting to Display Rotation, put the string in the graphics category
"
"c6b55459b13c53447901c7c73a4af0f8cc3819fc","2015-05-16 21:47:13-07:00","vertexjit: Skip soft skinning setup when morphing.

This makes x86 match arm.
"
"425ff3d78fe979c0c328c33bd6a5db1951e885e7","2015-05-16 21:49:25-07:00","Track bone matrix updates for future morph usage.

This makes them upload later, if/when they're needed.

Fixes #7746, Shadow of Destiny artifacts when software skinning is
enabled.
"
"7d2507e0cc756c2708aada4d323c16e8e3400041","2015-05-16 21:54:07-07:00","d3d9: Also track bone matrices for morph here.
"
"337d7d8cb9ff0d323aa810e7984dbe295f3c280b","2015-05-17 09:45:41+02:00","Merge pull request #7750 from unknownbrackets/gpu-minor

Track bone matrix updates for future morph usage
"
"3f29329ed205e00eaf52946ac9ce6c5864236dcc","2015-05-17 13:30:19-07:00","Actually use the SSE color conversion code.
"
"1767bd958c1174a0961420cfd327ec6ab3dfa5d7","2015-05-17 13:45:30-07:00","Move color conversion funcs to ColorConv.

This paves the way a bit for NEON conversion funcs.
"
"7269574a10f7b9161829b5f7d3dd00c074402003","2015-05-17 13:54:41-07:00","Add structure for NEON color conversion funcs.
"
"1cb2302f5ce933104102da5ab7a8f1455df48ba0","2015-05-17 14:35:53-07:00","Use SSE in ConvertRGBA5551ToRGBA8888().

This func is used when showing videos, some loading screens, etc.  Also
when uploading graphics to VRAM.

The implementation takes 85% less than without SSE, although it could
probably be optimized further.  Won't help game runtime much, but may help
some loading times or special effects.
"
"ccdaf41b533fc80bb9941fe031e2f94def6ae4e2","2015-05-17 14:56:46-07:00","Add some additional SSE for color conversion.
"
"5b75d5d33fae9254f05b712b2ce8c4b30085aec5","2015-05-18 09:30:54+02:00","Merge pull request #7751 from unknownbrackets/colorconv

A bit more SSE color conversion funcs, stub out NEON space
"
"83182a04694f22b6f0fa45518fc0dfc4a5078811","2015-05-18 16:31:19+02:00","Merge pull request #7739 from hrydgard/screen-rotation

Implement basic screen rotation as requested in #297
"
"6ae73b8919acf504aa61c9100d28b650ce53742d","2015-05-21 10:45:49+02:00","Add a new touch input flag for handling loss of window focus where events get lost
"
"18655d14a4f1b1a2606b65b2618a1daecf04f6be","2015-05-21 10:49:47+02:00","Release PSP buttons when losing gameplay focus, fixes part 1 of #7758, and part 2 of #7758 on Windows only.
"
"a24f22d4e77bd2c92fc319e452835531ce76ab2f","2015-05-21 11:44:35+02:00","Update Qt to fit new definition of UpdateScreenScale. Does not do the smallwindow check though.
"
"f6ca214400c4743233788cbe92cffebb4eba09f9","2015-05-21 11:45:08+02:00","Update native, working around #7753
"
"88d742cba4a85679b102b9de737450f9fcd2d501","2015-05-22 18:15:49+02:00","Fix width/height inversion

This should resolve https://github.com/hrydgard/ppsspp/issues/7760
"
"382563ff44252ca2db964b64bca7434602735cc0","2015-05-22 19:08:29+02:00","Merge pull request #7761 from vnctdj/master

Fix width/height inversion
"
"4880c29a90b6fb8994e101da17585c19ca44446c","2015-05-23 09:11:17-07:00","Use TextureDecoderNEON funcs statically on arm64.

Not sure if they were being used before (HAVE_ARMV7...?)
"
"bbe15d251811934490a7ba09b54057091e43122b","2015-05-23 10:33:24-07:00","Add a NEON color conv for 5551 -> 1555.
"
"df53bc2e7baa13a3e9ef3b1960c6715029c7170e","2015-05-23 10:39:06-07:00","Add a NEON 565 flip colorconv function.
"
"4900bc9082f4baee014032342bc7301d800cb65c","2015-05-23 10:46:08-07:00","Add a NEON 4444 flip color conversion func.
"
"1f11d010a649baf5721e2ff70a75c9a2e2c8e2f0","2015-05-23 21:15:33+02:00","Merge pull request #7763 from unknownbrackets/colorconv

Use NEON for GL texture color conversion
"
"3b96bf87128bcb669baf15c014168ee0d290b2ce","2015-05-23 12:20:00-07:00","Oops, typo.
"
"ded92aa9774cae9ee052c2cbd72d7e05eb95328e","2015-05-24 11:05:44-07:00","Resize here just to be safe.

Not that a texture ought to be > 2MB, but in case we lower that initial
buffer size or something.
"
"22ab3a4bde42ac34929134a3af641931e97b96fa","2015-05-24 14:34:52-07:00","Track frame events with sub-events carved out.

Simply by using a fixed-size stack.
"
"81a78e81a90d6394a22dce786975d04abbc40402","2015-05-24 23:40:06+02:00","Merge pull request #270 from unknownbrackets/frame-profiler

Track frame events with sub-events carved out
"
"0595a76556eb91503d083afe734b2341008fbf21","2015-05-12 19:45:14+02:00","Start integrating the new frame profiler
"
"26624709f7e803fe55f0659cbdf19c1ac5a936bd","2015-05-13 22:28:02+02:00","Hook up the frame profiler to a few measurements
"
"2e26a4798ed62faf97fde99803341ec73d2c21c8","2015-05-13 23:07:19+02:00","Scale the frame profiler graph dynamically
"
"9e15f04f1577b066a67f26c97bb8b3d1b7e368bd","2015-05-13 23:35:07+02:00","Better colors in profiler
"
"6b1df631a6ca2a505e79f92d628b1376b1132e54","2015-05-13 23:46:59+02:00","Move the texcache measurements to strictly include only actual texture loading, and not framebuffer shenanigans etc.
"
"6f4cea860c775b7010404783c64b8165e23a1080","2015-05-15 17:14:54+02:00","Split texture load profiling into decode and load/replace. Make profiler work on Android.
"
"38d0cfe159571ce279bee3d5999920206d0609c5","2015-05-16 13:43:32-07:00","Make the legend width a bit more dynamic.
"
"779d9729be1772cf499cf375a63e2247b5ae5421","2015-05-24 23:46:16+02:00","Update native
"
"7f69c5fa5e84e1b8601d47d8e5ea3f612961c76f","2015-05-24 23:50:53+02:00","Buildfix
"
"3501d9348d167f2957d66cf04af4b45502387096","2015-05-24 20:46:56-04:00","Map right thumbstick as another analog stick, particularly useful for controllers like the DualShock 3/4 when connected to an iOS device. Fixes #7762
"
"a82fc0e5f78ea3a3a6360fd1714db8b56842e4e4","2015-05-24 19:52:23-07:00","Merge pull request #7766 from angelXwind/master

Map right thumbstick as another analog stick on iOS.
"
"c75010931c2ac847650aca847faa17ca50aed499","2015-05-24 22:55:43-07:00","Use SSE in CheckAlpha scanning.
"
"f78acfb86719d0bf7d454804b65f4c48e593bb7e","2015-05-25 07:39:31-07:00","Cleanup a few things in SSE CheckAlpha.
"
"03a572ada0e6f2a6f278c19c17c1740260f275bc","2015-05-25 17:08:29+02:00","Merge pull request #7768 from unknownbrackets/texcache

Use SSE in CheckAlpha scanning
"
"bad9806687a2c132a1225c8ed47e4096e699279f","2015-05-25 13:55:29+00:00","file: extend #ifdef for any recent Unix with large file support by default

At least other BSDs still fail with

file/file_util.cpp: In function 'bool exists(const string&)':
file/file_util.cpp:172:16: error: aggregate 'exists(const string&)::stat64 file_info' has incomplete type and cannot be defined
struct stat64 file_info;
^
file/file_util.cpp:177:46: error: invalid use of incomplete type 'struct exists(const string&)::stat64'
int result = stat64(copy.c_str(), &file_info);
^
file/file_util.cpp:172:9: note: forward declaration of 'struct exists(const string&)::stat64'
struct stat64 file_info;
^
file/file_util.cpp: In function 'bool getFileInfo(const char*, FileInfo*)':
file/file_util.cpp:207:16: error: aggregate 'getFileInfo(const char*, FileInfo*)::stat64 file_info' has incomplete type and cannot be defined
struct stat64 file_info;
^
file/file_util.cpp:212:46: error: invalid use of incomplete type 'struct getFileInfo(const char*, FileInfo*)::stat64'
int result = stat64(copy.c_str(), &file_info);
^
file/file_util.cpp:207:9: note: forward declaration of 'struct getFileInfo(const char*, FileInfo*)::stat64'
struct stat64 file_info;
^
"
"4593b22bbe66f799e31f266166e123eda1abd84e","2015-05-25 14:07:35+00:00","net: remove dead (pre WaitUntilReady?) code accidentally found via

native/net/http_headers.cpp: In member function 'void http::RequestHeader::ParseHeaders(int)':
native/net/http_headers.cpp:136:12: error: 'timeval' in namespace '::' does not name a type
struct ::timeval tv;
^
native/net/http_headers.cpp:137:6: error: request for member 'tv_sec' in 'tv', which is of non-class type 'int'
tv.tv_sec = 5;
^
native/net/http_headers.cpp:138:6: error: request for member 'tv_usec' in 'tv', which is of non-class type 'int'
tv.tv_usec = 0;
^
"
"babb5036e62e85e65f4ce15344363429c9e6d932","2015-05-25 13:40:26+00:00","net: don't add #ifdefs for POSIX headers

http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/netinet_in.h.html
http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/arpa_inet.h.html
"
"7af88bf50eb3e5aa3db084b57d3373d31d0bb382","2015-05-25 14:05:11+00:00","ext/stb_vorbis: alloca() is in stdlib.h on BSDs as well

ext/stb_vorbis/stb_vorbis.c:19:10: fatal error: 'alloca.h' file not found
"
"b9b02eb4038600cd6b7e619f8654323b8ba22680","2015-05-25 13:52:48+00:00","DragonFly has bswap* like FreeBSD, Bitrig - like OpenBSD
"
"1433440a4729b8c502f4e4cf048ec7f6657aabc0","2015-05-25 19:04:36+02:00","Merge pull request #271 from jbeich/bsd_misc

Miscellaneous portability fixes
"
"5d244229badc02bc7a12624bed9244da93e5b413","2015-05-25 10:07:05-07:00","Silence a type conversion warning.
"
"b0a825ea9f6cff41fb13f9e0db5bf67be5772f48","2015-05-25 10:31:27-07:00","Small optimization to ConvertRGBA5551ToRGBA8888().
"
"539a7b1772c1d5e77d2702029049487d24e08184","2015-05-25 10:32:23-07:00","Correct order in ConvertRGBA4444ToRGBA8888().

I assume this is right, since it's pulling in a 4444 tex from PSP VRAM.
"
"4110a24d8fdae01afc4583aab41af3ae4353b356","2015-05-25 10:47:37-07:00","Fix Direct3D9 framebuffer upload conversion funcs.

All of the 16 bit formats were, afaict, wrong in different ways.
"
"233233b5c69645cd8e54c9a5e1c6bcfbfbf836f7","2015-05-25 20:03:28+02:00","Merge pull request #7771 from unknownbrackets/colorconv

Rename some color conversion funcs
"
"5984a4aa1cee5f66370902296346be5c91d3a628","2015-05-25 17:11:33+00:00","file: sync stat64 #ifdef with ppsspp
"
"0b2a1dfe53d9d9a60071aaba12c421f4afae6201","2015-05-26 00:39:27+02:00","Profile a few more scopes
"
"43744b023964443946e3b19b4b20e2d8b94ae73d","2015-05-26 00:42:01+02:00","Merge pull request #7741 from hrydgard/frame-profiler

Frame profiler overlay
"
"c8db6fed78702ce416f4eae8763f82f790ff3047","2015-05-26 00:43:11+02:00","Update native
"
"ba77ad607eb534317570e2b71cf336c0f975de40","2015-05-25 15:47:14-07:00","Erp, dumb typo.
"
"fb5a3ef99b61691780686bc62b4fd98985eb698e","2015-05-26 00:55:25+02:00","profiler: Compute the max correctly in area chart mode
"
"64f20033d488ce50e9c0bafff2c28d589460fa40","2015-05-26 01:11:54+02:00","Profiler: More colors, allow more scaling
"
"880697f40a22b846576bfc52e402fe89848599c0","2015-05-25 18:04:52-07:00","Add NEON versions of the CheckAlpha family
"
"5f278b2d94cc490fcb1d69ba283b728af0339e95","2015-05-25 12:20:48+00:00","Unbreak build with SSE 4.1 (clang -march=penryn)

Common/ColorConv.cpp:199:33: error: use of undeclared identifier '_mm_packus_epi32';
did you mean '_mm_packs_epi32'?
_mm_store_si128(&dstp[i / 2], _mm_packus_epi32(c1, c2));
^~~~~~~~~~~~~~~~
_mm_packs_epi32
/usr/bin/../lib/clang/3.6.0/include/emmintrin.h:1254:1: note: '_mm_packs_epi32'
declared here
_mm_packs_epi32(__m128i __a, __m128i __b)
^
Common/ColorConv.cpp:241:33: error: use of undeclared identifier '_mm_packus_epi32';
did you mean '_mm_packs_epi32'?
_mm_store_si128(&dstp[i / 2], _mm_packus_epi32(c1, c2));
^~~~~~~~~~~~~~~~
_mm_packs_epi32
/usr/bin/../lib/clang/3.6.0/include/emmintrin.h:1254:1: note: '_mm_packs_epi32'
declared here
_mm_packs_epi32(__m128i __a, __m128i __b)
^
2 errors generated.

GPU/Common/TextureScalerCommon.cpp:294:6: error: unknown type name '__m128'
__m128 result = _mm_set1_ps(0.0f);
^
GPU/Common/TextureScalerCommon.cpp:294:22: error: use of undeclared identifier
'_mm_set1_ps'
__m128 result = _mm_set1_ps(0.0f);
^
GPU/Common/TextureScalerCommon.cpp:305:9: error: unknown type name '__m128i'
__m128i samp...
^
GPU/Common/TextureScalerCommon.cpp:305:26: error: use of undeclared identifier
'_mm_cvtsi32_si128'
...__m128i sample = _mm_cvtsi32_si128(data[csy*w + csx]);
^
GPU/Common/TextureScalerCommon.cpp:307:9: error: unknown type name '__m128'
__m128 col ...
^
GPU/Common/TextureScalerCommon.cpp:308:31: error: use of undeclared identifier
'_mm_set1_ps'
...col = _mm_mul_ps(col, _mm_set1_ps(weight));
^
GPU/Common/TextureScalerCommon.cpp:314:6: error: unknown type name '__m128i'
__m128i pixel = _mm_cvtps_epi32(_mm_...
^
GPU/Common/TextureScalerCommon.cpp:314:57: error: use of undeclared identifier
'_mm_set1_ps'
...__m128i pixel = _mm_cvtps_epi32(_mm_mul_ps(result, _mm_set1_ps(bicubicInvSum...
^
8 errors generated.
"
"a4eb49f009b45ec01630f810fdef5a7cec6b5aec","2015-05-25 12:26:40+00:00","Unbreak build with FakeJit

Core/MIPS/fake/FakeJit.cpp:141:46: error:
unknown type name 'FakeJitBlock'; did you mean 'JitBlock'?
const u8 *FakeJit::DoFakeJit(u32 em_address, FakeJitBlock *b)
^~~~~~~~~~~~
JitBlock
Core/MIPS/JitCommon/JitBlockCache.h:59:8: note:
'JitBlock' declared here
struct JitBlock {
^
Core/MIPS/fake/FakeJit.cpp:141:20: error:
out-of-line definition of 'DoFakeJit' does not match any declaration in
'MIPSComp::FakeJit'
const u8 *FakeJit::DoFakeJit(u32 em_address, FakeJitBlock *b)
^~~~~~~~~
Core/HLE/ReplaceTables.cpp:1044:29: error:
use of undeclared identifier 'JITFUNC'
{ 'fabsf', &Replace_fabsf, JITFUNC(Replace_fabsf), REPFLAG_ALLOWINLI...
^
Core/HLE/ReplaceTables.cpp:1101:27: error:
invalid application of 'sizeof' to an incomplete type 'const
ReplacementTableEntry []'
for (int i = 0; i < (int)ARRAY_SIZE(entries); i++) {
^~~~~~~~~~~~~~~~~~~
native/math/../base/basictypes.h:67:30: note:
expanded from macro 'ARRAY_SIZE'
#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
^~~
Core/HLE/ReplaceTables.cpp:1117:9: error:
invalid application of 'sizeof' to an incomplete type 'const
ReplacementTableEntry []'
return ARRAY_SIZE(entries);
^~~~~~~~~~~~~~~~~~~
native/math/../base/basictypes.h:67:30: note:
expanded from macro 'ARRAY_SIZE'
#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
^~~
Core/MIPS/JitCommon/JitCommon.cpp:31:2: error:
unknown type name 'Jit'
Jit *jit;
^
Core/MIPS/JitCommon/JitCommon.cpp:100:21: error:
no member named 'Asm' in 'MIPSComp::FakeJit'
if (MIPSComp::jit->Asm().IsInSpace((u8 *)(intptr_t)addr)) {
~~~~~~~~~~~~~  ^
Core/MIPS/JitCommon/JitCommon.cpp:101:45: error:
no member named 'Asm' in 'MIPSComp::FakeJit'
*offset = addr - (uint64_t)MIPSComp::jit->Asm().GetBasePtr();
~~~~~~~~~~~~~  ^
Core/MemMap.cpp:197:57: error:
use of undeclared identifier 'MEMVIEW32_MASK'
...position, view.size, base + (view.virtual_address & MEMVIEW32_MASK));
^
"
"75a3ea1f5e0737282e524286469065e7c3aca269","2015-05-25 12:29:11+00:00","build/cmake: strnlen() hasn't appeared before in POSIX.1-2008, Issue 7

Core/Dialog/SavedataParam.cpp:269:26: error:
use of undeclared identifier 'strnlen'
return std::string(str, strnlen(str, n));
^
Core/Dialog/SavedataParam.cpp:943:55: error:
use of undeclared identifier 'strnlen'
const std::string gameName(param->msData->gameName, strnlen(...
^
Core/Dialog/SavedataParam.cpp:944:55: error:
use of undeclared identifier 'strnlen'
const std::string saveName(param->msData->saveName, strnlen(...
^
Core/ELF/ElfReader.cpp:399:14: error:
use of undeclared identifier 'strnlen'
size_t n = strnlen(modInfo->name, 28);
^
Core/HLE/sceKernelModule.cpp:903:15: error:
use of undeclared identifier 'strnlen'
size_t n = strnlen(head->modname, 28);
^
"
"a27723d91d3087fa182fae7932607f3e0123e916","2015-05-25 12:30:56+00:00","build/cmake: add amd64 alias for x86_64

Affects at least FreeBSD and OpenBSD.
"
"d408d61137187f6ddaf4a72e31b3d67b3e6d5d7a","2015-05-25 12:55:00+00:00","build/qmake: allow downstream to override linguisttools path
"
"2a53666d7963c966f02a282f8fb46c1b346f3ea7","2015-05-25 12:56:24+00:00","build/qmake: only use bundled zlib headers without system-zlib
"
"e58ffeb3f8390019e8aa37e0c2d8632c9d839093","2015-05-25 13:00:18+00:00","build/qmake: not every Unix wants libdl/librt

/usr/bin/ld: cannot find -ldl
"
"59a21dbfcb28e4daf01fb3780b6cbfc7f9037604","2015-05-25 20:24:42+00:00","Common: try to unbreak StdMutex.h on more C++11 compilers

Clang still pretends as GCC 4.2.1 even with libc++ or newer libstdc++.

In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:197:28: error:
reference to 'adopt_lock_t' is ambiguous
lock_guard(mutex_type& m, adopt_lock_t)
^
Common/StdMutex.h:183:6: note:
candidate found by name lookup is 'std::adopt_lock_t'
enum adopt_lock_t { adopt_lock };
^
/usr/include/c++/v1/__mutex_base:55:25: note: candidate found by name lookup is
'std::__1::adopt_lock_t'
struct _LIBCPP_TYPE_VIS adopt_lock_t {};
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:230:29: error:
reference to 'defer_lock_t' is ambiguous
unique_lock(mutex_type& m, defer_lock_t)
^
Common/StdMutex.h:181:6: note:
candidate found by name lookup is 'std::defer_lock_t'
enum defer_lock_t { defer_lock };
^
/usr/include/c++/v1/__mutex_base:53:25: note: candidate found by name lookup is
'std::__1::defer_lock_t'
struct _LIBCPP_TYPE_VIS defer_lock_t {};
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:234:29: error:
reference to 'try_to_lock_t' is ambiguous
unique_lock(mutex_type& m, try_to_lock_t)
^
Common/StdMutex.h:182:6: note:
candidate found by name lookup is 'std::try_to_lock_t'
enum try_to_lock_t { try_to_lock };
^
/usr/include/c++/v1/__mutex_base:54:25: note: candidate found by name lookup is
'std::__1::try_to_lock_t'
struct _LIBCPP_TYPE_VIS try_to_lock_t {};
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:238:29: error:
reference to 'adopt_lock_t' is ambiguous
unique_lock(mutex_type& m, adopt_lock_t)
^
Common/StdMutex.h:183:6: note:
candidate found by name lookup is 'std::adopt_lock_t'
enum adopt_lock_t { adopt_lock };
^
/usr/include/c++/v1/__mutex_base:55:25: note: candidate found by name lookup is
'std::__1::adopt_lock_t'
struct _LIBCPP_TYPE_VIS adopt_lock_t {};
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:345:6: warning:
variable templates are a C++14 extension [-Wc++14-extensions]
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:345:6: error:
variable has incomplete type 'void'
Common/StdMutex.h:345:11: error:
reference to 'unique_lock' is ambiguous
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:215:7: note:
candidate found by name lookup is 'std::unique_lock'
class unique_lock
^
/usr/include/c++/v1/__mutex_base:96:29: note: candidate found by name lookup is
'std::__1::unique_lock'
class _LIBCPP_TYPE_VIS_ONLY unique_lock
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:345:23: error:
'Mutex' does not refer to a value
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:344:17: note:
declared here
template <class Mutex>
^
Common/StdMutex.h:345:31: error:
use of undeclared identifier 'x'
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:345:34: error:
reference to 'unique_lock' is ambiguous
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:215:7: note:
candidate found by name lookup is 'std::unique_lock'
class unique_lock
^
/usr/include/c++/v1/__mutex_base:96:29: note: candidate found by name lookup is
'std::__1::unique_lock'
class _LIBCPP_TYPE_VIS_ONLY unique_lock
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
In file included from Common/LogManager.h:26:
Common/StdMutex.h:345:46: error:
'Mutex' does not refer to a value
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:344:17: note:
declared here
template <class Mutex>
^
Common/StdMutex.h:345:54: error:
use of undeclared identifier 'y'
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
Common/StdMutex.h:345:56: error:
expected ';' at end of declaration
void swap(unique_lock<Mutex>& x, unique_lock<Mutex>& y)
^
;
Common/StdMutex.h:346:1: error:
expected unqualified-id
{
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
Common/LogManager.h:54:7: error:
reference to 'mutex' is ambiguous
std::mutex m_log_lock;
^
/usr/include/c++/v1/__mutex_base:27:24: note: candidate found by name lookup is
'std::__1::mutex'
class _LIBCPP_TYPE_VIS mutex
^
Common/StdMutex.h:107:7: note:
candidate found by name lookup is 'std::mutex'
class mutex
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
Common/LogManager.h:116:7: error:
reference to 'mutex' is ambiguous
std::mutex m_listeners_lock;
^
/usr/include/c++/v1/__mutex_base:27:24: note: candidate found by name lookup is
'std::__1::mutex'
class _LIBCPP_TYPE_VIS mutex
^
Common/StdMutex.h:107:7: note:
candidate found by name lookup is 'std::mutex'
class mutex
^
In file included from Common/ConsoleListener.cpp:33:
In file included from Common/ConsoleListener.h:20:
Common/LogManager.h:131:7: error:
reference to 'mutex' is ambiguous
std::mutex log_lock_;
^
/usr/include/c++/v1/__mutex_base:27:24: note: candidate found by name lookup is
'std::__1::mutex'
class _LIBCPP_TYPE_VIS mutex
^
Common/StdMutex.h:107:7: note:
candidate found by name lookup is 'std::mutex'
class mutex
^
1 warning and 16 errors generated.
"
"05e5085f681fc5e72d5144df173518c130698fc5","2015-05-25 17:32:14+00:00","Common: drop bogus #ifdef for FreeBSD

Common/CPUDetect.cpp:70:2: error: use of undeclared identifier '__cpuidex'; did you mean 'do_cpuidex'?
__cpuidex((int *)regs, cpuid_leaf, ecxval);
^~~~~~~~~
do_cpuidex
Common/CPUDetect.cpp:69:6: note: 'do_cpuidex' declared here
void do_cpuidex(u32 regs[4], u32 cpuid_leaf, u32 ecxval) {
^
Common/CPUDetect.cpp:70:12: error: cannot initialize a parameter of type 'u32 *' (aka 'unsigned int *') with an rvalue of type 'int *'
__cpuidex((int *)regs, cpuid_leaf, ecxval);
^~~~~~~~~~~
Common/CPUDetect.cpp:69:21: note: passing argument to parameter 'regs' here
void do_cpuidex(u32 regs[4], u32 cpuid_leaf, u32 ecxval) {
^
Common/CPUDetect.cpp:73:2: error: use of undeclared identifier '__cpuid'; did you mean 'do_cpuid'?
__cpuid((int *)regs, cpuid_leaf);
^~~~~~~
do_cpuid
Common/CPUDetect.cpp:72:6: note: 'do_cpuid' declared here
void do_cpuid(u32 regs[4], u32 cpuid_leaf) {
^
Common/CPUDetect.cpp:73:10: error: cannot initialize a parameter of type 'u32 *' (aka 'unsigned int *') with an rvalue of type 'int *'
__cpuid((int *)regs, cpuid_leaf);
^~~~~~~~~~~
Common/CPUDetect.cpp:72:19: note: passing argument to parameter 'regs' here
void do_cpuid(u32 regs[4], u32 cpuid_leaf) {
^
4 errors generated.
"
"61c106c57f294516b28aaa8999bdc8d93437a594","2015-05-25 12:52:59+00:00","Common: avoid redefining bswap* via <sys/types.h> on BSDs

In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:76:23: error:
C++ requires a type specifier for all declarations
inline unsigned short bswap16(unsigned short x) { return (x << 8) | (x >> 8); }
^
/usr/include/sys/endian.h:59:20: note: expanded from macro 'bswap16'
^
/usr/include/x86/endian.h:74:16: note: expanded from macro '__bswap16'
((__uint16_t)(__builtin_constant_p(x) ? \
^
In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:76:23: error:
expected ')'
/usr/include/sys/endian.h:59:20: note: expanded from macro 'bswap16'
^
/usr/include/x86/endian.h:74:40: note: expanded from macro '__bswap16'
((__uint16_t)(__builtin_constant_p(x) ? \
^
Common/Swap.h:76:23: note:
to match this '('
/usr/include/sys/endian.h:59:20: note: expanded from macro 'bswap16'
^
/usr/include/x86/endian.h:74:15: note: expanded from macro '__bswap16'
((__uint16_t)(__builtin_constant_p(x) ? \
^
In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:76:59: error:
use of undeclared identifier 'x'
inline unsigned short bswap16(unsigned short x) { return (x << 8) | (x >> 8); }
^
Common/Swap.h:76:70: error:
use of undeclared identifier 'x'
inline unsigned short bswap16(unsigned short x) { return (x << 8) | (x >> 8); }
^
Common/Swap.h:77:21: error:
expected ')'
inline unsigned int bswap32(unsigned int x) { return (x >> 24) | ((x & 0xFF0...
^
/usr/include/sys/endian.h:60:20: note: expanded from macro 'bswap32'
^
/usr/include/x86/endian.h:77:27: note: expanded from macro '__bswap32'
(__builtin_constant_p(x) ?      \
^
Common/Swap.h:77:21: note:
to match this '('
/usr/include/sys/endian.h:60:20: note: expanded from macro 'bswap32'
^
/usr/include/x86/endian.h:77:2: note: expanded from macro '__bswap32'
(__builtin_constant_p(x) ?      \
^
In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:77:21: error:
functions that differ only in their return type cannot be overloaded
inline unsigned int bswap32(unsigned int x) { return (x >> 24) | ((x & 0xFF0...
^
/usr/include/sys/endian.h:60:20: note: expanded from macro 'bswap32'
^
/usr/include/x86/endian.h:77:3: note: expanded from macro '__bswap32'
(__builtin_constant_p(x) ?      \
^
native/base/basictypes.h:92:44: note:
previous implicit declaration is here
inline uint16 swap16(uint16 _data) {return bswap16(_data);}
^
/usr/include/sys/endian.h:59:20: note: expanded from macro 'bswap16'
^
/usr/include/x86/endian.h:74:16: note: expanded from macro '__bswap16'
((__uint16_t)(__builtin_constant_p(x) ? \
^
In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:78:27: error:
expected ')'
inline unsigned long long bswap64(unsigned long long x) { return ((unsigned ...
^
/usr/include/sys/endian.h:61:20: note: expanded from macro 'bswap64'
^
/usr/include/x86/endian.h:80:27: note: expanded from macro '__bswap64'
(__builtin_constant_p(x) ?      \
^
Common/Swap.h:78:27: note:
to match this '('
/usr/include/sys/endian.h:61:20: note: expanded from macro 'bswap64'
^
/usr/include/x86/endian.h:80:2: note: expanded from macro '__bswap64'
(__builtin_constant_p(x) ?      \
^
In file included from Common/CPUDetect.cpp:27:
In file included from Common/Common.h:139:
Common/Swap.h:78:27: error:
functions that differ only in their return type cannot be overloaded
inline unsigned long long bswap64(unsigned long long x) { return ((unsigned ...
^
/usr/include/sys/endian.h:61:20: note: expanded from macro 'bswap64'
^
/usr/include/x86/endian.h:80:3: note: expanded from macro '__bswap64'
(__builtin_constant_p(x) ?      \
^
native/base/basictypes.h:92:44: note:
previous implicit declaration is here
inline uint16 swap16(uint16 _data) {return bswap16(_data);}
^
/usr/include/sys/endian.h:59:20: note: expanded from macro 'bswap16'
^
/usr/include/x86/endian.h:74:16: note: expanded from macro '__bswap16'
((__uint16_t)(__builtin_constant_p(x) ? \
^
8 errors generated.
"
"b24b12f4a0e322d75336f3e104f86b5ce224e161","2015-05-25 18:20:40+00:00","Common: DragonFly needs MAP_NOSYNC as well
"
"2eb1d578dda9d060f87666e7426baa2d0d5a89b7","2015-05-25 18:43:24+00:00","Common: check against MAP_FAILED on every Unix after mmap()

This is required by POSIX but may matter only in MAX_FIXED case.
"
"988724475988717b349f2f8f45c893af66dd8179","2015-05-25 12:35:23+00:00","Common: implement GetExeDirectory on some BSDs
"
"57c5e7d9ac24b6e9b1186ae517382b39e2d61ce6","2015-05-25 17:04:58+00:00","Core: drop unused <malloc.h> header
"
"803e02e22451cc09e6549c2397fe83f239922102","2015-05-25 19:25:25+00:00","Core: assume modern Unix has tm_gmtoff

Core/HLE/sceRtc.cpp:471:14: error: invalid argument type 'char *(*)(int, int)' to
unary expression
srcTick -= -timezone * 1000000ULL;
^~~~~~~~~
Core/HLE/sceRtc.cpp:498:14: error: invalid argument type 'char *(*)(int, int)' to
unary expression
srcTick += -timezone * 1000000ULL;
^~~~~~~~~
Core/HLE/sceRtc.cpp:1035:16: error: invalid argument type 'char *(*)(int, int)' to
unary expression
tz_seconds = -timezone;
^~~~~~~~~
Core/HLE/sceRtc.cpp:1074:16: error: invalid argument type 'char *(*)(int, int)' to
unary expression
tz_seconds = -timezone;
^~~~~~~~~
4 errors generated.
"
"87be57a1fa525950809ff8ca320b2a3e803ff31d","2015-05-26 11:27:56+00:00","Core: report every BSD as distinct operating system

Each one has different kernel and userland. They do cross-pollinate
frequently but otherwise do not try to be compatible.
"
"0af2bfe11c1b5559b4702ad279dd728664624830","2015-05-25 12:39:51+00:00","UI: search for assets under /usr/share on any Unix desktop
"
"bd4b0840a33f2269171e716bd5f80bc829bf4fef","2015-05-26 11:59:00+00:00","UI: allow editing cheat file on any Unix desktop
"
"d0c5c1e659efb6ce288c7ba5cade9f6f980e9d63","2015-05-26 14:11:07+00:00","Common: also use sysctl(3) code on GNU/kFreeBSD
"
"de60aad2abfd9aa3431c9ba557a0042a42bbfb8c","2015-05-26 14:51:53+00:00","base: fallback to Unix desktop, not mobile
"
"dbd15420f551eece64b89f1c6499439ef112f2ac","2015-05-27 02:35:09-04:00","Properly post lost_focus and got_focus notifications when iOS app resigns active state and gains active state. Fixes #7758
"
"8a57e8cda3cd7023b1f6541d8eac1aad3194b46b","2015-05-27 03:37:49-04:00","Do not copy ICNS assets (iOS uses PNGs) or generate a MacOS folder when building for iOS
"
"4d4d188a94389f1c2783cac1f5b20f3e168cbb0e","2015-05-27 14:20:55+02:00","Merge pull request #7776 from angelXwind/master

Properly post lost_focus and got_focus notifications when iOS app resigns active state and gains active state. Fixes #7758 — Also remove extraneous ICNS/MacOS assets from iOS build
"
"41d54cbcbc4146752387ac11e23f2285d503b9df","2015-05-27 19:45:33-07:00","Adjust frame profiler graph to be more readable.
"
"d323dd472f49f7f94ef477212f6739cf4721a891","2015-05-27 20:02:09-07:00","Account for io sync time in io statistics.
"
"0b66a0a03c4f5d7c3a0271654c02cc762dbeb7f7","2015-05-28 06:02:59+00:00","unittest: avoid build error on case-sensitive filesystems

unittest/TestArm64Emitter.cpp:1:10: fatal error: 'Common/ARM64Emitter.h' file not found
unittest/TestX64Emitter.cpp:1:10: fatal error: 'Common/X64Emitter.h' file not found
"
"fd4e14ee0d46c7a30ddc8a3e0e8e098c59faf1c8","2015-05-27 23:27:54-07:00","Merge pull request #7779 from jbeich/unittest_case

unittest: avoid build error on case-sensitive filesystems
"
"9fe3f59aaf8056f422ca540c148110ef6c912e32","2015-05-28 12:22:27+02:00","Merge pull request #272 from jbeich/xdg-open

Make Launch{Browser,Market,Email} work on any Unix desktop
"
"cbe1a1890ede6c71756a98c91671562cc7df8529","2015-05-28 13:05:02+02:00","Merge pull request #7772 from jbeich/bsd_misc

Miscellaneous portability fixes
"
"c5ea38f99675a7c334b3b2ebe4a1944b45d2242a","2015-05-28 13:05:22+02:00","Update native
"
"8258a7341e3dc2eb7dd3f7040e8908105345bac0","2015-05-28 07:29:05-07:00","Soften the outline a bit and fix overlap.
"
"ee1299b8f21a6db58743fbd4a0790a0f4adc745d","2015-05-28 19:02:46+02:00","Merge pull request #7778 from unknownbrackets/frame-profiler

Improve frame profiler display a bit more
"
"90c2ef38bd071a832d0057d5025c995489b0bf41","2015-05-30 21:21:30+02:00","Make Native also target android-22 (oversight)
"
"c87b7587cea4203b1288e54e8489cd82f9cab534","2015-05-30 21:24:14+02:00","Update submodules
"
"90093faffc55e98f6cce511fde1fa3c182541b5a","2015-05-30 12:53:57-07:00","Ensure headless doesn't crash when profiler on.

Obviously, the frame profiler graph isn't very useful in headless (maybe
it could be?) but at least, it's nice to not have to change the .h and
rebuild all kinds of files when using headless for testing.
"
"bc96afa14b07a2287e8e371a070fd58ee04654f3","2015-05-30 22:25:48+02:00","gitignore
"
"7b50ec7b757e5f6424f4db8e29ddb155095f617b","2015-05-31 12:00:10+02:00","Merge branch 'CheckAlphaNEON' of git://github.com/KentuckyCompass/ppsspp into KentuckyCompass-CheckAlphaNEON
"
"2a1f6bca974a71cbef63e362de2edcb9b7602e9a","2015-05-31 12:28:41+02:00","Fix NEON 4444 CheckAlpha, workaround for failed bNEON detection on ARM64
"
"268aed482d5a9471195491ced58d4231211c0b6f","2015-05-31 12:29:46+02:00","Merge branch 'KentuckyCompass-CheckAlphaNEON'
"
"403f6ab537694cd80b2055276b5d1c5ba5bca491","2015-05-31 18:25:43+02:00","Fix broken default positioning of L/R touch controls
"
"983ae517e17a635e21a84a8abdff338e1805f33b","2015-06-01 15:29:54+02:00","Try to dynamically link against system ffmpeg when possible
"
"6d00a7722e926ce0b35ddef362cf1d81b51b316d","2015-06-08 22:53:53-03:00","Changed iOS icons to follow Apple directives (PNG24 with no transparency and no rounded corners).
"
"c8f82cc262a5bed6eebc2404e70b23f56bb2fa69","2015-06-09 18:33:44-07:00","Merge pull request #7803 from convalise/master

Update iOS icons
"
"2d0bc5eeee03bddb18f08a39d5c4c7c1af75838c","2015-06-09 23:16:21-07:00","Limit time GameInfo file loaders are kept open.
"
"4fa529db50a0a70133bd0e7bd9f8b9b5deb673a0","2015-06-09 23:19:09-07:00","Potentially reuse a cached file loader.

Although right now we always dispose, this just makes it so we could more
easily garbage collect them if we wanted.
"
"eb1fd7bdb36f2398ce2e3a23dc67c50e33c9f1f4","2015-06-10 23:18:03+02:00","Merge pull request #7805 from unknownbrackets/gameinfo-fds

Limit time GameInfo file loaders are kept open
"
"93a7d0c67e239c816c408c1d8631727f2790eb4c","2015-06-11 12:15:38+02:00","Profiler: Handle category 0 correctly when suspending parent categories. Small optimization + sanity checks.
"
"5736f3aba6871a3bcb3d19916dfb960f39eede34","2015-06-11 12:28:37+02:00","Shouldn't check for NEON on ARM64
"
"7e2f37abc1095915faa1528c454308b4898e9eb1","2015-06-11 12:29:14+02:00","Update native with profiler fix. Profile the SW rast a little.
"
"316d6ab84def4666fe13ff0c14c9bcb1659ab5c1","2015-06-11 16:00:12+02:00","Fix another bug in the profiler, that would happily overwrite memory.
"
"842817c91dd34d64457c3f21db488b0ebb4eadb3","2015-06-11 16:01:17+02:00","Add fog support to software rasterizer (as if it wasn't slow enough already)
"
"8ec48507f150337f80539c6b9944452fdb63559f","2015-06-11 17:00:44+02:00","Software rasterizer: Fix skinning transforms
"
"32a75bea4639bd361ebf1bd532f6969547d6e3ba","2015-06-11 18:43:59+02:00","Add an FLOG if profiler depth goes negative. Make Crash()/FLOG actually crash on win64.
"
"084aad74c392c5826682b101439bcc2cef7c5b2f","2015-06-11 20:22:16+02:00","Make GameInfoCache understand PSP savedata as a 'game' type. Use it to create a basic savedata listing screen.
"
"f356b0c644a6c9b12621ee8156465b5e36f40507","2015-06-11 20:23:53+02:00","Minor swrast opt
"
"381e0c0fe372b69b01f0a8c86b373ac28e96775a","2015-06-11 23:59:02+02:00","Implement basic savedata UI. Not much actual functionality yet but can browse saves and states.
"
"00094e0fccffb7ebff2a975bdde2444f1d4847c3","2015-06-12 11:40:50+02:00","More work on savedata UI.
"
"ba829ad4aa7a4acbacbaa7f77233e037862443e4","2015-06-12 12:38:48+02:00","Fix crash bug in DrawText on Windows, clip TextView text if too large
"
"29514408afdeb990953edce0ab0332e77376181d","2015-06-12 12:39:22+02:00","Improve savedata UI layout more, fix deletion of save states
"
"b56f21e4f03afe2d9da9ccadce379c5f33953b15","2015-06-12 14:46:34+02:00","More savedata UI polish
"
"2a88b1e58d3cf2b8f7fd4b3b2a4c8ac3765fa655","2015-06-12 14:55:51+02:00","Buildfix for gcc
"
"954735bde66b6a0af3e8ee1005db14bd019171e9","2015-06-12 19:48:25+02:00","Recursive size calculation for PBP directory games. Other minor updates
"
"556eeef22288341e03388647f88e67339de78903","2015-06-12 20:37:42+02:00","Move savedata manager to a new Tools category in Settings
"
"56ed0f9b924ad26452de6d8e04c2700b15d0b72e","2015-06-12 23:18:07+02:00","Localization fixes
"
"00e57b1483fde6cd31b22d8e5a1069d5ecb33584","2015-06-12 23:18:25+02:00","Merge pull request #7808 from hrydgard/savedata-screen

Savedata management screen
"
"159c8baeef6ae5f6c991ceb6df80d8b1e81ee611","2015-06-13 11:27:06+02:00","Do framebuffer download color conversion using the CPU on old nVidias.

May fix issue 228 in the native project.
"
"4a0ae081fcec3f7a70deb845eb7a5dd7cc5f5586","2015-06-14 00:03:43+02:00","Merge pull request #7793 from alucryd/system_ffmpeg

Try to dynamically link against system ffmpeg when possible
"
"cd000573a6c03fb13c4de49904f10ca638399f51","2015-06-13 15:50:10-07:00","Make sure add-apt-repository is installed.
"
"47d6c50a20fbea275c6ddec8a53a044514d55d6a","2015-06-13 15:57:52-07:00","Make sure we have GL headers.
"
"f3f27694c046cb44cef5f2f40005eb3e7f06f082","2015-06-13 16:15:14-07:00","Try to fix Qt build on Travis.
"
"edb55f5beaee8e0395665a8ef22b01aaaac2bdd7","2015-06-13 16:29:34-07:00","Merge branch 'travis'
"
"401bd35691685a90b4c3217c0afe9f2b7589f63e","2015-06-13 13:03:59-07:00","Swizzle video texture data on write to mirrors.
"
"e9094872d8b0c8c0bb38ac39f4b29fdcc297fb8d","2015-06-13 14:26:17-07:00","Oops, don't move imgbuf so we can free it.
"
"b7b8d331cec1fac9c4fc95cfc2b2e21371b01c60","2015-06-14 11:04:37+02:00","Merge pull request #7811 from unknownbrackets/video-swizzle

Swizzle video data when writing to VRAM mirors
"
"3b548a1fd0f03578aafeb4e530c93fcb6b973f90","2015-06-14 11:07:18+02:00","Update lang
"
"cc6db7a8df7ed06f7d45771cb290d2740c79bf26","2015-06-14 11:25:18+02:00","Declare DoTexSwizzle16 outside #ifdef _M_SSE, fixing build on ARM
"
"7e55b3ec9643e0924338e40e643eb19555d844d7","2015-06-14 11:32:13+02:00","Fix some GCC compiler warnings about potentially uninitialized variables (compilers are getting too clever..)
"
"4f3d18fcb7031da835b3a16b11ea78338d6531e3","2015-06-14 12:07:09+02:00","Only swizzle written video if actually writing to VRAM
"
"2c05334d475fe32bef77b0bade99692c857029ea","2015-06-14 12:56:44+02:00","ARM64: Fix bug where we didn't save the FP registers correctly in the vertex decoder.

Also port a few ops from dolphin's ARM64 emitter.
"
"aa194f1e78045f4f32afd903a2a78d212af45a16","2015-06-14 13:01:21+02:00","Improve some logging in profiler
"
"e848247f8842d4c4998dbc59e49c9ee5930a5f66","2015-06-14 13:03:18+02:00","ARM64: Also save FP registers around the JIT dispatcher loop
"
"23004409bd4fbd9fa142ff9a249df40e31e26ec9","2015-06-14 14:03:45+02:00","Add another missing check for VRAM address before swizzling media
"
"0c0a5741b827640dce8bb4d0d8f1a982003c7179","2015-06-14 09:21:13-07:00","Fix another dumb mistake in video swizzling.
"
"7f812071a753991a180c8aa50e8ccc3c7a1aeab2","2015-06-14 09:21:54-07:00","Oops, move Screenshot.cpp in MSVC project.
"
"0597b92998580e44d168f4682736588c988728a7","2015-06-14 09:24:56-07:00","For consistency, push fp regs here too.
"
"c27e634795b26583974c39f473ac266a3a5e90d7","2015-06-17 17:32:13+10:00","Blackberry: Fix build. Blackberry doesn't support XOPEN_SOURCE=700.
"
"c3339f982aadc74d4bfdb45b40b925827c87818b","2015-06-21 16:49:21+02:00","Fix wrong translation category
"
"ce4e593b312fa23b64f1c55832336fefcb9a5540","2015-06-21 09:52:36-07:00","Merge pull request #7816 from vnctdj/master

Fix wrong translation category
"
"6eeecbc5af0ca37e42142f794fd11d4d98f21c3c","2015-06-21 12:11:00-07:00","Avoid pulling in EGL except where needed.

Seems to pull in X11, which pulls in a bunch of defines we don't want.
This fixes compilation on such systems.
"
"ad73a39e4eaeffa416f185637c569f1736ddb649","2015-06-21 12:15:28-07:00","Allow recursion in the frame profiler.
"
"71c48278a9209f0e70892987b24f6399f5034f70","2015-06-21 12:25:05-07:00","Update native (Linux ARM/EGL buildfix.)
"
"33d8c3c1af9199db8ae8f961acdd1e24ac880199","2015-06-21 12:25:38-07:00","Don't report software clut zeroing.

This has been tested, no need to report anymore.
"
"2013034bd66019446a80dfcc0e29a8e22ad01e62","2015-06-21 12:50:02-07:00","d3d9: Log better when offscreen surface fails.

We're getting reporting that this is happening.
"
"e9414c238d10a1e0e0216e4cb1042611ef15f72b","2015-06-21 22:01:46+02:00","Merge pull request #274 from unknownbrackets/profiler-recurse

Allow recursion in the frame profiler
"
"3587b36f86ab43d3d3825b6dfc24979c4a743017","2015-06-22 00:06:30+02:00","Minor cleanups in BackgroundAudio and ARM64 vtx dec. Update native.
"
"a5cfd1a319fdc2b9c5a9b06a3d4072448fabee84","2015-06-21 19:57:58-07:00","Oops, typo.
"
"76e9a03f5b9ae8426c5a490afec9aa899e747b30","2015-06-23 23:13:23+09:00","Joystick hot-plugging for SDL.
"
"1e3beadb7b164ef8e3718d75abf6e9a5d18dcbb7","2015-06-23 22:42:48-07:00","Fix insta-crash on AArch64.

Oops, missed an eglGetProcAddress().
"
"ce23ca1d92c72346b85b74f4015f0d4fb1351347","2015-06-23 22:44:02-07:00","Fix insta-crash on AArch64.

Or, hopefully.  Not actually tested.
"
"dc21c6d6346a7a586e2ed709e85479c26c82565a","2015-06-26 03:08:38+02:00","Disable changing PSP mode when game is running.

It causes crashes in games actually using the extra memory.
"
"b3aa6d89e9e589344296bf22c687e0485e6125c0","2015-06-26 21:27:03-07:00","Fix UBFX encoding (thanks SonicAdvance1.)
"
"75c86c95a0ba4cb0a6b656fca0ce490a1e260c88","2015-06-26 21:39:48-07:00","Show cores correctly on ARM64.
"
"3110d6f9282c2de92a7abef03ca7b9268b508cae","2015-06-26 21:55:51-07:00","Show some cpu name if possible on Android.
"
"feddd202ee8c8d36e6a5d23b3c6f858c7f74a642","2015-06-26 22:26:46-07:00","Add a flag to skip building the app on Android.

This is for unit tests and headless.
"
"62988b2aa76b0efd685d766eeacaaf1bb611bd0d","2015-06-26 22:27:12-07:00","Fix building unittest for ARM64 Android.
"
"fbd4db0fc4caf848dd378b3e7307b6e3bc2787aa","2015-06-26 23:47:37-07:00","arm64: Add a safemem path.

This is probably not optimal but at least it works.
"
"3c29ec2051adfadff7a4ccd0a66ab043f94a3835","2015-06-26 23:50:48-07:00","arm64: Optimize codesize in safemem path a bit.

Will only be used for scratchpad, I think.
"
"fedbe645e01f458521b08c2dcc5a5b56da33ffb4","2015-06-26 23:58:34-07:00","arm64: Use all immediate compares in safemem.

Ah, this is better.
"
"d6f6529ba2bba239933bda0c5d5110d6f49e6a0c","2015-06-27 12:15:32+02:00","Merge pull request #7825 from unknownbrackets/arm64-minor

Fix UBFX encoding (thanks SonicAdvance1)
"
"66ccc2d66de71e3e00735cda77ee1a4b010dd3e8","2015-06-27 12:16:13+02:00","Merge pull request #7824 from LunaMoo/minor-ui

Disable changing PSP mode when game is running.
"
"71adbaad328b33831739e0b3281f1fa68162f549","2015-06-27 12:21:19+02:00","Merge pull request #7826 from unknownbrackets/arm64-safemem

arm64: Add a safemem path
"
"57f44edaeac2c4aa7864042e00c79ebf2bdd19a0","2015-06-27 09:41:53-07:00","Retain focus after popup choice selection.
"
"b72060bc062e420b4ce2320a5057b98f6298fc1b","2015-06-27 09:48:24-07:00","Retain focus with other choice popups.
"
"bad22f7b78d97a04b73048cdc5fefd7260709c77","2015-06-27 19:23:21+02:00","Merge pull request #279 from unknownbrackets/ui-focus

Retain focus after popup choice selection
"
"bc294098179cc30bb8c758aad696c605a1994eab","2015-06-27 18:27:54-07:00","Send the cache dir path to the app.
"
"3471eabcea514ab1905b83fea2219b9ef9924bbd","2015-06-27 18:30:34-07:00","Update native with focus improvement in settings.
"
"f355600c205f328c843e1b2e7ffc1d2a917c4b6e","2015-06-27 20:13:41-07:00","arm64: Handle negative MOVI2F more correctly.

Both -0.0 and some negated constant values were handled wrong.
"
"81bc8107cf57fb3945d3b1f100fb35661642c945","2015-06-27 22:32:17-07:00","arm64: Use UBFX, not LSR, for slti sign check.

This is about 22% faster on the A57 (for just this one instruction, so not
a huge impact overall.)  Makes sense that it would be since not arith.
"
"223e55a453e9556d4db9742eb06149951ef547bc","2015-06-27 22:33:15-07:00","arm64: Undisable clz/clo, they work.

Also, avoid a temp in clo.  It's the tiniest bit faster on A57, though
we'll see how it works out elsewhere.  A bit clearer without the temp
imho.
"
"11a851a1393f81b19dcf3d1a685d384c73129244","2015-06-27 23:05:51-07:00","arm64: Enable movz/movn.
"
"daddb73f228bf051f0ba4a1c7a568f7172f59ff7","2015-06-27 23:54:43-07:00","arm64: Implement nor.
"
"8f11555226141e9259f676d0f0a878cda6d97d50","2015-06-28 16:44:48+09:00","Insert a space between parens and curlies.
"
"457992c683edbc04b96cdc4ba2b14d71d0e11fc9","2015-06-28 14:14:51+02:00","Merge pull request #7828 from unknownbrackets/arm64-minor

arm64: Handle negative MOVI2F more correctly
"
"803170b99278cfbc7468587f1cfb3dc8e95b9ff6","2015-06-28 14:17:06+02:00","Merge pull request #7829 from unknownbrackets/arm64-micro

ARM64 micro-optimizations
"
"932bb69f0e16ae9a41c06d5a84fe6528587dd362","2015-06-28 14:18:01+02:00","Merge pull request #280 from unknownbrackets/diskcache

Send the cache dir path to the app
"
"0a5b1c030bf4e649ff722777528fd3d75f793f60","2015-06-28 08:45:17-07:00","arm64: Implement ext and ins.
"
"0978aa4d5e1b4bcf475057e13d0e98b48b9a5dae","2015-06-28 09:05:39-07:00","arm64: Use msub for div/divu remainder.

Not really much faster, but less instructions at least.
"
"213ad4bcc90871b344ee5a5c3f28efb3cb12c362","2015-06-28 09:19:06-07:00","arm64: Cleanup branch code a tiny bit.

Want to make it clear that we can't kill W0 at this point (delay slots.)
"
"909e4b9bd8123ff4b7c4eb5a8230c926fbecc2fa","2015-06-28 10:42:19-07:00","Switch lo and hi so that low comes first.

This way we can treat it as a single 64-bit value.
"
"febe435946b5ccba9adb4e83ec302bbf0b1ff158","2015-06-28 10:43:29-07:00","arm64: Use FP load/stores for non-reg pointers.
"
"1c163e4817db4891751192d23337dc5587a2650b","2015-06-28 10:52:17-07:00","arm64: Avoid an ORR for c.ueq.

This is about 15% faster for this single, uncommon instruction on A57.
"
"0cbee06b3d299ebf0ee5dbc4a33cc53236bf2dad","2015-06-28 12:35:53-07:00","Merge pull request #7820 from oscdis/hotplug_joy

Joystick hot-plugging for SDL.
"
"b6612edf6765c494245e5e3690fc3abd5340b012","2015-06-28 12:40:29-07:00","arm64: Use a cached rounding func for cvt.w.s.

This is much faster for this particular instruction, although not all
games even use it.
"
"920df87621db9708134ea74a494bb8c68474ec82","2015-06-28 22:58:07+02:00","Merge pull request #7831 from unknownbrackets/arm64-micro

More ARM64 jit optimizations
"
"4d7a94871790968bce514047b20d31dcbdc3dc62","2015-06-28 16:35:46-07:00","arm64: Fix a dump mistake with rounding modes.
"
"81b923f1dc25432d7c0fbf839011fa2ee72af911","2015-06-28 16:49:28-07:00","arm64: Correct movz/movn.  Weren't right after all.
"
"e94fd3d4bd3195a6407cc17b00b80855679a05aa","2015-06-28 16:52:49-07:00","arm64: Fix div/divu remainders.

Erp, I transposed the args when I pasted them.
"
"3d59fe5f6fa6a3e870c6a0edd62faafdd92c6454","2015-06-28 17:56:04-07:00","Move system info to tools instead of hidden in dev.
"
"7ce13694eccacf7c6ae81cf604b80c6e4084a564","2015-06-28 18:15:00-07:00","Make CPU extensions focusable for consistency.
"
"577beafeb3ba80a5dffe5a4ec357e657023a4fcb","2015-06-28 18:30:22-07:00","Show a message when no saves are there yet.
"
"c043b557adc3a48072aff6c0a40a700b0fffe13a","2015-06-28 18:46:50-07:00","Slow down the marquee for longer names.

Let's not make anyone on a small screen dizzy.
"
"3c093ccf73af6d57ec6995cda56323082208515f","2015-06-28 18:47:52-07:00","Show popup headers as marquees if they are too long.

They were just overflowing before.
"
"0f0115da8abbe6479e52c655dd9e8adbcab1c00e","2015-06-28 18:48:22-07:00","Show a highlight for focusable text views.
"
"e5f432c0e7dd2ff7c99ebd406272e2ac00a3a834","2015-06-29 09:50:09+02:00","Merge pull request #7832 from unknownbrackets/ui-tweaks

Tweak Savedata and System Info screens
"
"ca7fc5967dd44ed737f9eec5f2f74ac030c26e56","2015-06-29 09:50:33+02:00","Merge pull request #281 from unknownbrackets/ui-tweaks

Marquee popup headers and highlight focused TextViews
"
"5918cad4b206f1c03797e670da915fad7d54cf1a","2015-06-29 20:28:31-07:00","Consistently use *dev for the Developer i18n cat.
"
"d48ee947ac09ebbceb1608e703264494409ebbea","2015-07-01 22:31:04+02:00","Consistently use *co for the Controls i18n category
"
"44682d1bae78cf4d5f0eeb9e8a63a0fa69a9fdae","2015-07-01 22:40:11+02:00","Consistently use *cw for the CwCheats i18n category
"
"beda874ab518e1f7e2deb75cf3eb9e6d6e128d26","2015-07-01 22:45:35+02:00","Consistently use *des for the DesktopUI i18n category
"
"d7eba2061e4e44ef63b74bfa847a5761570f7998","2015-07-01 23:26:55+02:00","Consistently use *di for the Dialog i18n category
"
"70d9e6cecb689fae678991f899e30d04b0ea35e5","2015-07-01 23:34:50+02:00","Consistently use *err for the Error i18n category
"
"e791bea8a96757be10aa1adfcf2658e93de708f5","2015-07-01 23:50:16+02:00","Consistently use *gr for the Graphics i18n category
"
"95f83570f4f723090f8e98120b6cd97aa88f1ec3","2015-07-01 23:54:35+02:00","Consistently use *km for the KeyMapping i18n category
"
"a5e63e4612c6d1c6e9e89d0d0f6a315b9401e3a5","2015-07-02 00:02:08+02:00","Consistently use *mm for the MainMenu i18n category
"
"54d0b46224efd01c3a9020eca55fa78c90a19004","2015-07-02 00:13:35+02:00","Consistently use *pa for the Pause i18n category
"
"21158335af15e19b3ec8ec255ff5a68b0bd58ee3","2015-07-02 00:19:38+02:00","Consistently use *cr for the PSPCredits i18n category
"
"ad93113e04071111de6097b8a971c8ebed520497","2015-07-02 00:24:43+02:00","Consistently use *sa for the Savedata i18n category
"
"d4d91fc831bc558a87eccb6ccf1ccb7a700e9766","2015-07-02 00:50:07+02:00","Consistently use *sc for the Screen i18n category
"
"c8d4ebdbfa75e251a56cac16f5be94e138fc8561","2015-07-02 01:00:04+02:00","Consistently use *sy for the System i18n category
"
"cf9b6b60d5188a96fefc716b3bed232b7dae456c","2015-07-02 01:13:05+02:00","Fix errors
"
"d248d77839118a7b73dd3e598829fb3cbcad87a1","2015-07-02 01:48:52+02:00","Oops, forgot these ones
"
"373346dcebe719374eb0830ff5e42aed05aaac56","2015-07-02 09:14:33+02:00","Fix error catched by Travis CI, should fix Android build
"
"58b223e974e67db8b7dacd8863b6c06b21cd4868","2015-07-02 11:12:56+02:00","Merge pull request #7836 from vnctdj/i18nCat

Consistently use pointer names for translation categories
"
"63817040856f6b4580d41a0621e9d3ed9838f109","2015-07-02 14:20:04+02:00","Consistently use *di for the Dialog i18n category

Same goal as https://github.com/hrydgard/ppsspp/pull/7836.
I didn't know native also uses this kind of pointers :)
"
"04ce8a63e56dd4adff4fbe493aba61498b00f5de","2015-07-02 15:55:09+02:00","Workaround issue where some homebrew (like moppi-flower) would erroneously load into kernel ram where it won't fit
"
"a9ba755ddef9ef5ace67e4abf26276918f34d6df","2015-07-02 17:38:35+02:00","Merge pull request #7837 from hrydgard/homebrew-load-fix

Workaround issue where some homebrew (like moppi-flower) would erroneously load into kernel ram where it won't fit
"
"670b2ff1e2506db44eb36141626b73bb45908420","2015-07-02 09:06:05-07:00","Merge pull request #282 from vnctdj/patch-1

Consistently use *di for the Dialog i18n category
"
"bb57aa69d1d55311cd99e72ef7b2263df7fb14c4","2015-07-02 23:07:07+02:00","Somewhat better check to prevent some homebrew from loading into kernel memory.
"
"757a1a414ad201ed9f63e099fb2a00318b02a0d8","2015-07-02 19:58:33-07:00","arm64: Workaround an apparent gcc bug.

Only seems to happen with unsigned.  This took a while to track down...
"
"650687dced330c1d8b2fb282f58debd1d6f8dcde","2015-07-02 20:02:04-07:00","Update native (ui tweaks, i18n cats, cache dir.)
"
"1d1c80d9cf56cddfb2a96a6bcc1b98833e183f58","2015-06-28 17:47:37-07:00","arm64: Use BFI for cfc1.
"
"31a5227076aa4e5f114b5c8a03c8954190bb7a9f","2015-07-02 20:08:45-07:00","arm64: Add umull alias.
"
"3780b6c0a5b852a431b89c7c309c31d8d96908bb","2015-07-02 20:10:24-07:00","arm64: Verify offset is aligned.
"
"fed687fb59ef29fd1ad3f151465f4f0a036dd389","2015-07-02 20:23:27-07:00","arm64: Meld LO and HI together for multiplies.
"
"66adc4e695792c71f30c368fedecfc140b882e86","2015-07-02 20:30:40-07:00","jit: Normalize CONDITIONAL_DISABLE formatting.
"
"da827d9ef0ed1af12ad85d7d398078742dc82261","2015-06-27 10:58:44-07:00","Move file loader code into directories.

Not making sense to put these all in the same fiel anymore.
"
"88b23460f1f13c0bdac021dbeb58cb032fdaf67e","2015-06-27 18:32:21-07:00","Add a file loader to perform disk caching.

Had to do some tricks to handle gameinfocache threads properly.
"
"7dbe2821dc778e57a94ebd73bcf4a17fc6fb1f71","2015-07-03 10:38:35+02:00","Merge pull request #7839 from unknownbrackets/arm64-micro

More ARM64 jit optimizations (multiply mainly)
"
"66d85233b91674848dbbec0e4653ad62c201611a","2015-07-03 09:58:56-07:00","arm64: Flush only caller-saved regs before calls.
"
"2331df8c7045f341922b107f0f9f44d2ba21b73f","2015-07-03 10:19:22-07:00","arm64: Try to be more consistent in ZERO handling.

Let's keep it IMM where possible, even though we've added checks for
MIPS_REG_ZERO.
"
"ddb955a527cafe5917cb461d938b8f73817144d2","2015-07-03 10:41:49-07:00","arm64: Try to optimize imm stores.

If we already have a reg, we can use it.  This can happen when immediate
addresses are loaded and used as bases, although it's not super common.
"
"90b7d135cbf6d2b241f112383a35d9027c365fbb","2015-07-03 10:56:33-07:00","arm64: Flush in pairs if possible.

On an A57, this is around twice as fast (for just the STR/STR vs STP.)
"
"a262f18bd7facfade926ad1c20feba25b30e785a","2015-07-03 11:15:10-07:00","Fix profiler labels when skipping UI.

Example:
adb shell am start -n org.ppsspp.ppsspp/.PpssppActivity -e
org.ppsspp.ppsspp.Shortcuts /storage/emulated/0/gamefile.cso
"
"8fdceba7cafe6aa6174688e99939a078cec2324d","2015-07-03 12:05:08-07:00","Add timing for all the basics.

This way we can see overall stats for a frame.
"
"0f0c16f25f2275a6fd491f4b13b3dba3815bcca1","2015-07-03 12:06:17-07:00","Skip 'timing' categories in graph.
"
"2a0068764397bbc9a7e4d44d4253ddfd28ab116f","2015-07-03 12:08:12-07:00","Skip categories that are small slices of the time.
"
"ad5301873f7db44eb4b13bc7592ffe511928325a","2015-07-03 12:11:18-07:00","Increase max profiler cats.

We're near this limit and about to pass it in PPSSPP, 32 isn't a ton worse.
"
"12ca8f724b6521099a41969c508c4a039d05690b","2015-07-03 12:12:19-07:00","Update native with higher frame cat count.
"
"3f9b5ee1a3feac586774e4454c8be7e69abbc6a8","2015-07-03 12:43:02-07:00","Clean up legend placement in profiler.
"
"0ffffb41bd7be46bb0050813f15a7aba80f6afd6","2015-07-03 23:16:19+02:00","Merge pull request #7841 from unknownbrackets/frame-profiler

Count more in frame profiler, tweaks
"
"82c66bc463efcdbb83cc95643d598c0bce7a7dab","2015-07-03 23:20:43+02:00","Merge pull request #7840 from unknownbrackets/arm64-micro

Flush using STP where possible in ARM64
"
"6327a1300f3c7117497fee04e6656e77c1286334","2015-07-03 23:23:16+02:00","Merge pull request #7827 from unknownbrackets/file-loaders

Disk caching file loader
"
"808db2482a184449448f4fb2f3ba8ea3bc2ea51c","2015-07-03 15:25:40-07:00","Initial structure for vertexjit tests.
"
"14885182b9af0bb3682d5d7e9f25b7c0b02a723f","2015-07-03 15:44:41-07:00","Add some timing ability.
"
"ca1e482a56c6fe4dceec9bd4f6e4e5bfbac4ce18","2015-07-03 16:05:25-07:00","arm64: Avoid setting a reg to zero to store it.
"
"e6a7ba3faee89ee347b95757efdd531c3487885c","2015-07-03 16:51:33-07:00","arm64: Bring imms along for the STP ride.
"
"58e8b24418b34e99bbeed26240a57f44c5e96525","2015-07-04 08:31:37+02:00","Merge pull request #7842 from unknownbrackets/test-vertdec

Add a test harness for vertexjit
"
"75c8ccd2c175601d02652abcd8efb30c3593fdce","2015-07-03 23:47:32-07:00","arm64: Update emitter from Dolphin.

From dolphin-emu/dolphin@d09d59007a483198e26c925cecf9b1f8afec5388.
"
"511d8bd3d437c2bee5880eb7f20ea5d86b0433a3","2015-07-04 09:46:20+02:00","Merge pull request #7843 from unknownbrackets/arm64-micro

Update ARM64 emitter from Dolphin, minor flushing tweaks
"
"53882c4a33d4bf5b34e4e988028df31ed014271e","2015-07-02 12:37:13+02:00","Display game icons in the homebrew store, downloaded from the store
"
"26e07c0fdb856217a214da82d7c03eee41b8db65","2015-07-02 17:59:47+02:00","Don't spam icon downloads
"
"41c8599087170121faa2330ade80b5b8c13c2759","2015-07-02 12:38:23+02:00","Enable the homebrew store by default
"
"0f8a96928421ea996df5a013bd5bf8dcab01fd57","2015-07-04 10:33:36+02:00","Remove option to hide the homebrew store
"
"c02c2c34170ea55a2dd51c79c6931d988a8a1e5e","2015-07-04 11:01:34+02:00","Symbian buildfix, forgot that this is how we worked around it in 'base/functional.h'
"
"7a7d8b6489ea1fdb42ddccb1b639093b636401a6","2015-07-04 06:57:12-07:00","Buildfix for Windows.

Oops, forgot to recompile this file in Visual Studio after update.
"
"8ea7f990722809fc43324ea81360558aade120d4","2015-07-04 07:08:27-07:00","arm64: Fix imm wasting when STP doesn't work out.
"
"2c6278501a8fce360d45e966f6236ba66dbb20a9","2015-07-04 07:18:58-07:00","arm64: Correct emitter for LDP/STP.
"
"003668fe663275561d671edfddf6f2ce60bb9e74","2015-07-04 07:30:32-07:00","armjit: Fix discarding imms.
"
"e2620a71852d32d73acb542850722f19f3e4f974","2015-07-04 07:39:18-07:00","Merge pull request #7844 from hrydgard/homebrew-store

Enable the homebrew store, add icons
"
"40dcd585a07eeab78ca8ee49c94612db89625cd5","2015-07-04 08:01:32-07:00","Update 'Back' buttons to match a bit better.
"
"adb2ebe87f8c85fb01d9e5f921f2b408814f75d5","2015-07-04 08:40:40-07:00","Refresh buttons after installing homebrew.
"
"d04a99b39f2ad7485dab0e456ec5e16c2f12b8cc","2015-07-04 09:05:17-07:00","Add a launch button to the homebrew store.
"
"28acd6b6376198a7c4d2607f59a81c97082ea787","2015-07-04 21:03:35+02:00","Merge pull request #7846 from unknownbrackets/homebrew-store

Refresh buttons after installing homebrew, add launch button
"
"27d995b906da986209cea659b0fe61e32018d26b","2015-07-04 22:05:17+02:00","Move 'Developer Tools' into Tools
"
"683b3eb082b7210480cee69525c753e49d729de1","2015-07-04 18:08:31-07:00","Add tests for various vertex formats.
"
"f8bb7f3c5204f5523903b3975c97a3428a9b403f","2015-07-04 18:22:16-07:00","arm64: Optimize pos and nrm conversions.
"
"37bc3cd347d532f43477c209eb02b434a8af5757","2015-07-04 23:40:11-07:00","arm64: Optimize some texcoord and normal decode.
"
"809f39876029166fcd20127ac098901c69f60a91","2015-07-05 00:17:06-07:00","arm64: Set vertexFullAlpha.
"
"b865070de1230fbf65e2032aae6ac462ba3e5335","2015-07-05 09:57:58+02:00","ARM64 emitter/disasm: Fix LDNP/STNP disassembly, also fix test of smaddl
"
"7011758e83e1e4fabbbbeb825d2a79732a6307dc","2015-07-05 10:03:04+02:00","Move misplaced FlushIcache() in Arm64Asm.cpp
"
"937feb6892935111cc1d4d626863e8ff463d28c8","2015-07-05 11:00:23+02:00","ARM64 disasm: Fix disasm of msr/mrs
"
"46c1030530ecb7739b9a184abeb6a2596fd9dcbe","2015-07-05 08:35:51-07:00","arm64: small optimization for weights.
"
"a98706f8138ea6775282078d788186e2d55c08ac","2015-07-05 08:59:36-07:00","arm64: Correct some offset snapping.
"
"cc59361408ff23c6baccacd673427b999589ff39","2015-07-05 18:25:24+02:00","Merge pull request #7848 from unknownbrackets/vertdec

Improve arm64 vertex decoder
"
"4588eb8328412265f08bcc61418d0b64454d4776","2015-07-05 18:45:23+02:00","Add a couple of accessors to InfoView
"
"204c1dc8ddea057135abc3d06cb16f88a63681e9","2015-07-05 09:42:54-07:00","arm64: Optimize 3ops against zero.
"
"db3dffb44d442c37508a1c09b444a24c6099fe08","2015-07-05 11:57:18-07:00","arm64: Oops, fix flushing zero from an armreg.
"
"f3c5af570c84467699124369cd9a61de6fe13875","2015-07-05 21:11:28+02:00","Merge pull request #7849 from unknownbrackets/arm64-micro

Fix discarding imms and flushing zero in arm64
"
"b9090a25b2008e12e3460da2c4f8ac2883d05708","2015-07-05 20:04:14+02:00","Reduce logspam in Burnout
"
"12faaca3e4a7287e7eafb1b9ad4f831ea40af6c8","2015-07-05 16:08:41-07:00","Build Android using a static library.

This makes headless and unittest build much faster, especially when all
three are building at the same time.
"
"bf14ad4667fe1e1828d301c086cbedea6f3a4242","2015-07-05 16:09:29-07:00","Add a shortcut key for the devmenu.

This is useful when you don't have touch or mouse, only keyboard/pad.
"
"9b32969ae41132d4d9de06d1ac75b26ca0cc1e95","2015-07-06 11:47:52+02:00","Merge pull request #7851 from unknownbrackets/android-minor

Build Android using a static library for the core of it
"
"a3b728dd1bd0d4b14a4eeb29055f463d48dbdc0e","2015-07-08 11:58:42+02:00","ARM64 jit: Minor optimization of lv.q and sv.q
"
"59164cdbfb66d9d22f5a6f71500d3de7e757d3ee","2015-07-09 00:24:57+02:00","ARM32: Disasm and emit NEON shifts-by-immediate
"
"cd1665e8f682bb5295e16408b84dd5a923b53c81","2015-07-09 00:25:40+02:00","ARM32 jit: Implement vi2s, vi2c (but not the unsigned variants yet). uses the new shifts from the last commit
"
"0be2b93ceb2d473bfb1e5ae9409f4c64aaf69532","2015-07-10 23:56:42+02:00","More ARM32 NEON encoding horrors (VMOVL, VSHLL)
"
"f50828a66a7356f193c614e7b5cced8908cfd5ee","2015-07-11 00:37:57+02:00","ARM32 JIT: Implement vs2i, vus2i, vc2i (but not vuc2i)
"
"72651835c39a4aa2637320f55dc09d3cc8ded65c","2015-07-11 12:16:26+02:00","A bunch more ARM64 encodings (*MIN,*MAX,XTN,SHRN, etc)
"
"28456bef90445665b351d4795f5b56323ba17814","2015-07-11 12:36:44+02:00","ARM64: Add NEON EOR encoding
"
"4a7ee6d6cd3dc335b047a2e1c469747f08d7b39e","2015-07-11 12:37:23+02:00","ARM64 jit: Implement vi2uc, vi2c, vi2us, vi2s instructions
"
"35c65973c1599be7ce288a744710ceabc948477b","2015-07-11 13:25:58+02:00","ARM64 jit: implement vuc2i, vc2i, vus2i, vs2i instructions
"
"1575025b3d608ce0d600d0b7e49d76b56575baaa","2015-07-11 13:52:46+02:00","ARM64: Store back fp registers in pairs where possible
"
"dc2f6a30fbf4718674882aa2d505deeb4f2b3865","2015-07-11 16:25:22+02:00","ARM64: Fix joining of lwl/lwr and swl/swr. 'implement' the cache instruction.
"
"9937b41461993618ee1f08404308fd98829f38f4","2015-07-11 16:46:11+02:00","ARM64: Fix vi2uc and vi2us and enable them.
"
"698ef8245260c826228334019e527dda8b735f41","2015-07-11 16:56:18+02:00","ARM64: Fix vrot
"
"a0bf9347960847c9cd1a5e30cad328bf6b969af9","2015-07-05 20:50:03+02:00","ARM64: Some work on static allocation. Close to working, cube.elf runs 700 blocks but then hangs (?!)
"
"844a3f19a961c4bd0ae6da3cd6e5924288ce76d5","2015-07-06 21:16:49+02:00","Fix bugs and issues in ARM64 static alloc. Thanks unknown for finding the problem.
"
"9af6abd8a10caf40c95dbb1e926b83ba80e084e3","2015-07-06 21:46:00+02:00","ARM64: Support pointerified static allocs, statically allocate SP
"
"f42f81a4daa7b0aa80994b4a0a08e072004f6f0b","2015-07-06 22:17:16+02:00","ARM64: Optimize small adjustments of pointerified registers
"
"4920f3e3c1228e97f1630e69686ab935e587c8bd","2015-07-06 23:12:23+02:00","Work towards handling ML_IMM in static registers but doesn't work yet (enable on line 649)
"
"1b8549b26f918c76b19075d7ba4e5379b61ff94a","2015-07-06 23:26:40+02:00","Couple more regcache fixes
"
"568e2abb2b4de043f8e082017ba398f334a5ba87","2015-07-07 01:12:01+02:00","Save/load static registers around replacement funcs
"
"d1bbc1d3c0cefd869a26713d0359bcf6ccafda93","2015-07-07 01:12:42+02:00","More regcache fixes. ML_IMM works now although there is another stability issue somewhere.
"
"2a8560e52292392be813084b8e95f0d787ae3a9d","2015-07-08 10:05:18+02:00","ARM64: Another pair of fixes for static alloc. Still crashes in many games...
"
"444fc0885c8c2edcac5f4b6d99904ffb053972e4","2015-07-08 11:43:38+02:00","Fix the crash bug (need to mark static non-pointer regs as depointerified on flush)
"
"b73920fcba7b12a44947f735f4dfe564a3a9b39d","2015-07-08 11:44:17+02:00","ARM64: Cleanups in regcache and jit
"
"2e937b2d10449204bc31c9a3d6b71819996fc6ba","2015-07-11 17:17:54+02:00","use the DiscardR function. Remove an old TODO
"
"1ba2b1cfaeefbd8719d129bfab7daa98109cffcf","2015-07-11 18:13:47+02:00","Merge pull request #7855 from hrydgard/static-alloc

ARM64 jit: Statically allocate a few registers, including SP
"
"56f9aaa1645a08659c79c4df2bdbd43e80129bde","2015-07-11 22:12:41+02:00","ARM64: Store zeroes using WZR
"
"9fe382ad18481ad04ffca5552a37a6a1c89b8d78","2015-07-11 22:13:54+02:00","ARM64: Shortcut moves between gpr and vfpu when not mapped
"
"8b05e2725932d59088251381224ba4a1d5a57b43","2015-07-11 23:03:44+02:00","ARM64 regalloc: Map more registers
"
"73e9c3b3a247b309aaed66fd4d1aa45bc9a1620d","2015-07-12 00:44:11+02:00","profiler: Track framebuffer reads in its own category
"
"ccd77cfb7a46cc212e277bfd5a0abb006e7c28a9","2015-07-15 20:01:36+02:00","ARM64 stores: Use WZR for any zero immediates.
"
"d3018c1787012f8e03d8949250cfaa6fe64547a8","2015-07-15 20:02:42+02:00","Windows: Enable ASLR (had to fix a few pointer truncations)
"
"a1faef4e8f766f4a6cb586f238b533803c2a41cc","2015-07-15 21:29:37+02:00","Merge pull request #7859 from hrydgard/arm64-minor

Arm64 minor optimizations
"
"aaa8350591e2c3ec41fb4a437fa41fb28f5470de","2015-07-15 22:24:35+02:00","Windows: Fix some remaining ASLR issues
"
"47f68ae3a3fd643bb543b50dbde8aeb7ae9f8b10","2015-07-16 00:25:32+02:00","ARM64 store optimization bugfix
"
"db528c2aaaaed622abdbe42ff9a326d454a6e6da","2015-07-16 00:33:38+02:00","ARM64: Remove 'EXPERIMENTAL' warning text on the title screen, it pretty much works
"
"c033162abbc622a833a49e3009cf9069eaf95ef5","2015-07-15 21:31:34-07:00","Use pixelWidth/pixelHeight for Auto (1:1) res.

By definition, it ought to be 1 PSP pixel for each host pixel.

The old way was accounting for dpi (thanks xperia64.)
"
"042da34361c11e4be0718609597278307d403c2b","2015-07-16 09:46:44+02:00","Merge pull request #7865 from unknownbrackets/ui-tweaks

Use pixelWidth/pixelHeight for Auto (1:1) res
"
"c4ea4e36d7669cede31842da4ab5f999c4045dc9","2015-07-16 07:29:55-07:00","Let's use pixel_x[y]res directly.

There are many paths where this is actually zero still.
"
"0393da5a59e616636c6f9b2a8a9ef6199925594d","2015-07-18 19:04:05+02:00","Delete obsolete file
"
"758c614f0a3eea6c95a7c2e6f9e03ddca6e5ae6a","2015-07-19 16:21:24+02:00","Set threadnames on Android
"
"7c24761d4db84a5b9140794ad7c03252c1ed36b0","2015-07-19 17:14:48+02:00","Http download : set completed flag even if failed. Use setThreadName on android in init
"
"e23e20d8a1a74326027850982c33e501010f39c1","2015-07-19 17:27:02+02:00","Get rid of the separate so file for OpenSL stuff, we haven't supported 2.2 for a long time

Code needs some cleanup, but that's for later.
"
"166d07df0c37c038a02bda687ba77a5bbfd1d01c","2015-07-19 17:33:03+02:00","MogaHack: Remove irrelevant log (?)
"
"b6e9a47974fbb4c40e4b640e42036ca2f44ad73d","2015-07-19 17:33:38+02:00","Remove separate OpenSL .so, update native accordingly. Fix connection error reporting in HomebrewStore
"
"e69a14ffffca56d075afc544926fe1919d865286","2015-07-19 18:22:22+02:00","Don't set ARM 'FastMode'. Not worth the compat impact as is, could be made smarter. Should help issue #7234
"
"a459e0a733aac7244c77ab5be4ef43bfc857f134","2015-07-19 18:24:28+02:00","Add a few little helper scripts to symbolize the last backtrace from adb logcat
"
"96b01e4999a26da76a3f8aa75d2ce0a7377a7376","2015-07-19 13:04:06-07:00","Make sure we don't clean up proxy blocks.
"
"cd842ac21f60cedfe1f49aa915f4ecdd732b80c3","2015-07-19 13:08:32-07:00","Validate blocklinking in icache invalidate all.

Normally blocks are invalidated on entry.  But when blocklinking is on,
we don't validate on all entries.

This fixes Tales of Rebirth crashes (#7868.)
"
"9262ddfc135f14f9c50080cae9b9c12f43b5f0da","2015-07-19 13:25:50-07:00","Avoid any possible shifts by 32.
"
"f4e0034aef92a432acc8d5d18f2cfd2a6652737a","2015-07-19 22:39:08+02:00","Merge pull request #7869 from unknownbrackets/jit-minor

Check all jit blocks in sceKernelIcacheInvalidateAll()
"
"a9cefe2f3ad5c9f9af6e19af06e54e082cbbb9d5","2015-07-20 20:28:59+02:00","Android: Set display thread name, release local refs to frame comman strings properly
"
"477568b3485e9921ede59c26b266c762b1fbd066","2015-07-21 20:46:31+02:00","Try to improve GPU vendor detection.
"
"11f64ee27b1f8c5bcff318a4a37b64d54b6968ec","2015-07-21 20:48:10+02:00","System info: Make it obvious which GPU vendor we detected. Remove the math precision reporting, which seems inaccurate anyway.
"
"1c8bae09259b9c851a1bdaf5a23579fdf1a712e7","2015-07-20 20:17:35+02:00","Compile with -mstackrealign on Android-x86, 'fixing' mystery crashes on Zenfone.

This is really just a workaround, I have no idea what is misaligning the stack. But it doesn't feel like it's us.

This has a small performance penalty but x86-Android is pretty rare, and it's better than crashing.
"
"ea33f50a8a15de91fa14336469fba51d30a61a10","2015-07-20 22:18:26+02:00","Minor optimization: Help stupid compilers avoid a division (and a multiplication).
"
"abc0f88a550fc2217841c6947b8fa70a5a159513","2015-07-22 22:19:58+02:00","Update submodules
"
"7f8cf7f800188708e93485a9268e50df2683ca21","2015-07-22 21:38:01-07:00","arm64: Use XXH64 for vertex hashing, etc.

Based on benchmarks, it performs better than XXH32 on an A57.
"
"e3b6e35417c038000607189652362ab762ad0d2b","2015-07-22 23:19:59-07:00","Correct path for case-sensitive unittest build.

Ouch.
"
"7062fe11e270633e8a32225103eab3b2c7564791","2015-07-23 16:50:26+02:00","Merge pull request #7874 from unknownbrackets/gpu-minor

arm64: Use XXH64 for vertex hashing, etc.
"
"428b5c2fb37641a97ca465a91d8169c86367d256","2015-07-23 14:00:02+02:00","System information: Make sure we parsed the OpenGL API version correctly by displaying it.
"
"0763dbc64188695823b287312f14d1e24568ba89","2015-07-24 19:52:42+02:00","Cleanup and comments in sceGe.cpp
"
"828c740fd5d6d8a501c6a9b9b2a31eb403d354eb","2015-07-24 23:26:35+02:00","Correct a few comments, thanks unknown.
"
"0726912f09ee2d60ced7111e467c933038984e44","2015-07-24 21:48:39+02:00","sceDisplay, GPUState cleanup and comments
"
"6fee2b456c9ae6389b07599ac7549bdcb618ac7f","2015-07-25 14:22:43+02:00","GPU classes: Replace 'virtual' with 'override' for free function type checking
"
"07b17560f49b8f849dcd151fc5fb51ff229c8a7d","2015-07-26 12:24:16+02:00","Add some useful accessors to GPUState (backported from a work-in-progress branch)
"
"aae254254b8f328d50a32f8e88f4a1f22d9570e0","2015-07-28 00:57:07+02:00","Fix bad cleanup change, thanks to tapcio for pointing it out in 07b17560f
"
"e857bd9a1ce2d0513a0caede296bb7f4d7b97679","2015-07-29 10:59:02+02:00","Minor code simplification in texcache
"
"53f062b7b2422e76721ac371e2c84807cf51ab0e","2015-07-29 11:38:42+02:00","refactor: Remove some uses of gstate from SplineCommon and a fex texcache functions
"
"cde585a29a82794ede28aabd530e9112e0e0928d","2015-07-29 11:48:20+02:00","Include dependency cleanup
"
"38a31fbd8b8d67fba11b0d9d915ca6b01bb483c1","2015-07-29 12:04:52+02:00","Get rid of more uses of gstate from SplineCommon
"
"33246ffc8d5b4a75a18dafb4f278eb6a2eda7cac","2015-07-29 12:19:15+02:00","Non-x86 buildfix
"
"2430c283a51044b3247bfbb332d640fd471fd3bd","2015-07-26 22:38:40+02:00","More GPU cleaning, removing uses of GPUState.h where not needed.

Want to get rid of direct accesses to GPUState in modules that may be reused in
my future next-gen backends, that will reformat display lists into command lists that will
then be optimized and executed, out of sync with the real GPUState.

Candidate modules that may be reused in full are Framebuffer and Depal, possibly TextureCache to some degree.
"
"c8fe0b2690207f0302a21fb53ca1c982fb3d7d68","2015-07-26 22:54:18+02:00","Minor simplification, buildfixes
"
"b5f7d9346f0b05ef90d609419e0c949aa4a57d03","2015-07-29 13:08:02+02:00","Minor cleanups in GPU
"
"1c680690835555ca183ec8466cbdf0bcffee2b25","2015-07-29 14:28:40+02:00","refactor: Get rid of gstate from depalshadercache
"
"d26b74d4d69146e0baa44dffadc91427f7109540","2015-08-05 01:03:49+02:00","GPU refactor: Move accesses to gstate out of leaf functions
"
"454a363876fe057160d07e5de09e1d0ad3d563f7","2015-08-05 02:43:40+02:00","Reorganize all the gstate fetching in FramebufferCommon to one place
"
"d7c76cb1da56b9b107aa97f50c21f27daefad927","2015-08-05 11:51:24+02:00","Refactor: More work towards getting rid of gstate accesses from the framebuffer manager
"
"d7f4c47c2296ad952b0625be1fbf16b7384849c2","2015-08-05 12:13:14+02:00","Refactor: Even more getting rid of gstate access in the framebuffer manager.
"
"22e5431b1bd1f89cb3758a87265c2a74ee3e27ee","2015-08-05 13:39:05+02:00","operator precedence fix
"
"9baedbcc2a07b3bccc6d8b8d170498111b990adc","2015-08-06 17:48:34+02:00","Shorter file path in ILOG/ELOG/WLOG etc on unix-likes
"
"1c61470d0c143a3e42c487ecfc09a55fd3869d4c","2015-08-08 12:09:34-04:00","Blind Windows buildfix

Need to handle the vertex preview coordinates too.
"
"98d1e5f776380bf9f2f67b806f269bf2844f2c14","2015-08-10 03:14:05-04:00","Make PPSSPP aware of Windows 10 (mostly for the info screen).
"
"f67abeeb2e3f9e778ef4d62ea6e0e554534798e5","2015-08-10 21:09:50-04:00","Arm64Emitter: Fix FCMGE instruction encoding
"
"959e4e70c05b7a5d19a844458d3d6338374bbbbf","2015-08-10 21:12:08-04:00","Arm64Emitter: Fix FCMEQ instruction encoding
"
"ee2238df40801f35dae53ab8ab901ce1434cfad4","2015-08-11 00:22:11-04:00","Merge pull request #7900 from lioncash/arm

Arm64Emitter: Fix FCMEQ/FCMGE '2-reg misc' encodings
"
"14fd3136b1220aefc93c89be591f3984224e47d7","2015-08-15 18:27:29-07:00","Merge pull request #7897 from thedax/win10update

Make PPSSPP aware of Windows 10 (mostly for the info screen).
"
"4ddc12ce40d34801e9ab39401a7f6c357a1305d0","2015-08-16 13:58:48-07:00","Generate windows version automatically.

This allows for the same customization git-version.cpp allows.

Also, improve messaging slightly during build if git is missing, and
disallow reporting for builds generated without version info to make it
clear to users.
"
"c70d519e04e91085a3f209acf8f320bb24e1ed3b","2015-08-16 14:20:09-07:00","Search the GitHub Desktop git.exe path.
"
"8a09dedf94fe86a42e76975b220c57757897108e","2015-08-23 16:43:07+02:00","x64Emitter: add RCPPS and RCPSS SSE instructions
"
"ba15718db37a47c2b4654baf78e0ecac2669ead4","2015-08-23 09:25:05-07:00","Track hovering in GE debugger to show pixel value.

This works for texture, framebuffer, depth, and stencil.

Importantly, allows debugging the actual depth values present.
"
"720c6a30d510ef47d3dae01601e6d75164d6d27d","2015-08-23 09:27:59-07:00","Add scaled float version to GE debugger preview.

This gives a sense of scale (e.g. 24 vs 16 bit values.)
"
"50b2160711b1b6b11659b7c4293a909c065dc81d","2015-08-23 11:15:32-07:00","Show preview pixel values only when displayed.

This prevents it from showing after resume.
"
"95d4f88e01421be6018e12064830549a00608801","2015-08-23 17:52:15-07:00","Read depth values as floats on OpenGL.

This preserves the full precision better than a 16-bit value does.
"
"296173317d5f9e6b385f23c2111280e2c7e30871","2015-08-23 17:55:12-07:00","Let's also show 24-bit values in a 16-bit range.
"
"9a4c019f0811214685c354355b8cd8969518f9c7","2015-08-24 19:29:08+02:00","Merge pull request #7908 from unknownbrackets/win-version-gen

Generate windows version automatically
"
"7e1eabe5e2249cd8a84f526b9677b6a31c20b02f","2015-08-24 19:42:15+02:00","Merge pull request #7918 from unknownbrackets/gedebug-hover

Show pixel value on hover in GE debugger
"
"4ff8c8c8e092cfb8a62fe66b2612b9fce190d361","2015-08-25 01:15:02+02:00","GEDebugger: Make the pixel info box wider
"
"8487e56b4283f2f8bcd9ed394956bf1eb3f8cdfd","2015-08-23 21:34:11-07:00","Move some GLES checks to runtime.
"
"e6adf48c3839f5e88fe8b0ce0895f5cca6f02f66","2015-08-24 21:07:11-07:00","Fix a glitch when PPSSPP_GIT_VERSION_NO_UPDATE = 1.

Would cause the other version not to generate properly.
"
"d11a58b0821227defc50dd1c4b914e1326cd6dcd","2015-08-25 09:27:06+02:00","Merge pull request #284 from unknownbrackets/gles-runtime

Move some GLES checks to runtime
"
"8199b10422ba75d91760591c464783f92022909a","2015-08-25 18:16:50-07:00","Update submodules.
"
"d21357a20f2039eea18484fe92815dbf02f486be","2015-08-26 12:56:54+03:00","Ignore Windows/win-version.h created since #7908
"
"6096ef30c55b2d004ce0e29416c94f6ecd066df2","2015-08-26 14:58:21+02:00","Merge pull request #7919 from pal1000/work

Ignore Windows/win-version.h created since #7908
"
"29fc9e81a4f22a82ac5ea02f0226afb132e3ab6d","2015-08-26 13:35:27+02:00","Use the gstate.getViewport* accessors.
"
"1e8a1b801f04377a5e1cea63145254f76106f782","2015-08-26 13:39:52+02:00","Rename viewportX1/X2 etc to scale + center, which is what they actually are.
"
"a5fb4cffd5faa8ffe62fa086cdf610737e0961bc","2015-08-25 01:26:29+02:00","Failed quick attempt at Z rounding in the vshader
"
"9e18fb7e908a61f3a9b3637ff0fd92ee10ac298b","2015-08-26 13:26:08+02:00","Round Z in the vertex shader to match a 16-bit Z buffer.

However this inexplicably does still not solve the Phantasy Star issue!
"
"fee776b6e00a30b684e9d10d15c829a97416c445","2015-08-26 15:55:58+02:00","Correct scale factors for through mode depth rounding.
"
"c91b58ac8e57cc8a7efeab6463c9cc98b251e119","2015-08-26 16:07:11+02:00","Fix typo. This breaks it again though, strangely.
"
"44ce0c8dee4cad910802289acf6ba02d7ea2af7f","2015-08-26 16:07:40+02:00","Implement vertex shader depth rounding in DX9
"
"160980ee2eba850716b258488258830cd975cab9","2015-08-26 16:28:10+02:00","Properly dirty the uniform in Execute_ViewportType
"
"dedd2b60e4a66a42fe7a2609df8d536d1ba6291c","2015-08-26 17:02:07+02:00","Subtracting an offset of 0.5 works on my nVidia and I have no idea why, this makes no sense.
"
"5dbc8abd94b3727858776985cc7aa9b95b7ab3e0","2015-08-26 17:28:34+02:00","experiment: Add a different offset that unknown found during testing, plus remove rounding of through mode depth (which should already be rounded)
"
"d89da71057ee5db7401788be31f9c8cd19c4f472","2015-08-26 17:40:06+02:00","Get rid of a division in the vertex shader by precomputing the inverse.
"
"bf6aef44cd3c6034b5421249e579fed6469de0e8","2015-08-26 17:45:21+02:00","Oops, didn't finish the D3D code
"
"7e3292d275b2a38c7ab520d2eb6da7453847bbcc","2015-08-26 18:46:55+02:00","Minor optimization
"
"f3e002928584d6510b1e186dce2235f5d27c01cd","2015-08-26 23:56:38+02:00","Remove probably outdated and unnecessary color depth check
"
"39d814b2146237b6e9bcc45fd1b2427a6dbf5e21","2015-08-27 20:26:04+08:00","Add back  color depth check from https://github.com/hrydgard/ppsspp/commit/f3e002928584d6510b1e186dce2235f5d27c01cd

But in driver error.
"
"c671b075d8248eafb28a9fb51adff52d58e48a95","2015-08-27 15:13:05+02:00","Merge pull request #7924 from sum2012/win32_color_depth

Add back  color depth check from last commit
"
"fd18f145082bb1bf2281cda3607c44289bcaa40f","2015-08-27 17:58:41+02:00","Fix GT and hopefully other games that got a black screen
"
"2b7d08e3afa204e4fb45776c96c342d53e38b142","2015-08-27 18:01:00+02:00","Also apply the GT fix in D3D, doh
"
"76eacf32f4ba296ff80da9559b6e3fca8f010095","2015-08-27 18:02:45+02:00","Change the offset to 0.0
"
"a75c4d283d575362cbefeae25477dfde607de594","2015-08-27 19:28:10+02:00","GL: Check for ARB_conservative_depth
"
"afb82e3998007d277c21d3089785f072f3ed9ed4","2015-08-28 01:22:45+02:00","Add axis event listener to the analog test screen.
"
"e1d3a7421bba3522b7de112cf7659eda55c1b0d4","2015-08-28 16:51:07+02:00","Move KeyDef and AxisPos to native
"
"32617ae17ccbd8dfe57eb534b640c5ef4634de0e","2015-08-28 17:05:11+02:00","Use KeyDef for Confirm/Cancel/TabLeft/TabRight keys
"
"a57a838c93213e23909b69e0891499d30b3bee78","2015-08-28 20:51:33+02:00","Update key repeat logic to use provided DPad keys

Implements a SetDPadKeys function akin to the Confirm/Cancel/TabLeft/TabRight
keys, and uses this vector of DPad keys to decide whether a KeyInput is a DPad
key or not.  Rewrites the held-key release logic in such a way that it still
ignores the deviceId, to handle the Ouya quirk where repeated events have
deviceId 0.
"
"7b0a31ade539f9e1e90801cf79a2b12deb5d2e00","2015-08-29 17:43:09+02:00","Adjust D3D depth calculations to get them to match OpenGL as close as I can get it.
"
"488c62e5349d3d4bb8bc82aecb173deb71fe2843","2015-08-29 20:38:19+02:00","This makes slightly more sense than the last commit.
"
"e99ba8682a2da4ce0afe940e4af39fb798880256","2015-08-29 21:12:13+02:00","Merge pull request #7930 from aroulin/x64-emitter-rcp

x64Emitter: add RCPPS and RCPSS SSE instructions
"
"5f2f9160f8e95b8f7b63e31bb8ce285aa4f0a8ea","2015-08-29 21:52:53+02:00","Introduce DEVICE_ID_ANY, update operator == for KeyDef to match
"
"12884eceb99ca4b46c0d12504178ffa08fbd3e53","2015-08-30 11:30:12+02:00","Merge pull request #7920 from hrydgard/vshader-depth-round

Round depth values to 16-bit precision to match the PSP's 16-bit depth buffer
"
"96a08b33937082769bc69739cfe9cb78a0eebb34","2015-08-30 12:58:06+02:00","Quick workaround for rendering bug caused by layout bugs..
"
"33ff7e207543bd7c24a011c461a84fab88f596c1","2015-08-30 12:59:46+02:00","Update submodules. Fix in native for #7931
"
"bbde0919d8be42ff2b18754fb4eb887225568ff3","2015-08-30 13:45:29+02:00","Merge pull request #7925 from FireyFly/analog-testscreen-fix

Add axis event listener to the analog test screen.
"
"356d35e58b4edba8283e0f54168aa42afc197d5e","2015-08-30 15:07:49+02:00","Some warning fixes
"
"2509451280b274b4dbdea0e5310c0dfae8c43eef","2015-08-30 15:08:57+02:00","Upgrade project file to VS 2015
"
"58b5a74748f7e87cd5fd0a134e06665f8e67a032","2015-08-30 10:05:13-07:00","Allow audio to be enabled in the menu.

Previously, if it was disabled at first, enabling it wouldn't work - you
still would not get the audio.
"
"037b9cfdc4436c70fc7c92317c7208f1a334d0ee","2015-08-30 19:08:10+02:00","Merge pull request #7935 from unknownbrackets/ui-tweaks

Allow audio to be enabled in the menu
"
"9b94266c4ac6a282055a38b8cdc47ac37250a3ac","2015-08-30 12:56:36-07:00","arm64: Avoid overflow in imm math.
"
"9bf5d4008427e87feacdfe28bf04eb00397f61d3","2015-08-30 22:13:59+02:00","Merge pull request #7936 from unknownbrackets/arm64-minor

arm64: Avoid overflow in imm math
"
"08b340f423c5c4a09653cca345f4fd43297cffaa","2015-08-30 22:43:44+02:00","More D3D hackery: Take inverted Z in proj matrix into account.

Also, *2 breaks it for no good reason so don't do that.
"
"d4741c2d509b947bf6fb4d178a529fe542fcfc7b","2015-08-31 20:12:21-07:00","Fix indentation
"
"3d7d4b090f129f99ab9433b7efcbd3d6e0ac77ad","2015-09-01 19:13:51-07:00","Replace tabs with space
"
"ff3bb35d15753a8066efa44e74dba3747a78c469","2015-09-01 12:30:55+02:00","Merge pull request #7937 from potmdehex/indentation

Fix indentation
"
"79989d00d569854c8ec5b6642ad8009285ffac26","2015-09-02 10:16:26+02:00","Merge pull request #285 from FireyFly/linux-controller-fix

Linux controller fix
"
"da38466d29a8db045ad56d1fe00601bf43b88d57","2015-08-31 23:26:34+02:00","Minor logging cleanup on non-android unix
"
"0a6ab528eabf0ad3aac4ee4362ef9b60303591eb","2015-08-28 16:51:41+02:00","Move KeyDef and AxisPos to native
"
"5bb2f20493f4e5788c05a6053c4e41eff3b3509b","2015-08-28 17:05:51+02:00","Use KeyDef for Confirm/Cancel/TabLeft/TabRight keys
"
"06fadd5cad811c0a40a0fcb22b641c0e4e1bca3b","2015-08-28 20:55:32+02:00","Set DPad keys in native for UI navigation

Complements the update to the key repeat logic in native.  Also renames
UpdateConfirmCancelKeys to UpdateNativeMenuKeys since even before this commit,
the function also set the TabLeft and TabRight keys.
"
"a78d71029a0a7baf46f0028b13fdb4e73070fdad","2015-08-29 21:53:34+02:00","Use DEVICE_ID_ANY for the NK_BACK key in default mappings
"
"825662d06ef0c2e2f5aae92c80c1dfd1fd5e3311","2015-09-02 10:19:37+02:00","Update native
"
"86a02fed6149b0ec99badab4006fbac3f57fb7c9","2015-09-05 19:42:58+02:00","Minor cleanup
"
"3b3461e7ab864738a2cd46b809e9f47388f95af9","2015-09-05 19:57:52+02:00","Start moving compatibility decisions out of native
"
"a71be3f75f5d74f2c9ecf6f6da771568a828c5aa","2015-09-05 19:58:47+02:00","Start moving GPU feature compatibility decisions to startup

(and a single, cache-friendly flag field)
"
"f52404927773311a1643b938cb223717539eca4c","2015-09-05 21:23:58+02:00","Move more GPU feature checks upfront. Re-check when exiting settings menu.
"
"2b24f76d34437941d3d6444c39e190d3c3fe979f","2015-09-05 22:08:46+02:00","Fix some naming, remove NV_draw_texture, move decisions out
"
"5b2ffd14349fcc42690090e51f05ea6913cf4542","2015-09-05 22:11:28+02:00","Fix some naming, remove NV_draw_texture, move decisions out
"
"6934d31090a25d44b23a05b6eaa7576cc4a4f4b9","2015-09-05 22:40:11+02:00","ARB_framebuffer_object no longer lies
"
"186d624ef3de632c35ed20390f7afb8417ec5363","2015-09-05 22:40:45+02:00","Cleanup of FBO+blit flags. Requires the change in native to stop lying.
"
"67e22c29c2823c4f182e99920adff32ba88c1069","2015-09-05 23:08:36+02:00","Add another GPU bug flag
"
"0237b84efd8d5d81959daadf6e5977fd02f8c3b8","2015-09-05 23:09:06+02:00","Reduce use of #ifdef USING_GLES2 some more
"
"6566949ab5e52df54e4027201c07a826160a7f23","2015-09-05 23:33:38+02:00","Centralize some gles shims
"
"1c0158bfe682b96cbfac0950ea051497838e8f3b","2015-09-05 23:39:10+02:00","Further reduce the use of ifdef USING_GLES2 and friends.
"
"b22850720dd04e5662f98d75513e5bab7b8db9bf","2015-09-06 00:13:46+02:00","Move the CheckGPUFeatures call to the Resize check
"
"2d0635c3e66d0ee33da46f1c4bbf3264797dedb1","2015-09-05 16:28:46-07:00","Cut out a bit more USING_GLES2.
"
"fb7c71e41dbe0cf748ef2e7ed7c67d784478cd83","2015-09-05 16:28:59-07:00","Simplify NV blit logic.
"
"764539f814a125fb7d883e4e1a654af82c3d27c9","2015-09-05 16:44:17-07:00","Clean up GLES logic used in shader gen.
"
"63da81513b3ae4fcf1b7cdbd1523b8eabbce9f92","2015-09-05 16:45:17-07:00","A few more misc GLES runtime cleanups.
"
"257b64fc9e322b70643b3111cfd2f1312dd1e488","2015-09-06 10:02:21+02:00","Merge pull request #7943 from unknownbrackets/gpu-feature-cleanup

Add a couple few more cleanups
"
"f4f2a950678b9d46e3f1babe54cf9df75f72f91c","2015-09-06 10:03:48+02:00","Merge pull request #287 from hrydgard/gpu-feature-cleanup

Partial cleanup of GPU feature detection, native part
"
"43f0ec47db21283fccfdca7c5e3094153effcab0","2015-09-06 10:04:40+02:00","Update native
"
"1fd6cf1cc56c350ea0567b778d93a218c4ddd97e","2015-09-06 10:13:25+02:00","Merge pull request #7942 from hrydgard/gpu-feature-cleanup

Partial cleanup of GPU feature detection
"
"7500145ddf02bf46ddb039cd6dbd82843ab1cb99","2015-09-06 17:33:29+08:00","Blacklist some gpu
"
"c30254a40da36384bf9001d895bc6915a8ee0ace","2015-09-06 17:40:30+08:00","Rename BlacklistGPUNames to FramebufferFetchBlacklist
"
"f6050e2c374bc6b8eb77449a90a2b97aa3c15937","2015-09-06 17:42:12+08:00","oop
"
"5ff1d91323aadb723f6d039cd3ebef32c3851e24","2015-09-06 12:22:02+02:00","Add file to project that was missing
"
"e875f0a0c3932fb7b80846e78c318fa36b2b5c6f","2015-09-06 12:40:40+02:00","Some FBO checks got broken when we stopped lying.
"
"cfe4c033b928b2b583dc9d1256d254b801999c1e","2015-09-06 12:41:01+02:00","Update native with FBO bugfixes (caused blackscreen in buffered mode)
"
"3f05c8d99031931149a072c64cae51eb5635202b","2015-09-06 12:21:15+02:00","Remove usage of glstate. It will be moved into PPSSPP, and only used in PSP rendering.
"
"72ae497350d03c8a52824f226d0e9883ae3e4ed0","2015-09-06 12:23:14+02:00","Remove glstate usage except in the GPU implementation. Prepare for moving it into PPSSPP.
"
"f78c4f6f84a5beea8c82040a1c169512bc857242","2015-09-06 13:12:00+02:00","Move FBO.cpp out into PPSSPP.
"
"d822cbf60b7bdfc6de8ec50ec893ee6b6ce3e79c","2015-09-06 13:05:18+02:00","Move fbo.cpp/h from native into PPSSPP
"
"65e3d31e249ca811809121529f1971e408c154d3","2015-09-06 13:35:42+02:00","Move the GPU feature detection from gl_state.cpp to gpu_features.cpp
"
"08735b806f975f634cbe1db723bf5c85389e80a4","2015-09-06 13:36:33+02:00","Remove silly use of gstate.SetVSyncInterval
"
"3f02f9fc778b5b4c45db92a96f0a4087f947d5a2","2015-09-06 13:44:06+02:00","Move gl_state.cpp/h out to PPSSPP
"
"ab3468ea027384b6713990f7f6dd46a3ccc10134","2015-09-06 13:45:17+02:00","Move native/gfx_es2/gl_state.cpp/h into GPU/GLES/GLStateCache.cpp/h
"
"bdd09be76b7b065ff932a8aac162e54a63fb44b4","2015-09-06 14:38:15+02:00","SDL (Mac) buildfix
"
"8cd69f8a57a0576f98d5e3768537500f7770600b","2015-09-06 14:39:34+02:00","Update native
"
"b502db61c8143dc10dca4ac918fadd936f3ce4df","2015-09-06 15:25:56+02:00","Android buildfix
"
"48fbc83abe8c2228fec84028a87632b732bf41f6","2015-09-06 15:26:36+02:00","Android buildfix
"
"d2866194fde945ac702f76bbed6b3f394eaaeae3","2015-09-06 16:03:19+02:00","Symbian buildfix
"
"7c71855f5dab829d5eead3c3609144ddb034b2a2","2015-09-06 16:03:36+02:00","Symbian / Qt buildfixes
"
"9ce1822a8362e9d886b56f157bbe272dc740704b","2015-09-06 16:58:05+02:00","Merge pull request #288 from hrydgard/move-glstate

Move glstate out to PPSSPP
"
"87329ec63595738231ad7b25c1da16928cd56462","2015-09-06 17:33:08+02:00","Update native
"
"926c03574c58102ca55203dfd7fdcc6c2e64a2d9","2015-09-06 17:33:28+02:00","Merge pull request #7945 from hrydgard/move-glstate

Move glstate from native into PPSSPP
"
"18ce2262d6f93aa3715190aeb6e31b00e0eab2d4","2015-09-06 19:08:32+02:00","We don't need a third set of typed-integer typedefs
"
"1c67de0c215db0b5e0b9525fac6e199794217f1b","2015-09-06 19:10:08+02:00","We don't need a third set of sized integer typedefs, get rid of it.
"
"fdea85138c0c0866cb423841f5c5b2f5d27fdb0e","2015-08-30 15:36:53+02:00","Update project files, fix minor issues for VS 2015
"
"f77a2494ada4b92574ad50425d2408bec752cd23","2015-08-30 15:37:06+02:00","DrawTriangleSlice lambda: Capture parameters by reference, not copy, to avoid alignment issues.
"
"ccc4549fec1ab9a73501b62d2b42d886d86667f1","2015-08-30 18:04:09+02:00","Remove failed attempt at dxerr.lib workaround
"
"ae9530f3efe1cd88608785658ce68b90e66b0d71","2015-09-06 19:36:08+02:00","Merge pull request #286 from hrydgard/vs-2015

Upgrade project file to VS 2015
"
"b8699f0783b9af6b504d823b62fd8dd10f7812c7","2015-09-06 19:36:18+02:00","Merge pull request #7933 from hrydgard/vs-2015

Switch to VS 2015
"
"966e65579815a685198b732d361d61f9fa662224","2015-09-06 19:42:06+02:00","Update native (hm, why did the hash change?)
"
"a9d04666fba7f770f13d5553900fd5c973c66352","2015-09-06 19:43:25+02:00","Update ffmpeg submodule as well..
"
"08e7fbf8ea5af4e8e6833668cfabdd432735160d","2015-09-06 20:14:00+02:00","Buildfix
"
"bb96478eb1607dae11ebaa08cc2b31874cb4d88b","2015-09-06 20:14:23+02:00","Another buildfix in native
"
"1b4b60d54307cca68fd6321361f2858d3cbf63f0","2015-09-02 15:32:04+02:00","Make the Vim autocompletion plugin 'YouCompleteMe' happy by adding this config file
"
"e0f85a9c6b66d2dc88548dee340c1391c189acd9","2015-09-06 12:19:33-07:00","Native merge part 1: skip native/ in includes.
"
"f279c2a3c25ed0f346fd2acbfee3bf84df7cb9ba","2015-09-06 12:24:17-07:00","Merge remote repo native into ext/native/.
"
"dbfc5385c3f08f19433bac55e92ae0816fec91a3","2015-09-06 12:29:23-07:00","Fix line-endings in ui/screen.
"
"85533dad6e4ad9e94afa6b30174a05bbdc33daa1","2015-09-06 12:52:33-07:00","Native merge part 2: update build files.

And a couple minor stragglers.
"
"f5c1473f25fd119dc329ffeef88fdf1e42b23309","2015-09-06 12:53:20-07:00","Native merge part 3: remove old native.
"
"cf0697ec0956f93f3bc32e07b2abcad78a1dd3af","2015-09-06 22:37:59+02:00","Merge pull request #7946 from unknownbrackets/native-merge

Merge native directly into PPSSPP
"
"c20cf39d5d65983771565493146b2f150a7c3858","2015-09-07 09:56:59+02:00","Update GPU.vcxproj
"
"9ce3d27b9ddc028a1bdbe111b61431e79cbb905a","2015-09-07 10:00:00+02:00","Update PPSSPP.vcxproj
"
"fc5d4db3cd997e725851b2df9ab8eb69e41aeed7","2015-09-07 10:01:44+02:00","Update Headless.vcxproj
"
"14684328049dddc7f77ff55d1cbad6154ff713e8","2015-09-07 10:02:39+02:00","Update UnitTests.vcxproj
"
"ccda83c6ac7f9a4701b905344c96bae9320487fd","2015-09-07 09:16:56-07:00","Merge pull request #7948 from LunaMoo/windows-buildfix

Windows buildfix
"
"77f0de9b63998613f95bbe369b0efe933557336d","2015-09-07 09:19:15-07:00","Fix a few more line endings.

Otherwise these will appear dirty often.
"
"936ccbf18a9da903a30c1f58a364f595e205895f","2015-09-07 09:24:15-07:00","Fix symbolmap loading issue on MSVC 2015.
"
"d403ef6329754ce6060df652714364c3fd888edd","2015-09-07 10:27:36-07:00","Fix StringFromFormat() on MSVC 2015.
"
"9d05abda69db3c6e93318b436710062182af26cb","2015-09-07 20:59:55+02:00","Merge pull request #7950 from unknownbrackets/msvc-2015

Fix StringFromFormat() on MSVC 2015
"
"70d773f103512deaaab690b08d7478dcb4d5182f","2015-09-07 21:21:17+02:00","Windows: If touch controls are off, and ingame, toggle fullscreen on doubleclick.
"
"dbf53ab58409f92bcf0f05f51c8090c90870244f","2015-09-07 21:22:58+02:00","Use Windows' double-click threshold for detection
"
"53e80d7f540ff2d5a41016f91011b2cbadfc874e","2015-09-07 22:25:38+02:00","Fix #7940 (analog test screen). 'Debounce' doubleclicks.
"
"487f184cd9d1fe9a5e32b1a5a9976015c1a70273","2015-09-07 22:35:45+02:00","Fix #7886 (window scaling issue)
"
"766735b9b1393b422cac814fd9a201364d73a825","2015-09-06 22:12:38-07:00","Tests show PSP is case sensitive for ISO, so skip tolower()
"
"2eb45f5016f777d786a0634169cf9a7f443d018b","2015-09-07 23:20:31+02:00","Fix #7807. Don't need to read a .ini to check that it exists..
"
"dc4fb4ca7633476d4a4957515aaaecb70f8b6ec1","2015-09-07 23:51:25+02:00","Fix #7884 by fixing silly UI layout bug
"
"7dcb4c9df7a28bbbe917dc61fe3b3ec85b5bda77","2015-09-07 16:29:46-07:00","Move a loop constant substr call out of a for loop
"
"b55015992c5dbad303c113664c103e446e64e34e","2015-09-07 16:31:37-07:00","std::string comparison can be faster than strcmp
"
"8fb940373528df1d73e9049b8b9f490f989b2580","2015-09-07 16:35:23-07:00","spacing and readability: add spaces around ==, etc
"
"32bea0c0e3cdc11c3488a20e37832aec0f393d77","2015-09-07 16:36:40-07:00","Don't copy each name in a loop
"
"fe9055c98e7f25b3c1a6133dc569747ebbd1051e","2015-09-07 16:42:57-07:00","make some things const
"
"481eac71849d6fc17d47b039cc7ee61308c22a19","2015-09-07 16:44:34-07:00","more spaces around operators for readability
"
"3f36b476ad916e01f23ebedbf0f1d405b58ba316","2015-09-07 17:39:17-07:00","Add an unordered_map to TreeEntry for faster lookup
"
"aed469ef9a8009ac637c0c4b4e9a05e093a253f5","2015-09-07 18:43:10-07:00","Advance a pathLength variable instead of calling .erase() in GetFromPath
"
"4f0ec690a7004e664b0f351536e5711fc2531634","2015-09-07 18:52:17-07:00","Try to fix my whitespace changes
"
"c7d24407ee67b90f2dba45289becb2da4576fc0e","2015-09-07 18:56:18-07:00","tests show PSP doesn't tolerate extra /s at the end in an ISO
"
"1fba38fd417767ffa7d870a677bd2712b7791984","2015-09-08 20:06:53-07:00","arm64: Add TST alias to the emitter.
"
"dd548ba12c55f98266b56f2abb99a6113a0bb2d6","2015-09-08 20:07:10-07:00","arm64: Check for unordered in vmin/vmax.
"
"05c625ed0603f653f8ec51a7a4b8dd57b2493911","2015-09-10 17:17:26+02:00","Even less file I/O in menu screens, by caching 'hasConfig' flag for game info. See #7807
"
"c757931779c07d5f7ef3601a1782d1e9438e93a9","2015-09-10 18:51:48+02:00","Android: Combine the two Java Eclipse projects into one.

Should make it easier to get ndk-gdb going, which I've always had crazy issues with with library projects.
"
"62b348452d0ec60d1ef03c678d9b4e52da4eb8a4","2015-09-10 18:52:31+02:00","Add ARM64 emitter bugfix by HdkR.
"
"6ea5540d9f98c2a39376439611364e2c61cce69e","2015-09-12 10:40:20+02:00","Fix path in YCM config file
"
"33c39636c8d3f9cef25fea87cc458e3b69a9110f","2015-09-12 10:45:03+02:00","Don't use deprecated FFMPEG codec IDs. Tries to solve #7955.

Simpler alternative to #7959.
"
"1e109a3b278ec09a8ac7a85b0720cd5472d1433c","2015-09-12 11:21:54+02:00","Add unittest for ParseLBN. Seems we already parse correctly.

See #7960
"
"3301a347b3811d131c379e8457d3190df9ed31cd","2015-09-12 11:56:33-07:00","arm64: Dumb typo, oops.
"
"0c1a5324fbc3c09c86500b74680167389095e8d6","2015-09-12 11:59:05-07:00","Merge pull request #7956 from unknownbrackets/arm64-minor

Unknown's min/max unordered-float fix for ARM64
"
"a1139a4f4553ec6b7bf7ea79972610b542b297c8","2015-09-12 12:57:44-07:00","Add some comments to the thread queue handling.
"
"c03b16353721e03bb2137d0dce0848081bd3665c","2015-09-12 13:03:15-07:00","Move ThreadQueueList to a separate file.

Not reused anywhere, but just so it's a little cleaner.
"
"7a34d649111420c4ad939c91436923fc79744cdf","2015-09-12 13:16:46-07:00","Correct native project file paths.

A couple files were missing causing constant rebuild.
"
"91632a1ea59d4c11718aaec9de12e41d9c825a5d","2015-09-12 13:36:52-07:00","Add some fallback logic when scheduling dies.
"
"4815046ba63455b6030fb8f4dd919e8901a63d51","2015-09-12 15:18:19-07:00","Add back missing lib from c757931 combination.
"
"8c72cb17b1131ce73ea31d74ad0f0b707649e300","2015-09-12 21:12:11-07:00","remove the unordered_map from ISOFileSystem
"
"14bbfc8c962b0237875adc8c0a4ef2c764af8656","2015-09-13 21:07:13+08:00","Enabled some code on proAdhoc by @lightfirst

Fix #7962
"
"e1df8fc45f8e46f88cf1211fc58ce00e09d759f3","2015-03-15 19:25:34-07:00","Centralize sampling params and test optimizations.
"
"7d63a10fdd9a1338d0ad1ed74f9e118f6c0c1b47","2015-03-15 19:46:36-07:00","Centralize texture cache entry structures.
"
"71afaffc206b071b678ecf87c1b1764df3d2d364","2015-03-15 19:51:53-07:00","Pack texture cache entries just a bit tighter.
"
"536042231082e4984dfceb81294f39706641e6a5","2015-03-17 22:07:09-07:00","Defer bind of shader blend copy until after verts.
"
"a3078a6ae12255d0aa49691fbac9c4cbdb591d54","2015-09-13 06:53:25-07:00","Move late state apply after sw transform decode.

Need this so ApplyDrawStateLate() can use data from the decode.
"
"f107a2f3e5d421a610491d8e525129949011852d","2015-09-13 17:52:09+02:00","Merge pull request #7964 from unknownbrackets/tex-split-prep

Prep for splitting texture apply into two phases
"
"c7e6f051e429f3d8db17626556dd59ee943d585e","2015-03-15 19:10:33-07:00","Split the texture application into two stages.

The latter simply applies the texture.

This makes our IsAlphaTestTriviallyTrue() check correct.
"
"52c3fc221b8a4863eda95943cc93da9cacbe85f3","2015-03-15 20:05:35-07:00","Also split DirectX9's texture cache.
"
"5c233fa545cef1b38f1cfc5d849388eee4f0175d","2015-03-15 21:38:01-07:00","Add initial decoding check for uv bounds.
"
"72a73045bbbd4f7f2fc12af94b069eea4aa0595a","2015-07-19 15:59:10-07:00","Add uv range to arm64 and non-jit decoders.
"
"31106d063cae973c6f5cda1ced31e38254ba063c","2015-09-13 10:02:55-07:00","Fix MSVC 2015 highlighting for ARM/ARM64.
"
"88eea00fe436505ad4eadfdf302fb1f815bb5c7a","2015-09-13 11:09:21-07:00","Add a safety against vertcache breaking uv checks.
"
"f4df7f076e0709abe0fbee305be0211287adfcce","2015-03-15 21:38:01-07:00","Hash less of 512 tall textures when possible.

This allows xBRZ to work better on such textures, and also may reupload
them less frequently.
"
"62de281e3580a27b7fa185e21a7a0b0d1639126b","2015-09-13 11:14:51-07:00","Use texture UV range to optimize framebuf copies.
"
"93e9d6cd564c230378b42aa8a73e0f02cf53b6df","2015-09-12 19:43:02-07:00","Respect framebuffer offset in fb copies.

We need to offset the copy coordinates also, or we'll copy the wrong
thing.
"
"315ff819b4e9206d407d9c12c1dc252d25b43026","2015-09-13 21:31:12+02:00","Merge pull request #7966 from unknownbrackets/hle-minor

Move ThreadQueueList to its own file, minor tweaks
"
"d34219e0baefe5bbef3b3d31d1616d2dad2bd399","2015-09-13 23:32:51+02:00","Merge pull request #7968 from sum2012/patch-1

Enabled some code on proAdhoc by @lightfirst
"
"dff4aeb30f29a91b358d686b8390a9b36f2637fc","2015-09-13 14:52:10-07:00","Correct uv bound pointers in arm vertexjit.
"
"32331167494a25f54584fc85b8a66a4daef9ccd3","2015-09-13 15:06:29-07:00","Use fixed regs for uv bounds check in arm64.
"
"253ed9f584ef079f20b48a68a34d5c44a2949200","2015-09-13 15:49:30-07:00","Merge pull request #7870 from unknownbrackets/tex-split

Split texture application into two phases
"
"c23f51480e4d05545e06406cfb509ce8fa8f69f8","2015-09-15 22:46:51-03:00","Add option to shared libzip and libsnappy in CMakeLists.txt.
"
"69fa5b179d84a234a9bdba84079150bcea037816","2015-09-15 22:47:10-03:00","Make build_ppgeatlas.sh executable.
"
"5ec87f345920915d824af7a19e3a4d74b34ee584","2015-09-16 00:59:31-03:00","Improve detection of for shared libs in both sdl and Qt (zlib, libzip, snappy and glew).
"
"86051a8f3c534f1b0f8b9860628c05e94291e1d0","2015-09-16 01:06:56-03:00","Less derp :)
"
"91ff53527263e63987a0b2b5a21675c12a9c336c","2015-09-16 01:13:15-03:00","Fix atlastool build.
"
"1c869e460736e558d291843d5761f9b6d24648f0","2015-09-16 01:32:23-03:00","png17 must be after image, no need of libzip here; fix freetype2 header.
"
"18f452ff297e208414ea5e5ab743e5c65eb26027","2015-09-16 01:59:22-03:00","Ops fix this.
"
"17af86d4c3261ee89f22be2edaf347899e111a10","2015-09-16 09:27:08+02:00","Merge pull request #7970 from sergiobenrocha2/master

Improve detection of shared libs (zlib, libzip, libsnappy and glew)
"
"e81fa01bf0f5e75c6ab16ca1d525dc73e36bcf62","2015-09-16 19:07:25-03:00","Improve FFmpeg detection on debian systems; fix build when git is installed but there is no .git folder.
"
"906b62037a0df46982579a2cfe1988b047570b8b","2015-09-16 19:08:15-03:00","Remove debian folder.
"
"a66bc633f66b5183fac8142d5c43d460ccfe391e","2015-09-16 20:05:55-07:00","Fix nearest framebuffer check.

Broken in 454a363.
"
"a3eb31994b16f5e08f3ee4a9ef273da0c980b89a","2015-09-17 09:17:12+02:00","Merge pull request #7973 from unknownbrackets/gpu-minor

Fix nearest framebuffer check
"
"a71fbccfbc62a767e30598aea954d947df73d8d2","2015-09-17 20:29:37+02:00","Warning fixes for new LLVM on mac (warns on inconsistent usage of override)
"
"3232e46c36acbb6f9bd1a7b39fee17a6af793149","2015-09-17 22:02:15+02:00","Make debug build nearly warning free in MSVC 2015
"
"aa4a33e6dbbd903c60f61506eb4882f88ea39849","2015-09-17 22:07:22+02:00","Fix 'ANY' device keydefs (used for ui nav).
"
"9636e4cef426d24fe3a64238d6cd91493759c974","2015-09-17 22:46:59+02:00","Fix assorted key mapping issues affecting Shield and probably pads in general on Android. See #7976
"
"aeb9068fa9cb87f605d9e340a680cd7542c2d7cb","2015-09-17 16:50:00-04:00","Set ENABLE_BITCODE = NO; in generated project.pbxproj (fixes compilation on Xcode 7's iPhoneOS9.0.sdk)
"
"b368e79210e2b9ef8a38f8ca7cf3755073bc7ac1","2015-09-17 22:51:20+02:00","Merge pull request #7977 from angelXwind/master

Set ENABLE_BITCODE = NO; in generated project.pbxproj (fixes compilation on Xcode 7's iPhoneOS9.0.sdk)
"
"11387f834c35928d4c2ab117491be850d006bd64","2015-09-17 17:03:11-04:00","ENABLE_BITCODE should not be prefixed with CLANG_
"
"4bdde2af2630f638a43619cf4aa17436a691e4e1","2015-09-17 23:14:23+02:00","Merge pull request #7978 from angelXwind/master

ENABLE_BITCODE should not be prefixed with CLANG_
"
"96c4feccccf46e7ff6d1ad1e498079a0c8a1d354","2015-09-18 22:31:37+02:00","Merge pull request #7952 from KentuckyCompass/isofilesystem_map

Make ISO filesystem case sensitive and add a few optimizations
"
"6ddbe00961388b1507a30b6b773b9c86cfeb79a3","2015-09-18 23:12:44+02:00","Merge pull request #7971 from sergiobenrocha2/master

Improve FFmpeg detection on debian systems (cmake)
"
"45e3b7122b40174f176d66b1ad2a039e76992d91","2015-09-19 10:15:24+02:00","Remove some unused code (error_context, fastlist, stats)
"
"df47f41db66d38ab6d6468c088b58765e9c938fc","2015-09-19 10:21:42+02:00","Remove scoped_ptr (now unique_ptr), midi
"
"58ffa5f38ca0f89947193c0f9d0ea807f7ccbaae","2015-09-19 10:29:05+02:00","Remove file/dialog.cpp,h
"
"1a59e3820ab72f97e41455389ef6f04c8a2362ea","2015-09-19 10:32:35+02:00","Remove aabb, hamming, perlin
"
"95584a8966983b016153bd3a83af7d7a12e7357d","2015-09-19 10:35:16+02:00","Remove bits, varint
"
"efbd100dd317c06ad6e394d7a2bf695deec413f1","2015-09-19 10:36:35+02:00","Remove rapidxml
"
"ca0a6dc7f9c055a8ede1bcd99051141f1923999a","2015-09-19 10:40:45+02:00","Remove native audio mixer (Unused in PPSSPP) and stb_vorbis
"
"9fa4e65fb69598519a3a29740afa2218b83a714d","2015-09-19 10:44:13+02:00","Remove stb_image
"
"7979b6378ecc29f93ed33143e84758d2bfafd8d8","2015-09-19 10:58:50+02:00","Remove old UI framework
"
"c219793803915865ee586ac024c1642e386abdd0","2015-09-19 11:05:00+02:00","Remove the old UI texture class
"
"333ed22907ff872632aa4da5a7de4feaafd25edb","2015-09-19 11:07:52+02:00","Remove gfx_es2/vertex_format
"
"89ca8f035b1ad9e8cc6f70337afa930dd3995005","2015-09-19 11:33:28+02:00","Qt buildfix
"
"94ac552fffb1cbb47d6fa114fde25e2148ce84fc","2015-09-19 12:06:17+02:00","Another Qt buildfix
"
"a5d7b32bfe8973e9175a626433eef4c1675d7113","2015-09-19 12:25:01+02:00","MSVC buildfix, remove color.h
"
"2aba7e0373eb068aeb9e6b5b74d84edb56e435ce","2015-09-19 12:34:55+02:00","Symbian buildfix
"
"5e640a3c405e61ebe2e33d9dadd14807ae849f0f","2015-09-19 12:37:35+02:00","Merge pull request #7982 from hrydgard/remove-unused

Get rid of a ton of unused code in ext/native
"
"4c46c8aea9315ae88f1d3eeda7ae735b4d2ae3a7","2015-09-19 13:11:06+02:00","Split out the menu handling from WndMainWindow.cpp
"
"6cc7a85cde0414e67b955f06f7908f49061a63b8","2015-09-19 13:14:05+02:00","Rename WndMainWindow to MainWindow
"
"ecbef7a2ff0e4cf8ca4a03ffc4bf43f3cda4ef55","2015-09-19 14:28:43+02:00","Remove easy_file.cpp/h. Minor cleanups.
"
"9bf47514b8a0e88eb414abb63b3e54438847e324","2015-09-19 14:43:50+02:00","Assorted Windows cleanup
"
"8bedc60a9396a9f221dc94700ffd096ceb611aef","2015-09-19 15:16:31+02:00","React to window resizing in a slightly more traditional way, may help #7957?
"
"60bbe16c89e5388c41abb3778df0309880ea615a","2015-09-19 15:55:37+02:00","Make LogManager string handling code safer.
"
"4d18d478a09f082baaae168c6af98cbb9c85d943","2015-09-19 16:19:03+02:00","Sample renderWidth/pixelWidth/height once per frame for the framebuffer manager.
"
"2a99fe83e302da4c9bbd87aef24b8ac46e4b94e1","2015-09-19 16:46:07+02:00","Blackberry buildfix
"
"669508ed80e665670429d7acc34b6ba727b3eb58","2015-09-19 23:42:22+02:00","Restore some code that should not have been deleted (dupe on windows but not on other platforms)
"
"54f7a938797493559c7548903e59b647ac0680c1","2015-09-19 23:51:15+02:00","Merge pull request #7984 from hrydgard/windows-cleanup

Windows cleanup
"
"5f18390c043b0b427b1b9b46bd9f551dc666083a","2015-09-20 18:29:21+02:00","This might help #7949 (vsync was not being set correctly)
"
"1410d7f6d5116d9f4500efc3e6a94934c3246ebe","2015-09-20 19:45:36+02:00","Windows: Pause the rendering thread while switching to full screen
"
"ca4ffb5fd3c292ae2d4ec86cda6005109fe8b00d","2015-09-20 20:32:56+02:00","Minor code cleanup
"
"ea271dd61df1d7dbdfed6aa1464c2dca0e3f8058","2015-09-20 11:39:46-07:00","Kill FINAL ifdef entirely.

We've never turned off the disasm pointer and it's probably not worthwhile
at this point...
"
"d746d219e165dc287239af89f297b50a72a735c9","2015-09-20 21:00:33+02:00","Delete some outdated xp theme stuff
"
"fbb987a46f23390a6ce7faa66e125cedc852cca9","2015-09-20 21:32:27+02:00","Fix the line endings of native.vcxproj.filters

Makes further changes easier (I had to use a text editor for the last few...)
"
"2dcf50cf5e7d9ed69f4621340af14eb35dc09dad","2015-09-20 23:57:24+02:00","Fix crash toggling fullscreen from within the Settings menu.

See #7957
"
"989ec11158f638f9c6b787219d84e47ab0d6e8a2","2015-09-21 01:03:36-03:00","Fix .git/ dir detection on git-version.cmake.
"
"a973ba7009a2fb81e6b150e425bbcdf55a4ca82d","2015-09-20 21:32:52-07:00","Merge pull request #7987 from sergiobenrocha2/master

Fix .git/ dir detection on git-version.cmake.
"
"5c6753e486e356bbbd8354241babed43f6793ce0","2015-09-20 21:54:27-07:00","Correct render size on fullscreen->maximized.

We don't get a WM_SIZE event, since that is only sent on 'change'.  This
means we don't recalculate the client area size, so we get it wrong.

Fixes #7986.
"
"56e4d1dabed15037811199df456f7e4777525cfe","2015-09-21 09:13:04+02:00","Merge pull request #7988 from unknownbrackets/ui-tweaks

Correct render size on fullscreen->maximized
"
"662d5fc9dafef00cbbf2eb4d55d44f5037d27960","2015-09-21 12:46:42-03:00","Fix atlas/zimtool build.
"
"f225a64408916e7a7b084c8c213c600329e86939","2015-09-21 21:18:09+02:00","Merge pull request #7989 from sergiobenrocha2/master

Fix atlas/zimtool build.
"
"a50f04710e02deee74fe7e18e197da85cece77fd","2015-09-21 19:26:29-03:00","Fix PPSSPP_GIT_VERSION_NO_UPDATE 1.
"
"351baa101cdaa5474a87629db456675b0adf6cd6","2015-09-21 20:16:03+02:00","Some Android warning fixes
"
"44b94e550b4b8c118cf078e75662dc2fa4b5d4e7","2015-09-22 18:30:04+02:00","Fix NDK build path when building using ant. This should fix the buildbot.
"
"7e70a743ca077a9d8f480d44f731edc36b4e9ee6","2015-09-22 18:53:53+02:00","Another attempt at fixing the ant build. it must look for the native android module in ext
"
"0084b2ac30c703ee6aa638189e25286ba6e9fb3a","2015-09-22 22:50:29+02:00","Simplify FileUtil::Exists. Minor cleanups.

Might possibly help #7967 (XP) by avoiding _wstat64? That would be a libc bug though.
"
"cf63ec6d3c000c35c5d83fa57bb5bb5c9417b0a9","2015-09-22 23:02:02+02:00","Delete some duplicate code
"
"58d3137b102dfc01a426535512e388b49ebbd8a9","2015-09-23 09:48:55+02:00","Get rid of a bunch of more uses of stat64 on Windows.
"
"dc05a6516e124994acb3203bddf92d42db84658b","2015-09-23 10:25:41+02:00","Buildfixes
"
"51a5adfff221c389c697af0e3f5af1ea01f2be7d","2015-09-23 10:59:12+02:00","More buildfixes
"
"77e9ea38aacacb69dacfab73ade319ad7da4b792","2015-09-23 11:34:22+02:00","Get rid of remaining uses of stat() on Windows
"
"6fcbfabdd27a029f470a7125b010f7c298109352","2015-09-23 12:10:23+02:00","Rename fields to avoid some gross #define hack that linux is doing
"
"ec63663ad5a9ff2c7f2dd0659f3cc20f1ae293b2","2015-09-23 12:25:38+02:00","More consistent handling of resolution changes. Should help #7995
"
"102d0b9832302ee226342d52822838856a48afd4","2015-09-23 12:26:44+02:00","Merge pull request #7992 from sergiobenrocha2/master

Fix PPSSPP_GIT_VERSION_NO_UPDATE 1.
"
"c2ac933dabc5bf611ac4137cacde6a78fa3c17ef","2015-09-23 12:43:45+02:00","Do not cache translation category objects in UI objects. Fixes #7996
"
"103b73db18c016f79b0dd81132b3f271311a5417","2015-09-23 12:45:41+02:00","Merge pull request #7994 from hrydgard/fileutil-cleanup

Remove all uses of stat() on Windows. Buggy on XP with VS 2015.
"
"bd5df95a1266689101fc2c1715fb297405ef4c39","2015-09-23 13:34:23+02:00","Buildfix
"
"28b6cdf0de4c723c99a86078156db37f58b70d10","2015-09-23 17:34:16+02:00","Hack around #7991 - will investigate later.
"
"1c58cb203e8208efa15c5375d9e6d3f1b227231c","2015-09-23 17:39:52+02:00","Oops
"
"5d7c4dd7c0dd85a5a4b4c6b99b61c22e08a754c7","2015-09-23 18:15:21+02:00","Merge pull request #7944 from sum2012/gpu_blacklist

Blacklist some gpu
"
"0f4df6c67b045af00b7402e741a628c7d497afbe","2015-09-23 19:13:39+02:00","Add some missing _ARCH_32 and _ARCH_64 definitions to MSVC project files.

Fixes obscure crash in Moppi PSP Flower homebrew.
"
"b909997a86297baf3d10d32b42ad97ba03437052","2015-09-24 01:15:20+02:00","Typo correction
"
"76bcdbf1eb60e699fd7fb304bbcb350d1b155d6a","2015-09-24 01:18:41+02:00","Add missing preprocessor definitions

/fix win32 build.
"
"a7100a8f0df8863f2ddcad06cb186629486dd183","2015-09-23 21:34:17-07:00","Merge pull request #7998 from LunaMoo/LunaMoo-buildfix

Win32 Buildfix
"
"bb18fa4cd9a167e37384ebfcd3ad8db085356325","2015-09-23 23:57:59-07:00","Allow framebufs to get smaller in expected size.

This doesn't change the buffer size, but it does change the recorded size,
which effects how we calculate things about them.
"
"400b8886e64044c446c87348f09dba6d233534c5","2015-09-23 23:59:13-07:00","Use the framebuf->height for offset calculation.

This way if we shrunk the framebuffer, it'll still work.
"
"e98a31ef77d19535bec135e9abfc232a9d9700b6","2015-09-24 00:00:02-07:00","Cleanup some indentation.
"
"d8b43dd9e9f50d239d6daf1e81138e6fd9c4dd9c","2015-09-24 11:21:40+02:00","Fix #7999
"
"eed2f9d9d5c367682fbf6d524d0a231eebe03347","2015-09-25 09:47:16+02:00","Merge pull request #8000 from unknownbrackets/gpu-minor

Allow framebufs to get smaller and affect the offset texture code
"
"70cb4372c1dfea741dbe8a9ef24e6ed21db06342","2015-09-25 19:08:48+02:00","Assorted fixes to auto resolution. Fixes too low resolution and also #8002, plus notification spam
"
"4b8666dc5d302fbe78449e68367183dfdd98bdb9","2015-09-25 19:22:59+02:00","Fix #8001, although I don't quite understand what was wrong...
"
"8996f586930213b0dd8e658401b5e76c0f2b307b","2015-09-23 19:29:39+02:00","Generate save state IDs for homebrew using the elf or directory name where applicable.
"
"d2a2a115015748e954834a73da884ab3be8eb73e","2015-09-25 20:37:06+02:00","Merge pull request #7997 from hrydgard/homebrew-savestate

Generate save state IDs for homebrew
"
"c6789c28f907bc42a61dc4f93a95a0feb3138090","2015-09-26 19:23:54+02:00","Remove unused Core/CMakeLists.txt
"
"b07b002040e77d3f7b27df75710c6507e3047e9e","2015-09-26 16:01:16+02:00","Introduce 'Compatibility Flags'.

These should be used very restrictively, see comment in Compatibility.h.

Should help #8004, by disabling depth rounding in Fight Night round 3.
"
"d6a370a4c432958f65992470d40c7b2e3646f854","2015-09-26 23:39:04+02:00","Add comments to compat.ini, System.cpp
"
"9b27ffb31896ff7535f7a4ec3a622abe89bed37b","2015-09-27 10:45:12+02:00","Merge pull request #8006 from hrydgard/compat-flags

Introduce 'Compatibility Flags'.
"
"0d0b5e75a2b86d08df7214daa60a07740e038a22","2015-09-27 11:42:26+02:00","Fix silly crash in OnScreenDisplay code
"
"5ff5cf1ac7a33cac3fbd34ee8313652773c19516","2015-09-27 11:50:23+02:00","Add compat.ini as a dependency to our various build systems
"
"eb4ca0cf81b74c842eab7a3ee6f8934abcef50bd","2015-09-27 11:44:57+02:00","Add a compatibility flag to revert sceAtrac to before #6976. Makes audio work in GTA again.

Hopefully we will find a better fix in the future.

Also see issue #7863.
"
"7b3bb067ddcfa13ef376d1602bdedfec97d07694","2015-09-27 12:21:04+02:00","Update the README for 1.1
"
"857007e3f164815750b104c1db2292d077eee47e","2015-09-27 13:47:49+02:00","Apply GTAMusicFix compat flag to GTA Chinatown Wars as well.
"
"3c499fdb61c22a09474e8d80bc4a68e2f20b77f6","2015-09-27 13:51:16+02:00","PromptScreen: Disable clipping for text view. Fixes #8009 , although the dialog really need redesign.
"
"06779ba79c949fc26d371549504db23cfa6c5109","2015-09-27 13:54:17+02:00","More 1.1 README updates
"
"5fcc83721524a3038abe444c31f1d26951c49ec4","2015-09-27 19:19:04+02:00","Remove duplicate entry in compat.ini
"
"89513a35cc5ec36d5e7e8300b962122611995ebc","2015-09-27 19:19:27+02:00","Merge pull request #8007 from hrydgard/gta-music-compat

Add a compatibility flag to revert sceAtrac to before #6976. Makes audio work in GTA again.
"
"c13e639e699a83b7f4a6773c29ba082dba76f608","2015-09-27 19:58:39+02:00","More README updates
"
"d3b265a3e49ba674af55c2c372da65c61b7b83fa","2015-09-27 19:59:47+02:00","Fix render resolution race condition. Should help #8002
"
"c2f4fad56aada331bbd8dd7db99037285bab853f","2015-09-29 22:10:01+02:00","Fix another framebuffer race condition affecting #8002 (with postprocessing)

We can only wipe framebuffers at end of frame time when we react to the resolution change.
If we wipe at any other time, they can get recreated early and thus at the previous size.
"
"48db42b6be8c0f84c8d8abb02fa8c140c4de6f5f","2015-10-01 12:37:16+02:00","Respect 'hidden' flag in the homebrew store. Useful when managing it.

(For example, I just hid 'Lamecraft' because it didn't actually work).
"
"659ee2c3f6e14d57fd6b1825dfe46c845f62ba4a","2015-10-01 22:56:31-07:00","Ensure we update sampling params on tex update.
"
"d885cfa8a735ab9709fd648751f6d247165c2182","2015-10-02 12:36:00+02:00","Merge pull request #8017 from unknownbrackets/gpu-minor

Ensure we update sampling params on tex update
"
"7a01bc1de374f86fe7285832c865cc9347cd10f4","2015-10-03 18:44:23+02:00","Update lang, and improve the Android TV banner image a little
"
"b11612943b80bb92c2f7be23c59b325fbad29105","2015-10-03 18:45:13+02:00","Merge pull request #8008 from hrydgard/readme-1.1

Update the README for 1.1
"
"8ab0a3cf7c97735ddd7bcd02b4670f05d8326ccb","2015-10-03 22:56:18+02:00","Fix bug when deleting game configs from game screen - didn't mark as deleted
"
"682472c5b59f8cc3e4bafff9e0b4f5dc1a2d4edd","2015-10-03 23:18:54+02:00","Allow mono atrac3 for 'game menu backgrund audio'. Fix possible data race.
"
"50d66f9a19f6d695b69b4b60833f8f76a0dc82a0","2015-10-04 00:00:46+02:00","Workaround for #8020
"
"01b9400223197d29f91f451a694e62c91b6b6e31","2015-10-04 00:14:13+02:00","Oops, forgot this
"
"8107cb44238fe533d0fd2b2edea0486662b99c55","2015-10-04 10:08:20+02:00","Hopefully this will help issue #7969
"
"77b40c2ee40784a1968f016cd05f8b3a6c739924","2015-10-04 10:18:32+02:00","Fix #6541 where no error message was displayed when loading a non-existent save state through mapped hotkey
"
"68fc776fa7fef38588ec7296fa2ee08145ad211d","2015-10-04 10:32:15+02:00","Work around some crashes I got trying to load a GTA:LCS savestate from 2014.

However, the savestate still loads to a black screen, although background audio is working.
"
"6d5bde9748ec5815a0b092ef72bd7bd40ea7c6a3","2015-10-04 11:09:44+02:00","Fix more buggy string arithmetic in LogManager
"
"8c2ade07a1e171a8336aad4ce4ded2191eb37b1e","2015-10-01 22:39:36+02:00","Minor fix on splash screen
"
"5dc6e961684764cc51c37b68122ffda84aa5216b","2015-10-01 22:43:40+02:00","Fix key mapping defaults on nVidia Shield TV
"
"47cb288d6b35a4da725a976f52c8722a04f3ecbc","2015-10-04 13:25:22+02:00","Don't add Autoconfigure button when the device has builtin controls. Restore to Default should suffice.
"
"6785a953846b585e43299aa7441acd8b23724aca","2015-10-04 12:09:05+02:00","Fix some memory leaks on corrupt savestates
"
"490d8be4df9f8a1b47ff83b3b5db1cce9fb822e7","2015-10-04 12:24:59+02:00","Some cleanup, enable CRT memory tracker in debug builds
"
"dd8647bf3a92f23f4403a7e7be94938704a846ec","2015-10-04 15:46:29+02:00","Update version to 1.1
"
"41efe18bbac8b461b87dcaf328d371777249e4d9","2015-10-04 16:12:03+02:00","Probably fix crash on exit reported in #8022
"
"2f14ac4781fb942c3faca77a1122c07f2c9f1931","2015-10-04 16:53:07+02:00","Update lang
"
"2eec3a2d990666ffecf8940cde086011d6cc085c","2015-10-04 16:55:00+02:00","Update version to 1.1
"
"fa50afa0560952056eaad40ef5317a56624a89e3","2015-10-04 17:21:25+02:00","Fix git-version-gen.cmd to handle even releases (git describe outputs a simpler format). Update lang.
"
"5b3a75542723047bab47fb01793d500685831e96","2015-10-04 18:52:23+02:00","Update lang
"
