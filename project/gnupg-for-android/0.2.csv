"commit id","commit date","commit message"
"595f5157cb92abda0af5a6710049498fdef84f61","2013-05-09 15:22:04+02:00","readme: remove outdated pinetry testing commands
"
"9904f29c0cc2deb06d56918b76e7b82fce012e18","2013-05-09 15:26:22-04:00","since the NDK setup is min android-8, make android:minSdkVersion='8'
"
"918899e7c1427c7fc7c0188bea8f7adfa852472c","2013-05-09 15:28:31-04:00","prepare NDK builds to support x86 and other archs
"
"d7d8c222570528d52b799cf0999681370b9969b0","2013-05-09 16:29:48-04:00","ignore changing in orientation, it causes issues in pinentry
"
"bbe98f4ba88e4528a15baa8a18f463a3bc9bbf4f","2013-05-09 16:37:01-04:00","updated README with Play Store description, added link to issue tracker
"
"8cd2817aa39358d31fbcc23b8197ebef5f410078","2013-05-21 20:05:18-04:00","set target SDK version to 17
"
"85811bb705a7e780fac20a4a0aa3d4539edbe093","2013-05-21 22:07:09-04:00","update android-support-v4.jar to revision 13 (May 2013)
"
"f2235d2a09cd7ba4ee17a413324422e20cdbb5bc","2013-05-22 20:50:40-04:00","update Eclipse .classpath to add android-support-v4.jar
"
"fc777e00caa288be5423e41bb1f21d3bdb24f87f","2013-05-29 23:02:10-04:00","since we are including jars in the app, add libs/ to the classpath
"
"c0af156bdcfe36bb1618b8f1c6f46f9456b60d2e","2013-05-22 21:11:52-04:00","copy files from APG needed to implement the SELECT_PUBLIC_KEY intent
"
"5fd587cca8742f6904ab0cd62b747232dde367d7","2013-05-22 21:46:23-04:00","make app receive APG's SELECT_PUBLIC_KEYS Intent
"
"191c14b3f4d5b859c7c7a535b1bc2bf18e937aeb","2013-05-22 21:52:11-04:00","rename mList to mListView for clarity
"
"3e932a73824bcb62bebb689b98e6bc51e5e5df75","2013-05-22 23:51:44-04:00","remove CheckBox and show selection by changing background color of row
"
"8693c7c3958b11a4e3d4a157a8cf8c70973e663e","2013-05-23 16:32:01-04:00","setup APG Intent test buttons
"
"27cb190e9a0abf6cdc3219a5fb68012b1984d033","2013-05-23 16:38:37-04:00","rename keylist Activity and related files to become single, unified keylist
"
"d3b9e307ec85a2eb9bf7b5b5e2e55077b4ffbed6","2013-05-23 16:42:27-04:00","replace old ListKeysActivity with unified KeyListActivity
"
"d37ce4cf38b1569f131c5591e44ec5b23d2922bc","2013-05-23 18:00:19-04:00","convert KeyList item value to String[3]: Name, Email, Comment

This follows how the user ID is represented in GnuPG itself.
"
"da727162cac212ec6a0aefb1d8be309714b1df65","2013-05-23 20:12:27-04:00","update the gpgme submodule to the latest in git
"
"afd3c91e69358c70ef00d0802dd3be8b505fee0b","2013-05-23 20:14:40-04:00","set the gpgme debug log to the minimum level, it was making huge files!
"
"175a1ea62a7a8d94affdf33ea9082cf09203ef2e","2013-05-23 20:16:45-04:00","gnupg-for-java: expose all booleans in gpgme_key_t as Java methods
"
"4e5d7c631ed41c256c9a57b9bcaa57b412d4a76d","2013-05-23 20:20:14-04:00","implement AGP's SELECT_SECRET_KEY Intent using the shared KeyListActivity
"
"72599ace52b23605b2e9e3aabca38b838070a27d","2013-05-24 11:11:13-04:00","gnupg-for-java: remove unneeded autogenerated JNI headers

I think this are only used for C++, but right now they are just another
file to maintain while providing no benefit to us.  They can be updated in
the gnupg-for-java project once development settles down.
"
"7096d2fdb966b44bad34152c748859b9b6610bae","2013-05-24 11:55:03-04:00","gnupg-for-java: add GnuPGKey.hasSecretKey() to report if any subkey is secret
"
"f0d1b031762d921f032def263833adc81ad3a074","2013-05-24 12:42:36-04:00","fix compile warnings in pinentry_cmd_handler.c
"
"7e87f15233b156f1b495de9d11a31658e6f764bf","2013-05-24 12:45:09-04:00","gnupg-for-java: fix compiler warnings
"
"17918abc9a621147dd4e592c620f50e75165fbe5","2013-05-24 18:43:21-04:00","gnupg-for-java: also allow fetching secret keys using GnuPGKey contructor

Before, it would only search and return public keys
"
"599fcee1773ca153ba3c4c783e6c9341b108f772","2013-05-24 19:33:44-04:00","gnupg-for-java: allow fetching secret keys using GnuPGContext.getKeyByFingerprint()
"
"25636b62a4bd0466d0a0cd5af89c640136d65144","2013-05-24 19:41:13-04:00","gnupg-for-java: add listSecretKeys() and searchSecretKeys() to GnuPGContext
"
"be6f87db58bfe3095bec77d091e96f23fc20a464","2013-05-24 19:54:13-04:00","make APG's SELECT_SECRET_KEY Intent only show secret keys
"
"cf1cb71be9542a5969d2680969e6d7fc4373ccd1","2013-05-24 22:42:16-04:00","gnupg-for-java: simplify and complete get/set for Armor and TextMode
"
"e8eb6c22778ead08cd010bf7c154a9d874d97f98","2013-05-25 12:39:28-04:00","gnupg-for-java: add GnuPGData.size() to improve ByteArrayOutputStream performance

Since ByteArrayOutputStreams are used to get data out of GnuPGData, add a
size() method so that the ByteArrayOutputStream can pre-allocate the memory
needed, or at least close to the final number.
"
"702b75791e34c557b9047ba2dcba0d4e17fa40f8","2013-05-25 11:05:36-04:00","gnupg-for-java: add javaish encryption methods
"
"677cd217346fc7ba1336319278893d3e634320a7","2013-05-25 12:43:27-04:00","working implementation of encrypt-only ENCRYPT_AND_RETURN APG Intent
"
"a68c552ad77083ad3dcc4bdbf58c58ece93dc86f","2013-05-25 15:16:15-04:00","gnupg-for-java: include signature notations in key lists
"
"a0b023f33825bb1f2ee88aa4162f9161f27b5097","2013-05-28 16:36:11-04:00","add rough colorization to the fingerprint display in the key list as a trial
"
"c69a6f5ac0019c2542f72d55aa3ffed296a609d4","2013-05-28 17:35:08-04:00","make GpgAgentService only start gpg-agent when needed

gpg-agent is a daemon on its own, so it doesn't need to be wrapped in an
Android Service to keep it running. So reduce the GpgAgentService to only
launch gpg-agent then quit.  It doesn't need to do anything else. If
gpg-agent is already running, judging by the existence of its domain socket
on the file system, then don't try to start it.
"
"f5014a34af4951819549162b97a17fb9cd6c6046","2013-05-29 15:54:34-04:00","purge unused code: PassphraseActivity
"
"6f3edfe13c3537e5239a2f7ffcf13c65c791b95d","2013-05-29 21:58:47-04:00","create static GnuPG class to handle the global GnuPGContext instance
"
"198ea34fa2d03950de74da42496428ca30753fec","2013-05-29 22:00:02-04:00","use a Log TAG for each activity instead of a global GPGApplication.TAG

It seems that GPGApplication is not really needed, so this is a step
towards eliminating it.
"
"5e71dcd47629db0e399e92e6ad5358a5e1a878dd","2013-05-29 22:00:36-04:00","rename InstallTask to InstallAndSetupTask since it handles the setup too
"
"7d860e9f1fed3c886a1d03ad11197896c37ff91a","2013-05-29 22:03:08-04:00","move Context out of GPGApplication to where its needed

This is another step into refactorting GPGApplication away.  The
android.app.Application class is meant more for handling global changes of
app state rather than for global variables.
"
"029fbd7bf85e9192a0fad1e2f0099ad78e2fe996","2013-05-29 22:05:04-04:00","clean up PinEntryActivity's layout
"
"5526c5f8de84d2012e79b8d9f361b867cc3bbc2f","2013-05-29 22:11:35-04:00","move version stuff to GnuPrivacyGuard and eliminate GPGApplication

After reading about the android.app.Application class, its not really
intended to be a global state class.  It is meant to handle global state
changes, and has a specific API.  GnuPrivacyGuard.java is currently two
things combined: 1) the global app repo of variables, and 2) the test log
view.  The test log view should be split out of GnuPrivacyGuard.java.
"
"01fe3458d2cd94eea9115624d401144c9d655514","2013-05-29 22:17:12-04:00","when starting dirmngr/pinentry onBoot, also start gpg-agent
"
"349d110040f2f6feedfa9946b782f3e6a1517d03","2013-05-30 17:49:13-04:00","fix crash when displaying an empty key ring
"
"8b59d41ab3bc432b5691f6691b2a9dbdd6b3d07e","2013-05-30 19:49:28-04:00","stop pinentry from zombieing when the back button is pressed
"
"a2d3ac03feb99e8c259d303bf0ade779b452f4e4","2013-05-30 22:17:28-04:00","add file chooser for importing files (based on APG's FileDialog)
"
"a72918af7c10cf6828b79541f7f5fab387277f84","2013-05-31 17:36:18-04:00","yet another place we have to set the supported platform: jni/Application.mk

This fixes this warning:
/opt/android-ndk/build/core/add-application.mk:128: Android NDK: WARNING:
APP_PLATFORM android-14 is larger than android:minSdkVersion 8 in
./AndroidManifest.xml


Lame lame lame... so now it has to be set in:
AndroidManifest.xml
project.properties
jni/Application.mk
"
"df074d20912b49161900ed3c547c79c0499d1d3e","2013-05-31 17:39:39-04:00","Revert 'ignore changing in orientation, it causes issues in pinentry'

This reverts commit d7d8c222570528d52b799cf0999681370b9969b0.

the pinentry crashes/zombieing have been fixed, so we can allow rotation
"
"e198ca8c3b3f5fb66fe6f4629d1c1572d105274f","2013-05-31 18:17:36-04:00","run-tests.sh: clean up to use the variables that are used elsewhere in the project
"
"8f87bdcaa68c36e97e4a281207ae0cb5b9630544","2013-05-31 18:23:05-04:00","put gnupg libs first in LD_LIBRARY_PATH to make sure we get the right ones

this should make it a tiny bit harder to sneak a bad .so into gnupg, and
also avoid cases where people might install stuff willy-nilly on their
device.
"
"fd97e304d876668a959f6fe761175c7d9fbed6d5","2013-05-31 19:48:39-04:00","tame logging, its producing vast amounts of unnecessary data (closes #1385)
"
"13c7f71834712db5294c382cc5edcfebc9b1a915","2013-05-31 20:59:55-04:00","make InstallAndSetupTask dialog uncancelable to prevent incomplete installs
"
"a9f24e093cc8a6d2e471fde0ce1ea44214ecda1d","2013-05-31 21:48:48-04:00","purge BaseActivity, its an unneeded remnant of APG porting
"
"51bfde096d64146d61f925dbbd343e7dcd54f419","2013-06-03 18:55:24-04:00","do not build g13 in GnuPG, its unneeded and takes up a lot of space

g13 is used for interacting with TrueCrypt and encfs.
"
"73e5fa505021398574d172ab4b004660cfa58b2d","2013-06-05 15:25:14-04:00","fix trivial warnings in strings.xml
"
"4f7ace893a9773d9c503950d8cdb2368986638e7","2013-06-05 15:37:10-04:00","standardize on new NDK compiler: NDK_COMPILER_VERSION = 4.7
"
"d95b963a7561518e21d3eb359b7eb997533ac38c","2013-06-05 16:00:38-04:00","gnupg-for-java: standardize layout of public method declarations for clarity

I want to be able to rapidly scan the methods and see how the args differ.
"
"083cf975bbc793a1793732dedd3becf0077da2a7","2013-06-05 16:05:57-04:00","gnupg-for-java: fix gpgmeOpEncryptSign method signature in Java
"
"7d9c6ab1df0aeef8dfc180fda840f25ca4c0c815","2013-06-05 17:35:16-04:00","gnupg-for-java: implement getSigner() and getSignersLength()
"
"25df9bee2e214de3a9cbb17b2c76563283986543","2013-06-05 17:52:08-04:00","gnupg-for-java: add encryptAndSign method to force signing with encryption
"
"71436c0bd8d54a6273d533a79b5787d408ed254e","2013-06-05 17:53:46-04:00","gnupg-for-java: make encrypt() do signing if GnuPGContext has signers added
"
"6159f7916b56fee2aa0ee19824dc3e70f09aaedf","2013-06-05 17:55:08-04:00","if a signer is present in APG ENCRYPT_AND_RETURN Intent, then also sign
"
"f32aa6d00dfb5dafc0798b87e548904c3e5f3be8","2013-06-06 18:54:07+02:00","add pinentry implementation diagram
"
"efc6087cae9bbca4a2640181c36b628ea216e7b5","2013-06-08 14:38:15+02:00","PinentryActivity, SharedDaemons service: organize imports, convert all tabs to spaces
"
"1c0c6f15e2f859e3c90fdcb6155815f7acf30259","2013-06-08 14:47:31+02:00","Remove the brittle socket server for launching pinentry

Latest pinentry-android launches the activity with 'am start'
"
"a0fb6f8d097261d87f21826e313b109d218e7470","2013-06-08 17:50:54+02:00","connect to the pinentry helper via a file-backed unix domain socket

this allows greater access control, and results in cleaner code.
"
"3b53213e83e373e8124d7d896f905d7fc43d5a48","2013-06-08 18:23:56+02:00","Fetch the UID of the process requesting pinentry from the Intent
"
"9f245ca8b2fa8205e8c854485a09db93ff8f4072","2013-06-09 13:24:49+02:00","handle internal vs external pinentry processes correctly
"
"8c99428821814e2cde01974f67a4edd339ed54dc","2013-06-09 13:34:30+02:00","add comment warning about tight coupling
"
"80b05140f7e4a1989a46a7d97c46d33607b7f8fc","2013-06-09 17:40:17+02:00","refactor all JNI code to be understandable and handle errors better
"
"a13c2d9c1f7d57f8b96cdffc28eab8fb4ce230c8","2013-06-09 17:42:20+02:00","remove some debug spam and log errors to logcat insted of stderr
"
"a91ecb9dbb7b7b1e8d25115ea7d2f4f8d7171259","2013-06-09 17:44:12+02:00","remove more debug messages and printing of sensitive info
"
"61334c3e0a3ef7c3083ed455051652572c838144","2013-06-09 19:28:02+02:00","authenticate the pinentry helper's uid using SO_PEERCRED

This should always succeed, and doesn't provide any assurance we're NOT
connected to a malicious pinentry, but we check it because we can.
If it does fail, something incredibly janky is going on.
"
"57d89a8db26f9813d72040747761499307c0b594","2013-06-09 22:17:27+02:00","fix race condition when pinentry is closed before it's finished being created
"
"d6eb09fd4f09652b523af99cc99362f31f0fa08e","2013-06-09 22:18:09+02:00","fix external pinentrys

by using an abstract domain socket instead of a file-backed socket
this is because we can't chown nor chmod for different app uids
without root. we still authenticate using SO_PEERCRED.

woot.
"
"eeeeb9ef55d0f580782fa490f9cd0cb37e6827ba","2013-06-09 23:26:55+02:00","resolve pinentry orientation changing issues

we're treating PinEntryActivity as a dialog that once dismissed
(either through back button, or some other event) CANNOT be reactivated.
The fact the pinentry dialog closed is propagated back to gpg-agent.

This mimicks the behavior of pinentry on the desktop, if you kill it,
click cancel, or click the X in your window manager, it dies and gpg-agent
must RELAUNCH pinentry if it wants to get the pin again.
"
"7dba47461635a0eed38956f7e5b4f8fb3a1b846b","2013-06-09 23:34:20+02:00","disable debug spam from pinentry
"
"3466202c3d060078d112161f135214aa1e405be1","2013-06-10 15:12:03+02:00","more pinentry features

* handle canceling properly
* support informational dialogs that don't take input
* correct result returning
* display the text labels pinentry gives us
"
"a8ed6039f6757d8fc24b9568fb63c3dc6094e75d","2013-06-10 18:50:09+02:00","remove crufty code

this was left over from an earlier pinentry implementation attempt
"
"5b88c1028635612ce0a4924d8f1e03a5fe0757d6","2013-06-10 18:58:17+02:00","remove TODO

MSG_CMSG_CLOEXEC isn't needed as we don't do any execs in this module
"
"863c780f2f6d91970d2719b5067d9263a19d804a","2013-06-10 19:35:29+02:00","fix error TAG and remove unused definition
"
"e010997f3f5de5e277c39cd685c4ab1dc2061c73","2013-06-10 20:59:06+02:00","use global context variable and fetch GNUPGHOME from the NativeHelper
"
"c8693b2a0f04e86e29dd30f5ad24426fc1abffee","2013-06-11 12:07:40+02:00","bump pinentry to latest commit
"
"b3306c381adb89316ef0364ef302fb93cb74e76f","2013-06-11 15:18:16+02:00","implement two-tab pager with Public and Private keylist
"
"ae49a9c989e8ed7fdcfb2d3b9b6a7d07ebb8f321","2013-06-11 16:53:29+02:00","refactor KeyList into a reusable Fragment component
"
"43c7d859e9148753eaee5ee4fc3f6630011bc1cb","2013-06-11 18:07:56+02:00","Use modern dialog API via support lib to show pinentry

The dialog method we were using was using a deprecated API, now it's
using DialogFragment (from the support lib). The styles changes are to
ensure that pinentry appears on top of everything using this fragment method
like we expect.
"
"35988c427e2b0cd8d20fed8f0982c47b875f98aa","2013-06-11 18:21:47+02:00","put ABS in externa/ and use the same support lib version as it
"
"0af081600ee8dace6f1e797ae77dd7ad9e2754d1","2013-06-11 18:42:09+02:00","fix method name change caused by rolling back the support lib
"
"9a0352f45fe70b35c67347cb6f36d31297b07adf","2013-06-11 18:45:30+02:00","add error message to pinentry dialog
"
"0af508cdfb03a731259475b9cac717b530cdc166","2013-06-11 19:06:02+02:00","document how to use a custom GNUPGHOME
"
"f95ad62394e72f3933748159884619f045ed15c0","2013-06-12 16:35:13+02:00","fix the key import dialog

It wasn't getting results from the file picker, so I copied over the
original source from OpenPGP Keychain, and wired the result handling
into the main activity.
"
"142b5cb4da68db9d5b84e8bdc6d6ee5ecc1f4c8f","2013-06-13 11:39:43+02:00","add kdevelop project files to gitignore
"
"6da1840e9e3047e7c44cc8127188e1ead7b4bc71","2013-06-13 11:56:18+02:00","replace String.isEmpty() usage with length() != 0

.isEmpty() which wasn't introduced until ~android-10
"
"764bddca4b06602258e5977be0047914e5477a1c","2013-06-13 12:29:00+02:00","Add GnuPG account type

With this commit the 'Gnupg' account stype shows up under the
Accounts settings page.
"
"c923c693b40b29db345f7222aef46aafe18f4759","2013-06-13 11:50:19+02:00","implement gnupg keyring -> contacts syncing #1438

This commit:

* Creates a new account (push the button)
* Adds a SyncAdapter that writes the gnupg keyring into the contacts list
* Includes utility classes and xml definitions to make this all possible
"
"64eae3fc9aad75404bdb9c501b8ceeb7d40c2ce1","2013-06-14 12:05:57+02:00","format AndroidManifest and add some docs to the Auth system
"
"202f7768a5e0f052596e29cc4be133c9d66e6dbd","2013-06-14 13:42:10+02:00","add key export menu option

this isn't the most usable thing, as the 'secret key' checkbox
is sort of confusing, but it's good enough for now.
"
"ef6f29c30496792b2074cc71e4ec71911bb3d22a","2013-06-14 13:46:57+02:00","fix crash when rotating the screen
"
"d6f2daceb8d284363e476f5b2647975be11b047d","2013-06-11 14:43:05-04:00","standardize on 'basic' debug log level for all gnupg bits #1439
"
"dae9cd261adc7ef8bf2924122a00e7b76596a5c3","2013-06-11 20:26:42-04:00","add ContentProvider for searching by keyId and email, similar to APG's #1442

We can't actually make our ContentProvider work for apps that expect to use
APG's ContentProvider because we can't claim APG's permission for this. So
instead, this is just a similar, tho expanded, API.
"
"28028b8b4e5a8327c94f9302ab924098e7043635","2013-06-11 21:59:21-04:00","include Apache Commons IO for easy file operations #1455
"
"3ac032fde381972fd8919d09d22ba35ebab5bf18","2013-06-11 22:19:19-04:00","add craziness to allow file associations for .gpg .pgp .asc and .sig #1455

Thanks Dominik Schnuermann for the example!
"
"75c15850b3ca568027c168711cb9f8dcbded3849","2013-06-13 19:31:37-04:00","added a skeleton 'create key' UI that automatically gets name and email #1460

The context menus should be handled by Fragments, that's not sorted out
yet.  Currently the menus pop up, but don't do anything.  Also, this is not
yet wired up to actually create a key.
"
"c4fab5f4477fe988639ef958988a7d9ddeb35985","2013-06-13 19:36:33-04:00","gnupg-for-java: add simple method for generating a new PGP key
"
"064b7b7626685713655c92c7e40b1875936a6cc7","2013-06-13 20:33:11-04:00","run key generation in an AsyncTask with a ProgressDialog

It currently grabs the Name, Email, Comment, Key size/lenght, and expire
date from the CreateKeyActivity fields.  CreateKeyActivity needs to have
subkey handling, something like APG/OpenPGP Keychain but we sensible
defaults.
"
"25884bb96a1377c604b3199c412d01a1ddd49ead","2013-06-14 12:46:37-04:00","wire up keysize and keyExpire context menus in 'create key' #1460

You can select the size and expiration time of the key to be generated
using long-press context menus.
"
"e69a6c2beb1c499cf0248e40f496da1172042cb1","2013-06-14 13:57:26+02:00","remove hard-coded path to libpinentry, its JNI so it should be found easily
"
"7a33547ca0310dffb99bbf5f0efedd6ae9edfa31","2013-06-14 17:07:00+02:00","ui for the first run screens #1478
"
"443f240b8fea7ec9550f3c0fd1d2fcd8890489ce","2013-06-14 17:21:32+02:00","plumbing to show the first run wizard #1478
"
"6105d5563d096aabd5138149c0c5e4b76d67af2e","2013-06-14 17:45:21+02:00","only run the async install task if needed

This lets us skip straight to initializing the view and gnupg context.
"
"89233578ad86849d1ed63129772982b769eab1e9","2013-06-14 17:46:44+02:00","launch the fist run wizard when appropriate #1478

this is guaranteed to run after the assets have been installed and
the gnupg context initialized
"
"e9a2de021db2e5fe5f5e28a1ce4ccf6ec16af613","2013-06-14 17:52:13+02:00","store the contact integration preference #1438
"
"205699aeb34d509f1f3dda5e56c2bf916edca03d","2013-06-14 18:32:11+02:00","check the contacts integratation box by default #1438 #1478

this offers a better user experience, and is easily removed so
let's encourage users to use it.

full paranoid users are more apt to read and carefully choose settings
than everyone else.
"
"60d98160468a62f26720c45f67f87fa6f325b6a8","2013-06-14 20:07:08+02:00","Revert 'remove hard-coded path to libpinentry, its JNI so it should be found easily'

This reverts commit 70774a84ea229dcd37e9221abdaac9aebd1ee736.
"
"5200a8c4fe4365a214a569ea0100f5a3f2f63547","2013-06-14 19:48:38+02:00","implement key importing from a file in gnupg-for-java
"
"7d89c3cc5ff7ec97939fd1b6c8cbd567d81ef020","2013-06-14 20:09:58+02:00","file import activity handles basic import case #1478

the basic case is when it is started with no arguments, so
we assume the user wants to implement any arbitrary file.
"
"d9304805b4ddf42a4df4da72d8f069fb9288d54a","2013-06-14 20:36:03+02:00","send a message when the user clicks 'Cancel' in the dialog
"
"079b7003adf05fa7bad0d6987179a8b788f743e0","2013-06-14 20:36:44+02:00","when finished with firstrun setup, start the MainActivity #1478
"
"ef8f6d734a4e0d5b801e8d55e778a98d728813e5","2013-06-14 20:56:23+02:00","don't show the 'OK/Cancel' buttons in MainActivity
"
"3468f1e43d524b728e6441b4e5afe8d38dab346b","2013-06-14 21:13:30+02:00","setup gnupg account and contacts syncing if enabled #1438
"
"d593f5e07a8ab8e0b4b67ca4f57c20e55302a7eb","2013-06-14 21:28:34+02:00","refactor to storing the entire fingerprint in the contact #1438

using the spiffy 'standard' mimetype vnd.openpgp4fpr
"
"5ba749d45095bdd5708b72ac60209b7bae8d96ca","2013-06-14 22:00:18+02:00","skeleton for handle actions from the contact app #1438

The ContactIntentRouter catches intents sent from a user clicking
one of our actions in the People app and routes them to the appropriate
activity.

There currently are no activities, so it finish()es right away.
"
"5207b9535199aac252c861aa1b59c77d53561cee","2013-06-14 22:25:16+02:00","the wizard must be shown before we setup account syncing
"
"fd5c6f579ed652a80a2ff9b07133a584ad3b2138","2013-06-14 22:27:41+02:00","null check for gpgme's listKeys
"
"5eda4404a911fa8975371004a91a3a2eadab3fec","2013-06-14 22:44:15+02:00","add API version check for ContactsContract.Groups.GROUP_IS_READ_ONLY
"
"0a3e9160569d690308576aa635af2fda162e382a","2013-06-15 01:32:01+02:00","write PINENTRY_USER_DATA #1466

We need to pass LD_LIBRARY_PATH, BOOTCLASSPATH from our env
to pinentry'. While were at it we send over the userid.
"
"1f1b810d882360f423b7788e6c3f5f1cece2da2d","2013-06-14 15:11:58-04:00","ignore dirty for external/ActionBarSherlock
"
"0fadf71d03614dc98c3bc73fd587a8811c41b839","2013-06-14 21:17:53-04:00","gnupg-for-java: disable gpgme passphraseListener, use pinentry on gpg 2.x
"
"5c12e4e508b794ac15e8c2bbb350648955921438","2013-06-14 21:18:46-04:00","add common way to call the gpg2 binary from the command line
"
"7a1d8d74f7165cfbb504f76fb052768ad3b4fa11","2013-06-14 21:23:11-04:00","add gen-revoke, send-keys, and export-secret-keys to the key gen process, fixes #1481

In the interest in trying to automate as much as possible, we set sensible
defaults for generating a revokation certificate, uploading the public key
to the key server, and making a backop copy of the secret key.
"
"153421a1cce06858a3f668ca525cf1f0e4b51440","2013-06-14 21:23:39-04:00","create rough small and large versions of the 'create key' layout #1460
"
"7073115acbec4982798fcceb55bcffc1be2e1611","2013-06-14 21:26:24-04:00","add READ_EXTERNAL_STORAGE perm to be a good citizen

Some android distros allow you to disable automatic READ_EXTERNAL_STORAGE
permissions, and require apps to declare READ_EXTERNAL_STORAGE in order to
read from the SD Card.  Since we need that, we should declare that perm.
"
"b337b388594222a5818ec81a923756a0d3264748","2013-06-14 21:27:48-04:00","sort permissions for readability
"
"21489464f2a8f70b6c8eca5abd6d5ce7ca49ae79","2013-06-14 20:42:36+02:00","return from the keygen activity when finished #1478

this is so the flow from the first run wizard to the keygen and then
finally to the MainActivity works as expected.
"
"5c3dc653462ff0f61a3ed8e66a010f96b1925aa0","2013-06-14 10:13:33-04:00",".gpg/.asc/.pgp/.sig file handler, currently only decrypts (issue #1455)
"
"e63568a5531d8d43b0a823bd813b899e3d91bbda","2013-06-14 22:38:52-04:00","handle GnuPGException if encryption fails handling APG ENCRYPT_AND_RETURN
"
"181dc30fa5658ee84aed9523e3478a9807d9a3b8","2013-06-14 22:58:34-04:00","handling GnuPGException if decryption fails via file association

just quit and show a Toast...
"
"0eeebbaae48b50421c41d1da5a40f1c759dba27f","2013-06-05 15:24:35-04:00","APG DECRYPT_AND_RETURN Intent (issue #1442)
"
"bf0d247118104f57f80f71b406cbc66ca4d2c6cc","2013-06-17 12:56:01-04:00","purge unneeded APG Intent test buttons, they're in gnupg-for-android-tests

this basically reverts:
'setup APG Intent test buttons'
8693c7c3958b11a4e3d4a157a8cf8c70973e663e
"
"77e27ec81981afed40881bf69509ff97a65625dc","2013-06-17 12:58:33-04:00","fix my stupid mistake in run-tests.sh
"
"5c33523a83e97be8a1d14748966e9be50eed0cc6","2013-06-17 13:00:19-04:00","rename 'main.xml' to 'debug_log.xml' since that is all it does now
"
"e252530fcb85c4dc9d8b2575d6f37da73c5d77d2","2013-06-17 13:56:00-04:00","include gnupg-static by default in external/ build

on order for it to work, it needs to be done in the right order, and it
doesn't take so long, and we're using it in the jenkins builds...
"
"26422f9ec749aefd5862582ec4d42fe726333ece","2013-06-17 16:09:22-04:00","subclass Application to cleanly handle installing assets (fixes #1358)

It adds InstallActivity to show the ProgressDialog when installing.

This replaces the code that was originally in GnuPrivacyGuard.java and was
then moved to MainActivity.  Its currently an AsyncTask, but should be
replaced by a unkillable Service.
"
"343411745b5fd02a656c56f235f1a1fbdb819963","2013-06-17 17:15:37-04:00","merge all methods starting the services into static ones in GpgApplication (issue #1250)
"
"86a1c35d9d23f4e3fc809b2c55bae6c3330c9515","2013-06-17 17:17:10-04:00","move version and package name constants to GpgApplication (issue #1250)
"
"f69c15c94e61c55c11f789ed609a1ead3df82d81","2013-06-18 15:51:44-04:00","prevent NullPointerExceptions while saving state in MainActivity
"
"a6dbb13d88b7e8eb903f3869c89a220774885f7b","2013-06-18 16:02:13-04:00","if install is needed, insert it before MainActivity shows its content (fixes #1443)

MainActivity is currently gets LAUNCHER intents, so its the first to start,
except for the BroadcastReceiver and perhaps the file associations. The
installation of the gnupg guts needs to happen before anything else,
whether this is a new install or an upgrade. So before MainActivity checks
whether to run the wizard or sets up its layout, it checks whether install
needs to be run, then runs it.
"
"55a1d3ac84bf7325ca32f5f3b96d918d4616ee16","2013-06-18 16:08:57-04:00","move pidof() and kill9() from NativeHelper to Posix

pidof() and kill9() emulate Posix shell commands, so this seems like a
natural home for them.
"
"b2ed10f56f3be33635c8aa353612c72a89c64e95","2013-06-18 16:57:10-04:00","remove unneeded, unused XML layout file left over from APG import
"
"16f7d731f0c69d974c15f18b2c531be77f86a78f","2013-06-18 16:58:54-04:00","standardize the naming of the layout XML files

They are named after the classes that match them, except instead of
CamelCase, they are words separated by _ spaces.
"
"7d82e136962a93cc0f97849b56fbc5f3dbe79025","2013-06-18 17:03:06-04:00","remove unused class: StreamDisplay
"
"21caee1ea35cc59cbb884124650ca236441ffec6","2013-06-18 17:15:51-04:00","standardize class names, always include 'Activity' if a subclass, etc.
"
"9ee4efd045a83d99cdedb03292b4e19566789e8a","2013-06-18 17:16:39-04:00","move Intent request codes to GpgApplication (issue #1250)
"
"d6fce515fb7c3e96ef99405c744a3789442afdc3","2013-06-18 19:17:47-04:00","move all Activity subclasses into a single java package
"
"5ef524555f89f28bcb70a990a47d64e87359405e","2013-06-18 20:03:26-04:00","move chmod methods from NativeHelper to Posix
"
"a914a6c9225d13e994269e9713837428f87dc1f3","2013-06-18 20:03:47-04:00","remove dead methods from NativeHelper
"
"fd08aa3bcd2f21d81574e766ba5d312c06a48427","2013-06-18 20:19:27-04:00","when upgrading app_opt, delete the old existing directory first
"
"5db27af60cc5b3903bf0cc4aa04e5d0b3bae43f9","2013-06-18 21:10:22-04:00","remove bin/pinentry symlink, its unused and makes a full copy get included
"
"c660cd8133761497de1c5910c1363f1d84dd2153","2013-06-18 21:23:35-04:00","when key generation fails, quit and log stacktrace (issue #1460)

This should be handled much better than this, but this works for now.
"
"583403609ea7de946196c0b5040c00bef41bd925","2013-06-19 00:06:28-04:00","create common .conf file for env vars needed by native processes, fixes #1466

pinentry and the app_opt/aliases need to have a few env vars set in order
for them to find the libraries correctly.  this writes out a common file
that both source and read to get the env vars they need.
"
"5d5e23856de31ab8a93b95c4cde03c3df40f79b9","2013-06-19 00:54:40-04:00","update pinentry submodule to get environment.conf changes
"
"dd7a610e817984061d45d9fea281741ef3bb8d66","2013-06-19 17:56:14-04:00","when exporting the keyring, move aside existing file first
"
"170a0b16c8ff592a9ee1d14d762a0d982dbd43cc","2013-06-20 17:53:08-04:00","added intent-filter tricks from vplayer to get more files sent to gpgcli (refs #1455 refs #1454)

It seems that you need to have a bunch of different intent-filters in order
to actually receive the files in all the relevant cases.  But there are
still problem spots, for example OI File Manager does not find any app for
.gpg files, even tho gpgcli, APG, and OpenPGP Keychain all are setup to
receive them.
"
"5031ae2aeab25738877df8c31e16774612d09f07","2013-06-20 17:54:33-04:00","include file encrypted to the test key as test fodder
"
"82fb14b75fcc354c59ec698421171b3356fdb13e","2013-06-20 18:17:39-04:00","add PGP's .pkr as a supported file type (refs #1455 refs #1454)

.pkr is the Public KeyRing binary format from PGP
"
"8f4acb69120f71f4272671fbe1bdc2cb828584af","2013-06-20 19:01:27-04:00","force the gpg lib/ paths into the LD_LIBRARY_PATH, don't expect them to be set

getenv(LD_LIBRARY_PATH) does not always give us the two paths that gpgme
and the command line tools need in order to find their libs.
"
"f06925e66d3658cbd902bb454ee4800d6088134e","2013-06-21 13:53:34-04:00","remove unused file: res/menu/activity_pinentry.xml
"
"96be2990db80fac85f986a0359d3276f302b9e13","2013-06-21 13:54:37-04:00","rename XML files for an Activity's main menu after the Activity
"
"2aaf51db706470df813c29d78641e1b234f12785","2013-06-21 15:10:32-04:00","move run-tests.sh and pinentry-tests/ into assets, they are not external

external/ should be for submodules and the build system directly related
to the submodules.  pinentry-tests/ and run-tests.sh are installed into
assets/ but are not submodules nor part of their build system.  Therefore,
I moved them to assets/, and they no longer need to be installed.
"
"a15cdf97ed6fbbebf95a6c84ef79355963eced14","2013-06-21 14:07:58-04:00","add 'Decrypt File' dialog to the debug suite
"
"58d4ff7c647fb79fc6bb31bc9ac9d1f7fc0f71bc","2013-06-21 15:27:24-04:00","use bigger and hopefully non-corrupt test imagefile
"
"0a773f46e10a4673368486fdc97a03563a6bbaa6","2013-06-21 16:02:53-04:00","use canonical path for lib/ in LD_LIBRARY_PATH

Otherwise, we have a ../ in the path, and who knows what part of the
Android guts might object to that...
"
"2c5eb3b60f32a2f42bafbf01e02b18d4dccbb59c","2013-06-21 17:44:24-04:00","gpgme decryption does not currently work, handle Intents with gpg2 cmd line

This currently only handles incoming file URLs, like from ASTRO File
Manager.  It does not handle attachments from Gmail since those come in as
a stream/ContentProvider. That should probably wait until we get gpgme
decryption working.
"
"9bfb7cf184035d964f7e56b943d8c953af5d7cd1","2013-06-21 21:00:25-04:00","add associations for known file extension to MIME types

I got these from the Free Desktop standards, i.e. looking at my own
machine in /usr/share/mime
"
"c8a3b8f681eb4c0024d056f097e342bd57083b43","2013-06-21 21:23:36-04:00","switch things to use the standard file extensions

.asc and .gpg are overloaded and its very confusing, because the program
can't automatically know what kind of file it is.  If we use the PGP
extensions, we can help reduce some of that confusion:

skr = Secret KeyRing
pkr = Public KeyRing
"
"2d2f25f5a60dab1c90b3ff322fadd7ca2dd318c3","2013-06-21 21:55:37-04:00","working file encryption via SEND Intent: receives, encrypts, then SENDs

This code makes it so that gpgcli will receive arbitrary files via SEND
intents, then encrypts them to my hard-coded keyID, then launches a new
SEND Intent Chooser so the user can put the file somewhere useful.

TODO: the user needs to be able to choose who to encrypt to
"
"2f66acef09703778d667fde66eaf5c71b8bec733","2013-07-01 23:18:23+02:00","send a local broadcast after key changes so consumers can update views

fixes #1486
"
"3f4e6392b5df20e2a70ac0957a628e96a9fa9a61","2013-07-01 18:12:25-04:00","Contacts mimeType should be specific to the action, not the included data

We incorrectly thought that the MIME Type used in the Contacts actions was
describing the data, but it is really supposed to describe the action.
So we renamed it from openpgp4fpr to encryptfileto in the gpg namespace

refs #1438
"
"a8f3ce109142ebd65effd0ed800e87296c8d03d8","2013-07-02 16:54:27-04:00","when calling gpg2 command-line-style, use '--trust-mode always'

We don't yet have any concept of trust management in the app yet, so set it
to 'always' so we can actually encrypt to keys, etc.
"
"a2665770e1f3d44909527c52cce6abb171f5e4e8","2013-07-02 19:04:12-04:00","move string to XML so it can be translated
"
"7a8910d8b85bff8324e8656ff8099638cad07a8b","2013-07-02 20:34:10-04:00","handle 'Encrypt File To' ContactIntent using the gpg2 command line

This is a first step to getting the full flow working. Right now, its using
the gpg2 tool in a Runtime.exec() call, then just writes out the file next
to the original file to be encrypted.  Ultimately, gpgcli should handle
incoming streams, EXTRA_TEXT, EXTRA_DATA, etc.

refs #1438
"
"52562265da014c407ad08018006b6cf96edd6db0","2013-07-02 20:36:40-04:00","'Encrypt File To' sends encrypted file via SEND Intent, i.e. for email, etc

Use the incoming email address to generate an ACTION_SEND Intent, and popup
a chooser so that it is a seamless experience:

1) click 'Encrypt File To'
2) select file
3) choose app to send the file with

closes #1438
"
"94bc0483d2d9c08202ca565675ba975b247de569","2013-07-02 20:58:09-04:00","also refresh key list view after receiving from keyserver, refs #1486
"
"6e8ec6f93a38edb081b1b444451c9ccc25e69069","2013-07-02 21:25:16-04:00","put all of the single line Activity declarations at top of AndroidManifest

Just trying to make them a bit easier to find.
"
"2cb54224423beaebd9f354a8eef97c1606654215","2013-07-03 23:25:25-04:00","include a set of public keys as a test file
"
"d7cf37d05a70d5d18c57d834362f55711c8d01ff","2013-07-03 23:34:06-04:00","add a script to set up the ant builds, following the Guardian standard
"
"12dff7f9d501611e42ee5b4389c75a28240c8230","2013-07-04 00:49:04-04:00","in GnuPG.gpg2(), run gpg2 in a shell and output stdout/stderr to logcat

Using NativeHelper.gpg2 in a CommandThread seems to trigger pinentry fine,
so I figured perhaps its related to running the command in /system/bin/sh.
This also dumps stdout/stderr to logcat so we're not flying blind.

refs #1560
"
"1ccff3f93458456d23b4dd669a706dbb7ec9fb76","2013-07-05 16:48:39-04:00","rename MESSAGE_OKAY to MESSAGE_OK

This mirrors the Android style, e.g. RESULT_OK, etc.
"
"7a0e3f42753c23ff167781f98ffd101e5fadeed4","2013-07-05 16:08:24-04:00","split out EncryptFileActivity's process into separate methods

This makes the process a lot clearer, and makes it easier to share the
Handler and Messenger once the Fragment/AsyncTask for running GnuPG.gpg2()
is in place.
"
"246eb7f316f6b9adb545b5bc8a8ad93a359e8abf","2013-07-05 18:09:08-04:00","run gpg2 operations in a custom AsyncTask+Dialog fragment

GnuPG.gpg2() always needs to be run in a thread, otherwise it'll block
PinEntryActivity from starting up, if its needed.

fixes #1560
"
"89665be72057c12858e0cca18d5308197320debf","2013-07-05 18:09:20-04:00","add option to sign when encrypting using EncryptFileTo

refs #1438
"
"5ed51ae03a6e3b8c10bbb4afa0e4bb475737ec41","2013-07-05 18:10:45-04:00","ImportFileActivity: split out actions from Handler into methods

Just to make things clearer, especially as this class is ported to use
the Gpg2TaskFragment.
"
"1615cfffb72ffc112745b96ea92cc1a29ae1b767","2013-07-05 18:27:15-04:00","convert ImportFileActivity to use Gpg2TaskFragment and its AsyncTask

GnuPG commands need to be run in an AsyncTask, otherwise they block
the PinEntryActivity from being launched.

closes #1560
"
"9f7e9f7d2b3ce56e87aec39fc6330583546aa3d5","2013-07-08 15:59:13-04:00","CreateKeyActivity: fix bad path for exported secret key backup

refs #1460
"
"a40f610228e8c736a140f5b2e8a0e37cad3c7869","2013-07-08 16:00:06-04:00","CreateKeyActivity: do not upload to keyserver by default

Since it is hard to undo the upload, this should not be on by default.
"
"e71dfd82f01a3e420b039618a0ed3f94d3f56525","2013-07-08 16:03:17-04:00","CreateKeyActivity: create properly formatted params to fix gpgme key gen

The parameters in the 'params' string need to be in a specific order,
otherwise the ken gen process fails. gpgme does not give very specific
error messages, but since the data format is almost the same as
`gpg2 --gen-key myparamsfile`, its easy to test the params file there.

refs #1460
"
"2c3f56ff17ed76e9343d6bb306086da0ade7df84","2013-07-08 16:26:48-04:00","CreateKeyActivity: put entire gen-key process in try/catch block for clarity

This also makes it easy to do things like getCanonicalPath() without
having to add another try/catch block.

refs #1460
"
"b3854e5381a71b4b710744ffbe9b94dfe60b55ae","2013-07-08 18:05:23-04:00","CreateKeyActivity: add ProgressDialog with status messages

A simple set of messages to show what stage the process is on.  This should
be expanded to get the progress output from gpg2 to give the user more
feedback, since the key gen process can take so long.

refs #1460
"
"faad66bbd0b1ba4d5c6a06706352ee0f230bdb1b","2013-07-08 18:11:54-04:00","add 'Settings' to the main menubar, with priority over 'Debug Mode'
"
"14c0309c4745a4581ef74dd3cf6f976ffbf9a33a","2013-07-08 18:15:46-04:00","add 'Send Key' debug method for uploading to the key server

This also moves the title strings to strings.xml and adds window messages
to the prompt dialog.
"
"8b9f1f247e99f17764c211b8c2b571e0fea94ac8","2013-07-08 18:34:01-04:00","CreateKeyActivity: show gen-revoke as disabled since it doesn't work yet

refs #1372 refs #1481
"
"fac6bcbaa03013fe84c8a6b7cb2fe38a8d737ee0","2013-07-08 18:55:13-04:00","CreateKeyActivity: return result, send broadcast, & finish upon completion

This adds a method that sends the setResult() for the calling Activity,
sends a broadcast to refresh the key view, and calls finish() to make
CreateKeyActivity disappear.  It also shows a Toast if it failed.

closes #1550
"
"3d3bc73f1279a37de8a5552beb37c83b8a24af15","2013-07-08 19:42:43-04:00","use correct string for Decrypt File dialog
"
"c39a67186f7ec64839e30b816c0ee7a71220f4b3","2013-07-08 19:43:55-04:00","DebugLogActivity: ActionBar-ify the menu

reorder, add icons, and allow items to show up as actions
"
"76e0aa5ee7e78e522b94877f91404b1eee4670b3","2013-07-08 20:48:16-04:00","handle incoming .skr and .pkr files by launching prompt to import them

refs #1454 refs #1455
"
"7fab90bade05c2e6a38cf6605ac510f52340b44b","2013-07-09 17:42:12-04:00","add more official Guardian Project keys to the included public key ring

This gives people a trusted way to import our public keys, since they'll
be embedded in the app.
"
"c449d1b2d1d16408515ec4c177108a3a64aedc2a","2013-07-09 17:43:02-04:00","make DebugLogActivity's import key default to the included public keyring
"
"6badc20d889ce55e4e72ecfcb98c09cf64e970bb","2013-07-10 17:19:24-04:00","ImportFileActivity: use MIME type if file extension is not recognized

If the data coming in has a MIME type that is supported, then it should be
imported regardless of the file extension.

refs #1455
"
"28f857663294cdac6cdbc089d65c868efcf5b5e6","2013-07-11 20:03:51-04:00","add strings for the PGP MIME types, file extensions are not so simple...

for .sig, .skr, and .pkr, there is a direct mapping for file extension to
MIME type.  For .pgp, .gpg, and .asc, each file extension can map to
multiple file extensions... sigh... yes its true...

refs #1455 refs #1456
"
"e5834855b7cac1bcaf569445ca868eb3fbe81207","2013-07-11 20:10:37-04:00","don't add the setup and install Activities to the history

once the user has gone thru them, they should forget they ever existed...

Perhaps we should also remove them from Recents, I'm not sure there.
"
"578cc582ab47c75a58681c5bbf5b4ba42ec16fa5","2013-07-11 20:14:33-04:00","route known key files to ImportFileActivity, all else goes to FileHandlerActivity

Unfortunately, this can't all be nice and neat since .asc, .gpg, and .pgp
files can all have multiple contents (keys, sigs, or encrypted data). Also,
since these Activities just serve as data routers, keep them from being
added to the history and recents.

refs #1455 refs #1456
"
"48221cad8a77f42e4d6b163b77e9ea26745037ac","2013-07-11 22:00:59-04:00","add two example files for detached signatures: .sig for binary, .asc for ASCII
"
"c40f3336447ab2840f11fa4692cae6ab56ad3de7","2013-07-11 23:37:17-04:00","make GnuPG.gpg2() return the POSIX exit value for testing success/failure

This lets us do quick and dirty things like 'gpg2 --verify'
"
"3ca443cc85c7751d36b37c83527631c7c7d58202","2013-07-12 00:05:00-04:00","add basic VerifyActivity to check .sig files

This currently just works with file:// Uris, and probably only files that
come in via the .sig file association in AndroidManifest.xml.  This is just
a rough version to get the ball rolling. Once GnuPGData can handle files
and streams directly (#1581) then this should be converted to always use
Streams, e.g. by using getContentResolver().openInputStream(uri)

refs #1569
"
"86acf61130964c41909d04cf143e8896d3f132f3","2013-07-12 00:59:35-04:00","verify .sig and .asc detached signatures, and prompt to view file if good

This verifies the .sig and .asc '--detach-sign' format of files, provided
the signed file is present as well.  If that's successful, then it'll
prompt the user to view the file or not.

refs #1569
"
"ca9e364ead20e856d30fa40d63318efe62ede14f","2013-07-12 11:15:36-04:00","add Transifex config file for the 'tx pull' tool
"
"cc060a4cdb9299f9c633fe7e20a4fdc4c6a9cb98","2013-07-12 11:16:52-04:00","escape ' quotes in strings.xml so that they show up in the interface

Otherwise, they get stripped out by something.
"
"7dcdcf64f1ecb96002fc40bcc2fb789af2ed653f","2013-07-12 11:24:13-04:00","remove \n from strings.xml, they usually break in translations

The only formatting character that should be included in a strings.xml
string is \' for adding quotes and printf-style format strings.  Newlines,
\n, tabs, etc. should not be included since they are usually messed up in
the process of translating.
"
"eeb565c8f3255641b433f5207f7c6beb90972f74","2013-07-12 11:36:49-04:00","fix warnings in first_run_welcome_activity.xml, including unneeded TableLayout
"
"c673bc4532e38e2e4c616728f5d86db7264d2917","2013-07-12 11:39:27-04:00","standardize on 'Gnu Privacy Guard' as the name of the app
"
"75bb738b2a1604bf791e9526aa7db46cc48bb6b9","2013-07-12 14:24:52-04:00","gnupg-for-java: use POSIX FILE streams when creating GnuPGData for files

Previously, GnuPGData(File f) would load the entire contents of the file
into memory, then pass a memory gpgme_data_t to gpgme.  This is horrible when
working with large files or machines with limited memory.  This patch uses
the gpgme function for creating a gpgme_data_t from a POSIX FILE stream.
"
"fe5bc05eb340a4c06f33794ace3e0c2685073cee","2013-07-12 16:41:18-04:00","add the gpg2 exit value to Gpg2TaskFragment results
"
"307fc24bb973d1679fa8ae9946e893f740e89b2b","2013-07-15 20:57:03-04:00","gnupg-for-java: expose gpgmeOpDecryptVerify as a proper Java method

Currently this will throw an Exception if the verify fails. We need to
implement gpgme_verify_result_t in Java, like GnuPGGenKeyResult.java in
order to get useful information about the verification process.

refs #1567
"
"8b549d404f58d989980786a2b94addc41ee545e5","2013-07-15 21:02:05-04:00","add methods to create PGP ASCII pattern matchers to detect ASCII contents

A .asc file can be a lot of things, so we need to look at the embedded
headers in order to see what the contents is. This will be very heavy on
large files, but since we're aiming for ease of use, I think its
worthwhile to include.  Plus, large files should be binary, not ASCII.

refs #1569 refs #1455 refs #1456
"
"0c41eec441a5109d36815876c3e67a3f5af94a46","2013-07-15 21:05:20-04:00","make EncryptFileActivity receive files via an Intent

This allows other internal Activities to call it to handle encrypting
files.

refs #1454
"
"1f1ccc3dd6c03001de90af5e5e3ae90521046ea7","2013-07-15 21:21:03-04:00","add DecryptActivity to handle decrypting anything we throw at it

Currently this only supports file:// Uris, but it is intended to handle
all Uris once we get InputStream/OutputStream support into GnuPGData.

refs #1455 refs #1456 refs #1581
"
"e9e10b69a56ad2562f0bb1b4c2adce957b8d2f1a","2013-07-17 15:38:51-04:00","DebugLogActivity: use monospace font for debug log view

I also ran the code formatter on it, hence the top change on text/textColor
"
"fea6c02d1822b26677684a0bf748082d0977b347","2013-07-17 17:52:50-04:00","FileHandlerActivity: set up as central router for incoming Intents

* all ambigious Intents should be handled by FileHandlerActivity
* should be renamed to IncomingContentHandlerActivity
* all clear Intents go directly to the right Activity and skip this one
(e.g. .sig, .pkr, .skr files and the OpenPGP MIME types)
* this also handles non-PGP files and content which the user intends to
encrypt and/or sign

refs #1454 refs #1455 refs #1456 refs #1577
"
"77f48cc20587048ad84612f13686c35b2b105d2f","2013-07-17 18:02:36-04:00","route content:// streams named *.pgp, secring.gpg, pubring.gpg to Import

* .pgp files are supposed to be application/pgp-keys
* secring.gpg and pubring.gpg are keyrings from ~/.gnupg
"
"979d16fffd4610dfaae54f8f765f3fcccd6dc679","2013-07-17 18:08:08-04:00","route files named encrypted.asc to be decrypted, K-9 turns PGP/MIME into it

K-9 turns PGP/MIME messages into an encrypted.asc attachment, so route this
to be decryptable and viewable.
"
"312207f2e6b9274851213349794b304b78fca84e","2013-07-17 18:09:01-04:00","for now, route all application/pgp-encrypted data thru FileHandlerActivity

Once the encrypt Activity gets fixed up, this IntentFilter should be in
that Activity.
"
"534c05ef0b1279f7de43a3ce482fd4f850b6742e","2013-07-19 18:04:16-04:00","DecryptActivity: always write plain data to private file

This used to write out the plain file next to the encrypted file.  Since
gpg now makes it easy to VIEW a encrypted file, there is no need to decrypt
in place.  Instead always decrypt to the app's private files/ storage. This
way it won't be written out to the SD card as plain, etc.

It will then be shared to other apps via a ContentProvider.  Once we get
streams working in gnupg-for-java, then all of the actions will happen with
streams rather than files.
"
"d88b0044af135312fd66847b25ce95784f5b72ab","2013-07-19 19:05:30-04:00","gnupg-for-java: reduce the keylist return to the bare minimum for speed

This makes the keylist functions return much less information, so hopefully
it will speed things up.  There should be an option for getting the full
info when its needed.

refs #1621
"
"d2d7fa17622771b706babdd2db9d2f101ba29a94","2013-07-22 15:08:56-04:00","claim openpgp4fpr: URI scheme and launch dialog to receive from keyservers

GPG now registers to handle the 'openpgp4fpr:' URI scheme as a way to
direct OpenPGP 4 fingerprints to GPG for it to handle them.  Currently, it
prompts the user to download the key with that fingerprint from the PGP
keyservers.

openpgp4fpr:5E61C8780F86295CE17D86779F0FE587374BBE81

refs #471 closes #1594
"
"00af457e8dd75e1170c3638072c29717ab64397c","2013-07-22 15:10:29-04:00","add '_format' to any string name that includes a String.format() in it

This marks the string to translators as a format so that they know they
need to leave the funny formatting bits intact.
"
"d153707f41457d423d77d9ce6f2f81289d4fad1d","2013-07-22 15:41:51-04:00","show Toast status info when working with openpgp4fpr key importing

This is a quick and dirty way to show status info.  This should really show
the imported user's page in the contacts app.

refs #1594 refs #1625 closes #1626
"
"8ae9a154e402390d7cef6383f68131025aa63e0f","2013-07-22 19:28:15-04:00","add ContentProvider to read from private files, to sent via VIEW Intents

Currently, the data is decrypted to the private 'files' directory inside of
the app.  This is better than the SDcard, but it is still writing it to the
disk, which is less than desirable.  This is a temporary step towards
having data go from encrypted to viewable without touching the disk. Full
support for Streams needs to be implemented in gnupg-for-java (#1571) before that
is possible.

This commit adds the new PrivateFilesProvider, which uses GRANT_URI perms
to grant read perms based on the selected receiver of the VIEW intent.

refs #470 refs #1571 refs #1454 closes #1455 closes #1456
"
"75c16d7ee66df29a6022302d8bf98246aaff495e","2013-07-22 19:30:16-04:00","once DecryptActivity receives that the viewer is done, delete the tmp files

refs #1455 refs #1456
"
"aab4eab164db24390679e86265f04d72a15a5a8d","2013-07-22 19:44:38-04:00","do NOT set noHistory on Activities that might pop up PinEntryActivity

When noHistory is set on an Activity, it is immediately killed when any
other Activity pops up.  In this case, PinEntryActivity will pop up when a
password is needed.  When that happens, the noHistory Activities get
killed, which breaks the onActivityResult() handling.

Instead, these Activities should just be sure to call finish() to remove
themselves from the history.
"
"4a806faf191b4132f99e95bfad15b72a65b16e59","2013-07-22 20:21:51-04:00","ASCII data+signature test file (gpg --armor --sign icon.png)

This is a single file that contains the signed file itself converted to
base64, as well as the signature.
"
"25cc00af6083755d05817b15524ddaec31a32837","2013-07-22 20:34:25-04:00","a test file that is encrypted but not signed (bad idea but we need to test)

This is just to make sure that this format will work properly.  Always sign
your files when you encrypt them!
"
"537eeff190fe7bba90841011901ae505ead16e8d","2013-07-22 22:02:17-04:00","include Guardian Project APK signing key as test file for gpgsm, etc.

Its an X509 certificate exported from keytool. It can be imported by doing:

gpgsm --import /data/data/info.guardianproject.gpg/app_opt/tests/android-signing-key.p12
"
"a326b684d0e432917b537e6661b51076bd0ff233","2013-07-22 22:29:04-04:00","create GpgApplication.sendKeylistChangedBroadcast() to centralize method

Just a clean up to put this very long, strange line of code into a reusable
static method.
"
"d091ac026d67088134b1a3537697471446d5ec64","2013-07-23 00:18:51-04:00","EncryptFileActivity some misrouted Intents might have null extras
"
"c77d9dae73ea47bd9e6833217fcdd293299fb5f7","2013-07-23 00:29:48-04:00","kludge to prevent FC when an Exception happens in onPostExecute()

This should be handled better, probably. It seems like this happens when
the Activity starts then stops to quickly, usually due to a problem with
the Activity that is supposed to handle the ACTION_VIEW after the crypto
action is complete.  This stuff should be replaced by a real Service with
a Notification.

refs #1482
"
"bdaa23201174dddfde2458024a3e80200c97ffa6","2013-07-23 00:54:11-04:00","handle .key file type as application/pgp-keys

On Samsung Galaxy Player 5.0 running Android 2.3.6, it converted a .pkr
file to a .key file, and labeled it 'application/pgp-keys'. This happened
in the Gmail app, but Astro File Manager did not know about the .key file,
so we need to manually claim .key like the other extensions.

refs #1455 refs #1456
"
"baee1ee36d8399a66717729bc2d14644693eec47","2013-07-23 17:14:29-04:00","handle EXTRA_TEXT in a SEND Intent by writing to txt file then encrypting

This allows you to send arbitrary text to GPG for encryption and signing.

refs #1454
"
"7b2d45093da59d5145c4beafcfb699c220d76c27","2013-07-23 17:54:04-04:00","if EncryptFileActivity is started without a key/email, use the default key

The default key is the first secret key, and if that doesn't exist, the
first public key.  In the future, gpg should prompt the user for which key
to use.  This is really just placeholder functionality until there is a
proper key chooser.

refs #1633
"
"eb09c91b5b094f2310ed969cca038175911ff63d","2013-07-23 21:34:22-04:00","PrivateFilesProvider: add debugging logging for the unsupported methods

This allows us to see what the apps that use this ContentProvider are
asking for.
"
"bb242a858714409d4cff3764240e27e628bdd945","2013-07-24 16:06:36-04:00","accept *.bin files, some email clients name PGP attachments that way

refs #1455 refs #1456
"
"e77602139906631945dad6e6ee7f2cdcb1c4bacf","2013-07-24 17:19:58-04:00","EncryptFileActivity: 'Encrypt file to' in Contacts does not include URI

When starting a file encryption from the Contacts app, it will not provide
a URI to the data, the user will be prompted for that later.
"
"07eb38ff6e5edbf3cac77428fb8c40843d28d4e4","2013-07-24 17:23:26-04:00","FileHandlerActivity: harden to make it accept all sorts of Intents

The data can arrive in a wide variety of forms, so there needs to be a lot
of checking for nulls, and trying to find stuff in multiple places.

refs #1454 refs #1455 refs #1456
"
"af244c858cdd06b9231f91ac22060af6b3bc2f07","2013-07-24 17:37:27-04:00","every Activity should have a label, i.e. 'android:label'
"
"077137b41d75be0e0ca6f68f1ef0c5cf5a1ac383","2013-07-25 17:04:44-04:00","EncryptFileIntent: handle encrypting random files coming from SEND Intents

* This also adds the logic to finish() this Activity once the receiver is
finished with it.  If its a file in the private files stash, then it'll
delete them when the process is done, since these are tmp files.

* The resulting encrypted file is shared using a file:/// URI because most
of the apps that will receive this only seem to work if its a file:// URI
and not if its a content:// backed by a stream (Dropbox, Gmail, K-9...)

closes #1454
"
"0d8636319ca003ae5491ece387eafb718ad4212f","2013-07-25 18:52:42-04:00","use targetted mimeType for VIEW catch-all to avoid catching Contacts types

GPG's Contacts integration uses the app-specific type:
vnd.android.cursor.item/vnd.info.guardianproject.gpg.encryptfileto
FileHandlerActivity should not catch that type, instead ContactIntentRouter
should be the exclusive handler of it.

refs #1454
"
"ed1281a2edc59021b259d71b64e9f77d8fb7bf8a","2013-07-25 19:54:38-04:00","handle receiving images from galleries as best we can.

Its not a great situation, since the main Google Gallery will show files
that only exist in your online store as a regular image.  But when you try
to share them with a SEND Intent, GPG cannot access the data...

#refs 1454
"
"fac19f58f15a24aeb442d2d176609a7d679e899a","2013-07-26 14:08:11-04:00","Android's scheme matcher is case-sensitive, add 'openpgp4fpr' variations

Just a few guesses at the most likely variations of case that someone might
think up.  Also, it turns out that QRCodes have a special all UPPERCASE
mode which makes the QR Code have less data, and therefore larger blocks
which are easier to scan.

refs #1594
"
"e650d0d269b3452df8f17796d3dcd012d2428523","2013-07-26 15:44:14-04:00","handle Exception when getKeyByFingerprint() does not find a key

If you give GnuPG.context.getKeyByFingerprint() a fingerprint to a key that
does not exist in the keyring, it throws an Exception.  Treat this
Exception as a message that there is no key with that fingerprint in the
keyring.
"
"9088e51e61be69a882f9c9537de47d9bf9a6ccdb","2013-07-26 15:46:37-04:00","if EXTRA_TEXT is <200 and has a fingerprint, launch ReceiveKeyActivity

This lets you roughly select the text with a PGP fingerprint in it, send it
to GPG, then have GPG --recv-key from the keyservers.
"
"c8bd1c4dc735da01dc347013b241d826284c86a6","2013-07-26 16:51:37-04:00","set version to code 2 name 0.2 for release

Finally!
"
"406c4af98bbd801dca3557cc6ca7af9819f6a15c","2013-07-26 17:09:41-04:00","add our standard ./setup-ant.sh script and update build instructions

Also, remove the spaces from app_name since this is used all over the place
including as the name of the .apk.
"
"984c77863a95a953307107a40545f023d78b4e17","2013-07-26 17:10:00-04:00","update README for upcoming release
"
"99a774bd4a4e6646e98400f987f3fea8bb39ca74","2013-07-26 17:54:34-04:00","add script for making release builds
"
"c7a432e55fada3d204acf7ae8199b596c23108e6","2013-07-26 17:57:50-04:00","switch ActionBarSherlock submodule to use https:// URL

The git@github.com: URL requires ssh access, so it doesn't work for the
general public.
"
"b15f4f9fb7d28734797a2db11dbee1d8d9269a2c","2013-07-26 19:29:37-04:00","fix final signing step in release build script
"
