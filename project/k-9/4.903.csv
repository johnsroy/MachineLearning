"commit id","commit date","commit message"
"1f5e1660a8efb035b64f5e2424e39e9c08ae9415","2014-01-21 17:23:02-05:00","build.xml improvements

Modify -pre-bump-check so that it verifies that there is no
existing git tag for the new version.
"
"1091e7af9922510fcb2fdcc5c4bed34e18c7739f","2014-02-24 17:23:18-05:00","Eliminate non-working text replacements

All \r and \n codes have been replaced with <br />, so the patterns in
these replacements don't match anything.

This problem has existed for some time -- since commits 1ea27d7 and
e12dd32.

No attempt is made here to reimplement the replacements because users are
now used to the current behavior without much apparent complaint, and such
replacements are never perfect and can occasionally fail to work as
desired without additional tweaking for special cases.
"
"871ee1cc6cbc23b82fd984219fbe1a0b9568c149","2014-02-09 22:02:23-05:00","IMAP authentication improvements

Changes:

Implement the PLAIN SASL mechanism.  IMAPv4rev1 assures its availability
so long as the connection is encrypted.  The big advantage of PLAIN over
IMAP 'LOGIN' is that PLAIN uses UTF-8 encoding for the user name and
password, whereas 'LOGIN' is only safe for 7-bit US-ASCII -- the encoding
of 8-bit data is undefined.

(Note that RFC 6855 says that IMAP 'LOGIN' does not support UTF-8, and
clients must use IMAP 'AUTHENTICATE' to pass UTF-8 user names and
passwords.)

Honor the 'LOGINDISABLED' CAPABILITY (RFC 2595) when the server declares
it.  There's no sense transmitting a password in the clear when it is
known that it will be rejected.

No attempt is made to try CRAM-MD5 if the server doesn't profess to
support it in its CAPABILITY response. (This is the same behavior as
Thunderbird.)

Extract code from ImapConnection.open into new method
ImapConnection.login.

Extract code from ImapConnection.executeSimpleCommand into new method
ImapConnection.readStatusResponse.

Related issues:  6015, 6016
"
"1d1b14da21cd4dd08264cf2d98fa7464605128a9","2013-10-28 18:24:53-04:00","Fix ImapStore$ImapConnection.authCramMD5()

See Issue 4492

This method made way too many assumptions about server responses and
should not have been attempting to read and parse them.  That should be
left to ImapResponseParser.
"
"6f49ebd975a145734bc5705b34056228ce5a2161","2014-02-24 11:58:30-05:00","Permit UTF-8 names & passwords with CRAM-MD5 authentication

CRAM-MD5 (RFC 2195) permits 8-bit data but does not identify its encoding.
Since ASCII does not permit 8-bit data, this commit changes the encoding
to UTF-8.

There is an expired Internet-Draft that proposed that the RFC be changed
to explicitly require UTF-8 encoding of user names and shared secrets.
(But then there's also an expired draft proposing that CRAM-MD5 be retired
to historic status.)

Instead of CRAM-MD5, a better option for users is the SASL PLAIN mechanism
(within TLS) which explicitly permits UTF-8.
"
"3877f58515bb6a5fd2c9cfddeaa59232a65caf94","2014-02-24 11:58:41-05:00","(partially) Fix IMAP LOGIN

Previously, the user name and password were being transmitted as IMAP (RFC
3501) quoted strings.

The problem is that quoted strings are only permitted to carry 7-bit
(ASCII) data, whereas user names and passwords entered in K-9 Mail may not
be ASCII, so K-9 was violating the RFC by sending them as quoted strings.

The solution is to transmit the credentials as IMAP literal strings, which
are permitted for user names and passwords, and which permit the
transmission of 8-bit data.

This is only a partial attempt for fixing the LOGIN command for users with
non-ASCII credentials.  The problem is that IMAP permits 8-bit data for
user names and passwords (if transmitted as literals), but the RFC says
nothing about the character encoding for 8-bit data.  This commit encodes
them as UTF-8.

The RFC author's comments on the subject:
http://mailman2.u.washington.edu/pipermail/imap-protocol/2008-February/000822.html

Ideally, users should avoid the LOGIN command and use the SASL PLAIN
mechanism (within TLS) which explicitly permits UTF-8. (K-9 Mail always
chooses PLAIN over LOGIN, when PLAIN is available.)
"
"26491676faee56011d9c255d78f0565e4b14f907","2014-02-22 17:18:31-05:00","Retrict use of AuthenticationFailedException

In AccountSetupCheckSettings.onCreate(Bundle), the account settings are
checked.

If an AuthenticationFailedException occurs, A dialog saying 'Username or
password incorrect.' pops up.  We don't want to say this if the cause is
not related to an incorrect user name or password.  Instead we want to say
the more generic 'Cannot connect to server' which pops up for other
exception types.

This commit attempts to eliminate the use of AuthenticationFailedException
in instances where it could not be due to 'Username or password
incorrect.'
"
"64fd04ece2a44815fe7e48c5a4017f0b658ef270","2014-02-22 17:51:18-05:00","POP3 authentication improvements

Changes:

Extract code and create login() and authCramMD5() methods.

Implement the SASL PLAIN authentication mechanism.  Its primary benefit is
the explicit support for UTF-8.  If the user has configured 'PLAIN'
authentication, then SASL PLAIN will be used, if available, otherwise
login() will be used.

Implement POP3 APOP authentication (issue 3218).  If the user has
configured 'CRAM_MD5' authentication (a future commit will change this
user option to a localized string 'Encrypted password'), then SASL
CRAM-MD5 will be used, if available, otherwise the availability of POP3
APOP will be checked and used (per RFC 2449, there is no APOP
'capability').

Extend getCapabilities() to check for available authentication methods by
sending the 'AUTH' command with no arguments
(http://tools.ietf.org/html/draft-myers-sasl-pop3-05).  This never became
a standard, but there are servers that support it, and Thunderbird
includes this check.

The SASL PLAIN and CRAM-MD5 authentication methods are not attempted
unless the server professes to have the appropriate capability.
(Previously, CRAM-MD5 was tried regardless of capability.)  No check is
made for the USER capability prior to use of that method.  All this is the
same behavior as in Thunderbird.

Eliminate the testing for capabilities in cases where the test results are
never used (PIPELINING, USER).

Change when getCapabilities() is called.  It is called once upon
connection.  If STARTTLS is negotiated (POP3 STLS), then
getCapabilities() is called again after the connection is encrypted (and
the server is authenticated), but before user authentication is attempted.
"
"f24ac67e4dec37b97311b9c376a73a08d1d49acd","2014-02-03 16:30:10-05:00","Ignore case for SMTP extension keywords

The server is permitted to use mixed case keywords.
This converts them to upper case on receipt.
"
"dc9720ca13aaab7fa7f6196f376c495b704df2d2","2014-02-13 17:18:16-05:00","Use localized strings for authentication type

AUTOMATIC = 'Automatic'
PLAIN = 'Normal password'
CRAM_MD5 = 'Encrypted password'

SMTP also uses LOGIN.  No localized text was associated with that because
a future commit will remove that option.

(The text is similar to that of Thunderbird's)
"
"90fedf7125b2d644e57d3e8f6cd22d23fa075220","2014-02-22 18:52:20-05:00","Eliminate the LOGIN authentication option from SMTP

The LOGIN option is no longer offered to users as a choice.  This does
*not* eliminate the SASL LOGIN authentication mechanism.  Any pre-existing
LOGIN setting or any imported LOGIN setting will still be recognized.  In
all cases, a user setting of either 'Normal password' or 'LOGIN' will
result in the SASL PLAIN mechanism being tried first if available,
otherwise SASL LOGIN will be tried if available.

This mirrors similar behavior that exists for IMAP.
"
"c7e46faf0a783e0d75d31a91ed0b213d8783ade9","2014-02-13 19:43:24-05:00","Simplify code with better use of enum ConnectionSecurity
"
"23f8d53178fcfcf898bc3fc7ebc317c2f0afd4d2","2014-02-09 23:08:36-05:00","Use Transport.decodeTransportUri and Transport.createTransportUri
rather than manually creating the URIs.

This mirrors behavior that occurs in AccountSetupIncoming.
"
"f7d397ea0913bb3a22bf44377a850fc8b5ab7f4d","2014-02-10 16:38:13-05:00","Eliminate SMTP AUTOMATIC authentication

The server settings for IMAP and POP3 have no such AUTOMATIC setting.
(Nor does Thunderbird have any such setting.)

The AUTOMATIC option is no longer offered to users as a choice.  A
pre-existing setting will continue to be honored, but only to the extent
that it doesn't result in insecure password transmission.  Users in such a
situation will get a 'Failed to send some messages' notification
containing the exception text that says to update their outgoing server
authentication setting.

One of the problems with 'AUTOMATIC' is that users may not fully
understand its security implications.  For example, a MITM attack could
mask a server's support for STARTTLS and CRAM-MD5, resulting in password
disclosure in certain configurations.

This commit also makes changes to the SMTP authentication process.  No
attempt is made to authenticate using methods that the server does not
profess to support in its EHLO response.  This is the same behavior as
found in Thunderbird.
"
"540de158a07d47ee60b2481b53e052684e792237","2014-02-14 10:37:44-05:00","Change the PLAIN auth. option text based on encryption

If the user chooses a connection security option which assures the use of
encryption, then the PLAIN auth. option is labeled 'Normal password',
otherwise it is labeled 'Password, transmitted insecurely'.

This is similar to Thunderbird's behavior.
"
"be2b3b1ec2425901c574801e39e77257c852fb1f","2014-02-26 14:23:33+00:00","Renamed 'usee' to 'uee'.

The naturalize tool detected that using 'uee' is more consistent with
the current codebase state:
* 'uee' in LocalStore is 28.47% probable ('usee' 5.01%)
* 'uee' in TextBody is 45.02% probable ('usee' 9.10%)
"
"2df205874e63e99978bc43b245fdf8bf58912cae","2014-02-26 14:27:35+00:00","Renamed 's' to 'sizeParam'.

The naturalize tool detected that using 'sizeParam' is more consistent
with the current codebase state:
* 'sizeParam' in LocalStore is 22.89% probable ('s' 10.52%)
"
"6075addfd017e9d6bf3561fd2fac6b146ce50c61","2014-02-26 14:30:57+00:00","Renamed 'local_folder' to 'localFolder'.

The naturalize tool detected that using 'localFolder' is more consistent
with the current codebase state:
* 'localFolder' in MessageListFragment is 76.31% probable ('local_folder' 23.69%)
"
"cfeed4078159f9712bf21658354d2bce213ad6cb","2014-02-26 14:42:37+00:00","Renamed 'tokens' to 'tokenizer'.

The naturalize tool detected that using 'tokenizer' is more consistent
with the current codebase state:
* 'tokenizer' in MessageCompose is 60.40% probable ('tokens' 39.60%)
"
"c17d0323f265041fd7a704c36c8b9be6a8e1c44a","2014-02-26 14:48:11+00:00","Renamed 'identitiy' to 'identity'.

The naturalize tool detected that using 'identity' is more consistent
with the current codebase state:
* 'identity' in SettingsImporter is 78.46% probable ('identitiy' 21.54%)
"
"8bfd6ca3e01858fa6a58f199a140e8d6adda462c","2014-02-28 17:02:05+01:00","Fix sendCommand line splitup for some imap proxys

When sending a command it would be sent like this:
PKG1: 1 STARTTLS
PKG2: \r\n

Some imap proxys (maybe from Fortinet?) don't accept commands across packets:
PKG1: 1 STARTTLS\r\n
"
"4792cfa91d489bbd6369de353062491c0b2d5042","2014-03-01 03:48:14+01:00","Remove old IntelliJ project files

Recent IntelliJ versions support building with Gradle
"
"abc765e8935c5903602cb87edbcf877810911563","2014-03-01 05:12:01+01:00","Don't combine strings in code
"
"fa7118dab30e44c9064948891cf15df39314e9e5","2014-02-16 17:10:44-06:00","Put long-running operation into AsyncTask
"
"bf9264dbb03a1b611ff06e6aab3962f607bc9126","2014-03-01 07:39:07+01:00","Merge pull request #454 from mallamanis/master

Renaming variables for codebase consistency
"
"47e09c92eaffdcf0dbe29c24e0242de196efff50","2014-03-01 07:39:52+01:00","Merge pull request #456 from asdil12/single_pkg_command

Fix sendCommand line splitup
"
"0509e1541cbd841d52e74b883dc3e27fefc8c5a3","2014-03-03 10:08:07-05:00","Use Locale.US where appropriate
"
"0f991b434eea4c289523a767907306b99e76338e","2014-03-03 10:40:23-05:00","Use Locale.US where appropriate

Applicable for strings not intended for user consumption.

A %d string format code can generate eastern-arabic numerals
for users with an arabic locale.

V/k9      (20763): conn1103774136>>> 5 UID SEARCH ٦٤٦:٦٧٠ NOT DELETED
V/k9      (20763): conn1103774136<<<#5# [BAD, Invalid Search criteria]
E/k9      (20763): synchronizeMailbox
E/k9      (20763): com.fsck.k9.mail.store.ImapStore$ImapException: Command: UID SEARCH ٦٤٦:٦٧٠ NOT DELETED; response: #5# [BAD, Invalid Search criteria]
"
"8d0901a17844cf3c1b7bd2eaad5e829dcbc386fd","2014-03-01 12:40:01-05:00","Delete old journals when moving the database
"
"39590d49bd383065ef6cdb954d61c3724835a97c","2014-02-27 12:50:05-05:00","Notify user of certificate errors while pushing

Previously, if a server's certificate failed authentication while
connecting for push (if, for example, the certificate had expired), then
the attempt to connect would fail, and another attempt would be tried
later.  After a certain number of failed attempts, no further attempts
would be made.  Meanwhile, the user is oblivious to the failures, and it
could be quite some time before the user realizes that they are not
getting email.  Even when they do realize it, they would not know the
cause.

With this commit, users receive a notification when such failures occur
while connecting for push.  (These notifications are already generated
with failures while polling.)  Tapping the notification will take the user
to the relevant server settings where they can choose to accept the
certificate.
"
"daea7f1ecdb4515298a6c57dd5a829689426c2c9","2014-02-26 16:50:21-05:00","Eliminate the 'if available' connection security options

These options originated in the AOSP email client from which K-9 Mail was
forked.  They provide an odd combination of 2 features:

1. Don't bother to authenticate the server's certificate (applies to both
SSL/TLS and STARTTLS); i.e., blindly accept all certificates.  This is
generally a bad security policy which is susceptible to MITM attacks.

2. If STARTTLS is selected but the server doesn't claim to support
STARTTLS, then proceed without using encryption.  This, too, is a bad
security policy which is susceptible to MITM attacks.

Since the time that K-9 Mail was forked, a couple things have changed:

> K-9 Mail has implemented the ability for users to review and permanently
accept individual certificates that would otherwise fail authentication.
With this ability, there is no need for a user to subject themselves to
the ongoing risks of feature 1. above.  Hence, this commit removes feature
1.

> The AOSP email client has changed its behavior and no longer permits a
security downgrade to an unencrypted connection if the server doesn't
claim to support STARTTLS (i.e., they eliminated feature 2. above). K-9
Mail should do the same.  It's unlikely that a server is going to provide
STARTTLS on an intermittent basis, so providing a contingency for such
unusual behavior is an unnecessary risk.  Hence, this commit removes that
feature as well.

Effect on existing users:

If the old connection security setting was 'SSL/TLS (if available)' (which
now gets remapped to 'SSL/TLS'), and the server does not provide a
certificate that can be authenticated, then a 'Certificate error for
<account name>' notification is generated telling the user to check their
server settings.  Tapping the notification takes the user to the relevant
server settings, where the user can tap 'Next' to review the certificate
and choose to permanently accept it.  This process would occur during the
first syncing of folders after application upgrade or (in the case of
SMTP) during the first attempt to send a message.

If the connection security setting was 'STARTTLS (if available)' (which
now gets remapped to 'STARTTLS'), and the server does not provide a
certificate that can be authenticated, then the same process as above
would occur.

If the old connection security setting was 'STARTTLS (if available)', and
the server doesn't claim to support STARTTLS, then the user would get a
certificate error notification which would lead them to the server's
settings.  There they would need to choose a different connection security
-- most likely 'NONE'.  If they didn't change anything but instead just
tapped 'Next', the server settings would be checked again and a dialog
would pop up saying, 'Cannot connect to server. (STARTTLS connection
security not available)'. (The implementation of notifications when
STARTTLS is not available is not actually included here -- it's in the
commit that follows.)

Regarding the changes to providers.xml:  in cases where the scheme ended
with '+ssl', the schemes were simply updated by appending '+'.  In cases
where the scheme ended with '+tls', a check of the server was made to
assure that STARTTLS was available before appending '+' to the scheme.
Domains paran.com and nate.com failed the check and were removed because
no current information could be found.  Domains me.com and mac.com also
failed and were updated based on http://support.apple.com/kb/ht4864.
"
"14a0a7a2a7cda7cf385ba1f726c039c445dc9e71","2014-02-28 12:47:43-05:00","Provide notification if STARTTLS is not available
"
"9dc5338501c63526f954e93e55983811e822a6a3","2014-02-26 17:59:29-05:00","Eliminate WebDAV STARTTLS security choice

STARTTLS doesn't really apply to WebDAV and should never have been made
available as an option.

Pre-existing settings will be re-mapped to SSL/TLS.
"
"d67c054d4dc565c7e102ac742c5e14c76a1c66f0","2014-02-28 19:33:25-05:00","Restart pushers after editing server settings

If an error occurs while connecting for push (for example, if the server's
certificate fails authentication), several more attempts will be made to
connect, then finally all attempts will cease.

This commit makes it so that pushers are restarted if the user goes in and
edits the server settings (presumably because the user was notified of a
problem and is attempting to fix it).  Without this, the user could fix
the problem and would still not receive email via push.
"
"c8150a12fa839475d66c496d160f479a21b98501","2014-03-01 11:27:24-05:00","Show account name in certificate error notifications

getName() shows the user's name from the first identity for the account.

What we really want is getDescription(), which is the account name that
shows in the account list.
"
"df3eef0052d4d11d626a568af572aed356854d4d","2014-02-27 13:06:54-05:00","Fix the K9mail-errors folder

Error messages were not being put in the folder because of a problem with
how loopCatch was being handled.

It looks like this problem goes back to commit 5aea9e7.

Additional device info has been added to the error messages.

Also, now the feature is only enabled in debug mode.
"
"094318dacbb478de4c4a403b4ebce2bfe65f75f9","2014-03-01 17:19:36-05:00","Use buffered output streams for all output

POP3 already does this.

This is a more general solution to the problem
addressed in commit 8bfd6ca.
"
"0a63466704ce0ccbc5f6ad65d3940e6b5b2aba2a","2014-03-05 04:16:57+01:00","Add missing import
"
"75fc76773d0512a0fb62b213d154bdc3e21bb260","2014-03-05 05:32:00+01:00","Make sure settings import doesn't degrade connection security

Rewrite the now obsolete values 'SSL_TLS_OPTIONAL' and 'STARTTLS_OPTIONAL'
to their '*_REQUIRED' counterparts before import.
"
"617123c58b7f8a126206b212123f417b1a087974","2014-03-05 06:03:06+01:00","Remove SimpleX509TrustManager because it's no longer used
"
"ff5edf43d45cf8a9dcdcf04518014e6b57fa2013","2014-03-05 06:19:55+01:00","Merge branch 'pr/453'

Authentication changes

message to explain why this merge is necessary,
"
"3ca03e8a9d34da969553d64fdb84c4cd9a979bda","2014-03-05 06:29:56+01:00","Use SSL/TLS as fallback when importing server settings
"
"567ba9c71212ef6f23d4b906ac532a037cc2b03c","2014-03-05 06:47:59+01:00","Enable connection security by default when setting up an account
"
"bc4218be55e912bd403a6d81f19aa02917a7dc46","2014-03-05 07:03:13+01:00","Remove all entries without transport encryption from providers.xml
"
"ab9968e71faae548c1acf3f26cdd0263e837c9da","2014-03-05 07:17:59+01:00","Merge branch 'more-secure-by-default'
"
"ef8fbb427ef3ce9f38586626d374273766ffb3da","2014-03-05 07:10:17+01:00","Fix typos
"
"c6f0a5897b19159611f0d583dde5c2a32045af34","2014-03-06 01:59:31+01:00","Update changelog for 4.903
"
"902bd96f4a3df787ea433b07694f6b1a52b55301","2014-03-06 02:04:14+01:00","Bumped manifest to 4.903
"
