"commit id","commit date","commit message"
"4e84afaff08ded65579b62474c5f343412c3cdc0","2010-09-04 06:49:00-07:00","first commit
"
"560cbf9d17ab27dd7a8987f29523304585e372aa","2010-09-04 06:50:53-07:00","imported readme
"
"f45c3a228cd59a26ea4f0ae3dca6a80ca661d2c1","2010-09-04 06:57:29-07:00","Import sources from code.google.com/p/androidterm
"
"d4122bbc6abc12eb0f22d240370e75e89f88f295","2010-09-04 07:42:10-07:00","Support Swype IME backspace key.

Thanks to Julian Brost (who fixed the same bug in the connectbot project),
and thanks to Todd Musall for spotting the bug fix in the connectbot
tracker, and tried it out in Android Term.

In general we now support any IME trying to delete text to the left of
the cursor by calling InputConnector.deleteSurroundingText(). We generate
one 'del' key event for each character of text that is to be deleted.

We don't support deleting text to the right of the cursor. If this
becomes an issue we can experiment with forward-cursor followed by del.
"
"08010d0f9027040848d629d3503cb8fe3a57c3c3","2010-09-04 08:07:20-07:00","Edit markup.
"
"5f5c357e80cc1de4e2c4531a0d7099c32eeb0925","2010-09-04 08:09:00-07:00","Give proper extension for markdown.
"
"70e5dc5886f99b94041af17c33d8be7f01f7b83a","2010-09-04 08:11:14-07:00","Improve formating.
"
"41b7f307a50be62e05d79ca59965064e7abdd6aa","2010-09-04 08:19:17-07:00","Moved updates to a new page.
"
"2ebddea3a1d69902fdb71845a2871dd2a5ff5c7b","2010-09-05 10:53:06-04:00","IME arrow key support
"
"6f104d74a22650d96213d40169e3e34c91e1e0ca","2010-09-12 09:41:10-07:00","Bump version number.
"
"59aaa1fdbd38aa08a5a984e4a84dda313ac29b20","2010-09-11 11:58:15-04:00","Support swype delete key long press
"
"324112b60a869df9a78f676b44067055678c3886","2010-11-19 02:25:22-08:00","Bump version number.

(I think this change was made a long time ago, just forgot to publish it.)
"
"7988d5c035aa367c93913503a2d180472991922f","2010-11-19 02:28:02-08:00","Avoid potential memory leak in String8::set

(Not an actual memory leak because the current clients of String8
never call set more than once for the same object. But you never
know who might use String8 in the future.)
"
"6dd9967990d5a6dde060cbdc663192f73538c8d8","2010-11-22 06:48:08-08:00","Adobe Photoshop file for high-resolution icon for Android Market.
"
"ad10138e47e105e1e76796ed99ef8738c7cfd7e0","2010-11-27 20:34:19-08:00","Add support for full PC keyboards.

Tested with a Logitech Bluetooth keyboard.
"
"068253dd904e82b4efa35b6596257d0bcfaf9b6e","2010-11-27 21:27:42-08:00","Bump version number.
"
"afb3a717f2aca9fc7ef22d8ef5630b7391d1d8b7","2010-12-27 14:16:43+00:00","Added an option for selecting part of the text on the screen with two screen touches.
"
"c6aa6d95414c7fbce0ef4139451dbdd33abefb61","2011-01-01 07:35:40-08:00","Update docs for current build environment.
"
"7021988b83818b9deddd08e9abf5f69f1872fc1f","2011-01-01 07:37:21-08:00","Merge branch 'master' of https://github.com/pelya/Android-Terminal-Emulator into pelya-master
"
"4c8e467e0ea5a9077c80360ad5708f8721c0120f","2011-01-01 08:05:58-08:00","Fix style of text selection patch.
"
"497c32a279e7a58cf2842688a1a2204945b80da8","2011-01-01 09:50:35-08:00","Modify text selection algorithm to work better:

+ Use drag to select rather than two taps.
+ Text selection is now a spring-loaded mode: It only lasts for
one drag session.
+ Add a verical offset so you can see what you're selecting.
"
"a0aa6b2c2dd3675f658d51732dc85b8eb3be309f","2011-01-01 09:57:07-08:00","Translation strings courtesy CyanogenMod:

https://github.com/CyanogenMod/android_packages_apps_AndroidTerm
"
"eec09355f92c0539b34200fdeac9bf1ee7d41376","2011-01-08 16:15:36-08:00","Handle composing text.
"
"cb560e765aecf54c31dde2ed85696f07c5d0b9ef","2011-01-08 16:15:46-08:00","Bump version number.
"
"d818d6589185c25784868bfd3b176be1d2d4dfdf","2011-01-08 16:37:29-08:00","We don't require a touch screen, even though we use the feature.
"
"3f698e15a4133f52a05bb894d3be2791fa2ead54","2011-01-08 17:07:11-08:00","Add a white background layer.
"
"104a92911221c953ca1fe7dc6708f0ba431d58e9","2011-01-08 17:08:41-08:00","Ignore a png file that's a documentation build artifact.
"
"ce9b91f02d07a44f1c35887005a6fe89b9984fd9","2011-01-09 10:31:17-08:00","Add '|' and arrow keys to 'Special Chars'

Add 'Camera' button as a possible Control key

Make 'Volume Down' the default control key.
"
"94ecce1319e25327b2fd09fefd48d0e047889744","2011-02-08 10:18:35-08:00","Add Android.mk file

To help people trying to incorporate AndroidTerm in their own custom
ROMs.

(This hasn't been tested, but it might work.)
"
"f0e8f969ba98b13f2a5172ac139e15636c0da03c","2011-02-09 09:00:41-08:00","Mark this module optional.
"
"71150215a2dac8bda582be6f2e7e9ad06969d7bb","2011-04-10 15:24:05-07:00","Add support for Android 1.5

+ set minSdkVersion to 3, so we run on Android 1.5
+ set targetSdkVersion to 11, so we run without compatability hacks.
- otherwise the terminal emulator screen size calculation is
incorrect and scrolling doesn't work on Android 2.3 devices.
+ add a res/drawable/app_terminal.png file, so that we get a
custom launcher icon on Android 1.5 devices.

+ bump version name to 1.0.22.

+ add files to support building from command line using 'ant'.
"
"c507d6615be33ed977a743637041715740dff2ba","2011-04-10 15:43:28-07:00","Declare that we don't require a touchscreen.
"
"c781b765707090cc585be8a3b534a084276c5f40","2011-04-10 16:28:30-07:00","Declare SDK target 10 (Gingerbread) rather than 11 (Honeycomb)

Otherwise the Options menu key doesn't appear on Honeycomb devices.
"
"364e3cc54093fbe78f50568ed84f7fe1bf368e37","2011-04-17 07:51:03-07:00","Turkish localization

Provided by Doğukan Korkmaztürk <d.korkmazturk@gmail.com>
"
"a1acc66a23f61a2ecf9f2395386e28572c217a1e","2011-04-23 10:17:13-07:00","Remove unused variable in native implementation of Exec.close()
"
"36a529bff7fe780cef5023c9b26fafba032b976a","2011-04-23 10:55:56-07:00","Kill the started process group in onDestroy

As it stands now, if the user presses the Back button without closing
her shell, it will keep running unattached to any tty.  Over time, this
leads to a buildup of shells, each inaccessible to the user.

Fix this by doing what xterm and other terminals do -- send SIGHUP to
the process group of the started process when quitting.
"
"3c45242049107733f04b26c0b6eaf90a8da72d0e","2011-04-23 11:04:59-07:00","Add an Fn key for easier access to extra keys

Instead of overloading the Ctrl key to provide arrow keys and send some
control characters, add a new 'Fn' key (defaulting to Volume Up) to
provide these functions.  By splitting Ctrl and Fn, we can reach these
functions via the more easily-accessible letters, and also provide
access to more useful keys (such as PageUp/Down and Tab).

The mapping is this:
Fn-W/A/S/D: Up/Left/Down/Right
Fn-P/N: PageUp/PageDown
Fn-T: Tab
Fn-L: |
Fn-U: _
Fn-E: Ctrl-[ (Esc)
Fn-.: Ctrl-\
Fn-2: Ctrl-_
Fn-3: Ctrl-^
Fn-4: Ctrl-]
"
"30f28f9547c0f30d3a94df2f845c5f943e9e201b","2011-04-23 11:13:25-07:00","Add a service to prevent Android from killing our process

By default, an Android process is liable to be killed whenever it's
not in the foreground.  When this happens to us, it leaves the user
unable to resume her terminal session, which is still running.

By starting a service in our process (even one which, like this one,
does nothing at all) and marking it as a foreground service, we prevent
the system from killing our process except in out-of-memory situations.
"
"8659494a2705d428df91284e84f2baab53a35da0","2011-04-23 11:17:29-07:00","Add menu options to take WakeLock and WifiLock

It can be very useful to prevent the device from sleeping or from
turning off the wifi radio -- but in a general terminal application it's
difficult to guess when this is wanted.  Consider the following:

(1) Nothing is happening.  We don't want to hold either a WakeLock or
WifiLock.
(2) The user is logged into a remote system via SSH on wifi.  We don't
need to hold a WakeLock, but should take a WifiLock to prevent the SSH
session from being disconnected.
(3) The user is doing some long-running computation (locally on the
device) in the shell.  We should take a WakeLock, but not a WifiLock.
(4) The user is doing apt-get dist-upgrade in her Debian chroot on the
device.  We should hold both a WakeLock and a WifiLock.

Therefore, assume the user knows best, and add menu options to take/drop
a WakeLock and a WifiLock.  Note that this requires adding WAKE_LOCK to
the set of permissions we use.
"
"1091cac89486e0b1ead4a257b8d3afdceb15a7cf","2011-04-23 11:21:27-07:00","Make the Terminal activity singleTask instead of singleInstance

With the Terminal activity's launchMode set to singleInstance, the
Preferences activity starts a new task, which can lead to some very
strange back stack behavior.  Set launchMode to singleTask instead,
which will allow the Preferences activity into the same task.
"
"c856059f0133b692ff543efbba6c42e2151369e7","2011-04-23 11:29:57-07:00","Add setComposingRegion() and getSelectedText() to our InputConnection

The definition of the InputConnection interface for SDK version >= 9
includes new functions setComposingRegion() and getSelectedText().  If
we don't include them in our implementation, the build fails with

[javac] /home/steven/devel/android-terminal-emulator/src/jackpal/androidterm/Term.java:2955: <anonymous jackpal.androidterm.EmulatorView$4> is not abstract and does not override abstract method setComposingRegion(int,int) in android.view.inputmethod.InputConnection

(at least when building with SDK 10).
"
"5291627330783a06a82e3628cf6db16d580bd70a","2011-04-23 11:37:01-07:00","Add commitCorrection() to our InputConnection

Required in order to compile under API level 10.
"
"b8695660d3cfe5b52b2859d0f41842dd7fdea597","2011-04-23 11:39:59-07:00","Bump version number.
"
"e1f6e9eabbaa67c8d6d11f5241e516567bc4f3a8","2011-04-23 12:15:23-07:00","Rename buld tool, and make it build the JNI code as well.
"
"f37de5004bf2c9a6ccf67d5674a7012d56ba73ce","2011-04-25 10:13:02-07:00","Housekeeping odds-and-ends.

Make sure the release build is a clean build.
Regenerate build.xml
Add update.sh script for regenerating build.xml
"
"28d47b834e7467edb00e41fd05708d09c0979af9","2011-04-25 10:27:33-07:00","Fix java.lang.UnsatisfiedLinkError error.

Change shared library name from libandroidterm to libandroidterm2

My theory is that this bug is happening on systems that have
system versions of the libandroidterm shared library.

Version 1.0.26 of Android Terminal Emulator added a new API,
hangupProcessGroup, to the libandroidterm library.

I think on devices that have libandroidterm in their system library,
that version takes precedence over the version in the application,
and so the hangupProcessGroup API is not found.

By changing the name of the libandroidterm library to libandroidterm2
we should avoid loading the system version of the
libandroidterm library.
"
"733adfccc2215dd81ad5dc4a7422d09538a22ddb","2011-04-25 10:27:50-07:00","Bump version number.
"
"a162246e4c21798942d27ee645f6659df15c53f7","2011-05-24 00:39:15-07:00","Change shared library name (again) to make sure our copy takes precedence on CyanogenMod

Commit 28d47b8... ('Fix java.lang.UnsatisfiedLinkError error.') changed
the name of the shared library from libandroidterm to libandroidterm2,
to avoid a potential library conflict with API/ABI incompatible versions
being shipped in some custom firmwares.  Unfortunately, CyanogenMod also
uses the name libandroidterm2:

https://github.com/CyanogenMod/android_packages_apps_AndroidTerm/commit/7d0de89f0ed5231a7d7eb3ca7917accb83c8eaee

Change the name again, this time to something that should hopefully be
unique, which should fix the problems that CyanogenMod users have been
reporting in the Android Market comments.  (A big scary warning to
firmware distributors that the shared library ABI must not be modified
without consulting upstream might be appropriate somewhere ...)

Signed-off-by: Jack Palevich <jackpal@google.com>
"
"b39259070aaed11a7294e041c8f640d5d830f1df","2011-05-24 20:15:15+08:00","Increment version number.
"
"3489b6909406b3d8f4941d50455e6f15ae936a3d","2011-05-24 20:15:51+08:00","Update local properties for building on a new machine.

(Maybe I shouldn't check this file in at all.)
"
"1be21996ffbef85d616718abe2cf471d4ad958fb","2011-05-25 06:49:02+08:00","Use a global reference to hold onto a class object between JNI calls.

This bug was detected by using CheckJNI

(setprop dalvik.vm.checkjni true; stop; start).
"
"df515f5cbf7574969bbd36e7f31c8827fcaa0c69","2011-05-25 06:51:17+08:00","Increment version number.
"
"bb1dc458ade25925cd98a81edfae6f28d919c823","2011-05-29 17:38:40-07:00","missing translations
"
"1d8bfb77e7de7b96506af2973502cf295a807568","2011-05-29 17:51:05-07:00","missing translations
"
"6ddda130ebde049964b38eeb49204205648014e6","2011-06-18 04:02:36-07:00","Merge pull request #20 from cpasmoi/master

missing translations
"
"c66d078bde89adfd13e4a87eb1c6898a5338de8f","2011-06-18 21:17:09+08:00","Escape single quote character so string resource compiles.
"
"4f369e5bd9c178db013f374a0d1484061e204f06","2011-06-18 19:37:15+08:00","Implement missing SGR escape codes

Thanks to Sam Jacobson <sam.jacobson@snitchinc.com> for the bug report!
"
"81ddd14c9eb46809ffee5d9819559c945a45135c","2011-06-18 19:40:54+08:00","Fix insert and delete line code.

Thanks to Sam Jacobson <sam.jacobson@snitchinc.com> for the
bug report and fix!
"
"5d499f43141865047382ca1be47e5817374b182f","2011-06-18 19:43:22+08:00","Allow application to be installed on the SD Card.
"
"c19d57e13d0b30fac4c6f6d931937afb7952b987","2011-06-18 21:11:42+08:00","Rename the rt tool to pushAndRun

This tool is used to build and test the terminal emulator.
"
"a6e99b98f39b44b25832051813243876d50a1ff0","2011-06-18 21:16:32+08:00","Implement a 'None' setting for control and function keys.

Thanks to Eli Grey <me@eligrey.com> for the idea.

Also made the 'Special keys' dialog text localizable.
"
"9c5e6f7fde932b35dd9ef85d07d9dd759044988d","2011-06-18 19:43:58+08:00","Increment version number.
"
"cd9a67afce18d0a51ceff6e9a308f01382ba9e37","2011-06-25 19:35:39+08:00","Update Italian localization

Thanks to fireb33@gmail.com
"
"28025150c0624121c6b1915f1a717118933a1162","2011-06-25 19:45:32+08:00","Enable an initial command string to be passed as part of the intent.

Thanks to Christoph Schmidt-Hieber, M.D., c.schmidt-hieber@ucl.ac.uk
for the idea and the patch.
"
"290aaf22e6a2a729a98e5ea4c094d7f16106d008","2011-06-25 19:50:56+08:00","Add link to Downloads page to README file.
"
"892831647b99de29af04a953eb78e3be18049049","2011-06-25 20:00:54+08:00","Make Ctrl/Fn-[A-Z] work with uppercase as well as lowercase letters

Patch courtesy Steven Luo steven+android@steven676.net

Steven says:
For Ctrl-[A-Z], this matches the behavior of xterm running on my Debian
box; for Fn-[A-Z], there are no possible compatibility issues and it
seems like the most natural thing to do.
"
"29e95e964ec41b8c8de1832950b35cb165eba380","2011-06-25 20:03:30+08:00","Fix behavior of Ctrl-[0-9]

Patch contributed by Steven Luo. steven+android@steven676.net

Steven writes:

In xterm on my Debian system, the Ctrl-[0-9] combinations appear to map
to the following:

Ctrl-2: ^@ (NUL)
Ctrl-3: ^[ (ESC)
Ctrl-4: ^\
Ctrl-5: ^]
Ctrl-6: ^^
Ctrl-7: ^_
Ctrl-8: \177 (DEL)

Ctrl-1, Ctrl-9, and Ctrl-0 appear to send 1, 9, and 0 respectively.

I have no idea whether anyone actually seriously uses these, but make
these key combinations behave in that manner, and remove the bogus
Ctrl-[0-9] and superfluous Fn-[234] combos.
"
"cb368f0f482a0e20ba3096fd90d9810878456434","2011-06-25 20:07:44+08:00","Add F1-F12 and Ins/Del/Home/End keys

Contributed by Steven Luo steven+android@steven676.net who writes:

The mapping is as follows:

Fn-[1-9]: F1-F9
Fn-0: F10
Ctrl-9: F11
Ctrl-0: F12
Fn-I: Ins
Fn-X: Del
Fn-H: Home
Fn-F: End

It should be noted that a real VT100 does not have Home/End keys, and as
such, the terminfo entry for TERM=vt100 doesn't contain escape codes for
Home and End.  This bothers some applications, but not others.  The
codes generated match those sent by the Linux console (TERM=linux),
which appears to work fine as a TERM setting since the emulation fixes
in 1.0.30.  xterm sends different escape codes, though; I left the
escape codes at their present values because TERM=xterm causes problems
with some applications.

Addresses GitHub issue #9.
---
I'm unhappy with the reintroduction of different behaviors for the Ctrl
key, but I couldn't think of another choice that's guaranteed to make
sense on any soft keyboard layout.  (Fn-J/K and Fn-(/) are the two other
possibilities that occurred to me.)  Feel free to change.
"
"839ac83fd224db75e9db83f720a59af43093276e","2011-06-25 20:09:29+08:00","Update in-app documentation for special keys

Contributed by Steven Luo steven+android@steven676.net
"
"804f3b5fa145448d89867d8c34e778910bf10b35","2011-06-25 20:11:04+08:00","Increment version number.
"
"3f50ffa6a63b04af3e52128f05d56bbcc8a76315","2011-08-21 16:44:04-07:00","Updated translations

Thanks to fireb33@gmail.com
"
"dd43ce4ea9e52422e615ed266c1e6b451a41b761","2011-08-22 20:39:40-07:00","Improve market icon.

Shinier, and more like a terminal.
"
"029570ade268791590e6518538e93f4547ef7ecc","2011-08-22 20:53:29-07:00","Shrink market icon to match 'safe' bounds

See http://www.google.com/support/androidmarket/developer/bin/answer.py?answer=1078870
"
"56dc9597fc73ae8e6b5d32316993dfa8173ab20f","2011-08-27 11:38:01-07:00","Ignore local.properties

contains machine-specific information, not useful to save in repo.
"
"ff2dcf634d93a1ead6e595fa64204ba9e8acf34c","2011-08-27 12:02:31-07:00","The fact that Term.java contains substantially all of the classes of the
application clashes with Java's model of one class per file, and is
inconvenient when refactoring the code to allow for multiple terminal
sessions in the activity.  This patch splits out all of the classes into
separate files, and groups related classes into packages; no actual
changes to the code are made.
"
"cbd439b630dbf08636b84c9be0c5a81dcfde726b","2011-08-27 12:12:54-07:00","This patch isn't really necessary, but it makes life easier for me.  For
local builds, I change the package name to
net.steven676.android.terminal, which allows co-installation with the
Market version; however, if the debug constants stay in the Term class,
I have to change every file using them to either belong to the new
package, or else import net.steven676.android.terminal.Term.
"
"972a3497781451edde73899969d5ebbe61187c0a","2011-08-27 12:20:44-07:00","For multisession support, we eventually want to keep the terminal
sessions in the service instead of tying them to the activity.  This
implies that we have to stop holding SharedPreferences objects in all of
the classes tied to the session.  To this end, introduce a new
TermSettings class, which is responsible for reading SharedPreferences
and holding the current value of config settings.
"
"be18807725cddc0f6337a7771b01501a0881e886","2011-08-27 12:24:29-07:00","Modify the activity and view to use the new TermSettings class.
"
"bf017dbf1335689c53a9e65d6001806ec2a8819b","2011-08-27 12:29:49-07:00","Add TermSession class to represent a terminal session

At the moment, the assumption that each terminal activity contains only
one EmulatorView and hosts only one terminal session is fairly deeply
embedded into the code.  To help break this assumption, we introduce a
new TermSession class, which holds the TerminalEmulator and
TranscriptScreen for a session, and handles the launching and watching
of the process and the setup of the I/O streams.
"
"47cc8a2b6c56ea0214c59445852e63bbfcf030d6","2011-08-27 12:33:24-07:00","Use TermSession in activity and view instead of old terminal-handling code

This completes the process of isolating the code for each terminal
session, which should considerably simplify the task of adding support
for multiple sessions.
"
"4ffcbfddc7b8192b73ba4da6dea6560e05676fc0","2011-08-27 12:37:47-07:00","Throw away TranscriptScreen backing store on session finish

Android's InputMethodManager seems to hold a reference to a finished
activity object for a while after the activity is destroyed.  This
keeps everything the activity holds a reference to in memory, which in
our case includes a fairly significant chunk of memory: the backing
store to the TranscriptScreen.  Throw this away when it's not needed, to
reduce the memory impact of this behavior.
"
"f44119c2118cab693fd0bd67c64e13e0817c9279","2011-08-27 13:22:21-07:00","Don't accept input from process after TranscriptScreen is finished.

This prevents a bunch of noise in the logs.
"
"5f4114849ba84e8bbab65ca8076915173bb95f7d","2011-08-27 13:23:52-07:00","Support multiple sessions per terminal activity.

This patch does the following:

* Replace the EmulatorView widget in the activity layout with a
TermViewFlipper, which is a ViewFlipper with a couple of added
conveniences for dealing with EmulatorViews (e.g. pausing/resuming
them when changing the view).
* Add an ArrayList in the service to hold TermSessions, and make the
activity bind to the service so that it can retrieve the list.  This isn't
strictly necessary for multisession support, but allows us to decouple
the activity from the sessions, which will (in the future) allow us to
restart or even close the activity without losing running sessions.
* Now that EmulatorViews aren't being created automatically when the
layout is inflated, but are instead created by hand, move a bunch of
initialization stuff to the EmulatorView constructor.
* Make the input reader threads for each session exit on EOF.  These
threads hold a reference to their TermSession objects, which would
leak otherwise.

For now, one EmulatorView and TermSession are created as soon as the
activity binds to the service, if none exist; no UI to create additional
sessions is included.
"
"9c11960500eb43050c00883be4d28a68537a4cb7","2011-08-27 13:33:30-07:00","Add UI for switching and managing terminal sessions.

We expose three different ways to manage terminal sessions:

* Options menu items to open a new window and close the current window.
* A WindowList activity, reachable from the options menu, which lists
all the open windows and allows opening, closing, and switching of
windows.  The behavior is patterned after the window list activity in
the Android browser.
* Gestures to change windows -- swipe right-to-left for the next window,
left-to-right for the previous window.

The options menu items have been reordered to make what should be the
five most frequently used items (new window, close window, window list,
toggle keyboard, special keys reference) appear in the icon menu so that
the user doesn't have to touch 'More' to reach them.

This patch adds several icons.  btn_close_window and ic_menu_windows
come from the Android browser source, while the rest come from the
Android 2.3.3 SDK platform, revision 2 (platforms/android-10/data/res).
"
"6b70a47d0f7dedee3257056163c09cb3be631a36","2011-08-27 21:43:09-07:00","Fix resource-related problems when running on Android 1.5 to 2.2

Hurray for the emulator for making it easy to test older versions

+ Use our own copies of system drawables not available in older versions.

+ Make sure there's a (mdpi resolution) copy of every drawable in the
plain 'drawable' directory, since that's where Android 1.5 looks.
"
"62c8611fb07c9164fb67ce88c488d7c928a4af37","2011-08-28 09:43:09-07:00","Avoid accessing a finished TranscriptScreen when resuming the terminal activity

updatePrefs() may ask each terminal session in the list to update its
size, which requires accessing the TranscriptScreen.  Therefore, we need
to update the list of running terminal sessions before calling
updatePrefs(), to preclude the possibility of accessing a finished
TranscriptScreen.

Also, if a window was closed in the WindowList activity, and then the
user selected a specific window, the window number passed to us in
onActivityResult() refers to the window list *after* taking window
closures into account.  We therefore need to defer switching to the
user's selected window until after the list of running sessions is
updated (onActivityResult() is called before onResume(), so it can't be
done there); this avoids calling onResume() on a stale EmulatorView,
which results in an attempt to access a finished TranscriptScreen.
"
"f727e5f69edd9a3ac66fcc06c6a6abad681195c1","2011-08-28 10:29:52-07:00","Remove JDK 1.5-incompatible interface method @Override annotations

Allows building with JDK 1.5.
"
"811696d75b12d2ff705de83e83550ceb58b238e2","2011-08-28 11:34:21-07:00","Handle fractional-pixel-width fixed-width fonts.

This should fix the problems people have been having with text rendering
when using non-standard fixed-width fonts.
"
"5238daec51c8c3bd2c1deccf5a04f4930979dbe5","2011-08-29 16:52:45-07:00","Increment version number.
"
