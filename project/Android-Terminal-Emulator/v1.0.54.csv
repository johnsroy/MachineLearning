"commit id","commit date","commit message"
"efd3463a28bfb17e11cc76c48ecde44b95419963","2013-05-26 18:39:42-07:00","Improved Italian Translation
"
"fe30de1bc89788a18df88b1dbc7491cda067bb1c","2013-05-27 13:35:44+09:00","Add Korean translation
"
"82d6ace19959f0de2dc498b660c49689a574e772","2013-05-26 23:02:35-07:00","Merge pull request #249 from wisedog/master

Add Korean Translation
"
"c88a894d0a2a536ad9e098bf60b83215ae1c198f","2013-05-27 19:09:08+09:00","Updated Korean translations

Updated Korean translations by Koongchi
"
"3aa8a878cc0b6ffa4b74f47aba5756dfa220da49","2013-05-27 19:22:02+09:00","Updated Korean translations

Updated Korean translations by Koongchi
"
"40339d969f591b81e804a72e51b1e175e87de0a3","2013-05-27 19:28:12+09:00","Added Korean translations

Added Korean translations by Koongchi
"
"c38d36b1828b3ed6a87005f1ead51c1af0f9cb20","2013-05-27 19:32:47+09:00","Added Korean translations

Added Korean translations by Koongchi
"
"eae0ac17a61ccab6c8ff4202d67873ac5bb59191","2013-05-27 06:46:52-07:00","Merge pull request #250 from Koongchi123/master

Updated and Added Korean translations
"
"dd9d1b9e00cd355b240615cbec8073f8b5d75631","2013-05-27 08:57:18-07:00","Switch to holo light theme.

Not 100% happy with it, but it seems to be the new style for Android
applications.
"
"07d6a5b5e54054c950c765ad92a1e3f38e43a956","2013-05-27 09:38:25-07:00","Implement Linux console color scheme.

Light grey on black.
"
"aac3a072ee057c815e16b658f055c4f843defdf2","2013-05-27 12:00:34-07:00","Revert 'Switch to holo light theme.'

Didn't like it.
"
"2f7253ddf17fde389063fa98b75b2bdd6e1ed139","2013-05-27 12:44:16-07:00","Improve Hungarian translation

From gLes.
"
"7c1d6aa59614181af016741272e5e7d1af11328e","2013-05-27 19:46:59+02:00","Updated Hungarian translation.
"
"1d688e930d81881e9097eb680efb3f02f603a882","2013-04-17 09:56:35+10:00","Extracted keycode constants from TermKeyListener
"
"1d1628c1fc91b296a7108d231ceccfb2030b0252","2013-04-17 10:05:54+10:00","Added create and switch window/tab keyboard shortcuts

Switch forward with Ctrl+Tab, back with Ctrl+Shift+Tab
Create new with Ctrl+Shift+N
"
"f2904a9f8484929477c2abd4011f18f824a95b30","2013-05-12 17:08:38-04:00","Added paste from clipboard shortcut (Ctrl+Shift+V)
"
"f949e17159d48200b94779d25d62bb69ffef910b","2013-05-27 23:03:22-04:00","Stop keyboard shortcuts breaking back key interceptor.

You can only have one key listener on a view,
see comments on pull #235.
"
"d99e08c241743ccd51396052caad46a138eabce2","2013-06-01 21:27:00+02:00","Repair czech translate
"
"c7dc2dcc15aaa739b5f0ea3628bb3d9d2a8df7a9","2013-06-28 22:17:50-04:00","send scroll codes
"
"54a783d032fa145355e8a9f85627f25c284a33cc","2013-06-29 08:40:17-04:00","more
"
"d9e7159242a994a27ea285525039995a8b738234","2013-06-29 11:46:19-04:00","more
"
"247a6deb80ad65692018675f38788803e0ffc851","2013-06-29 12:55:46-04:00","prefs option for mouse events
"
"a3774aab112f281a205a25dd436f38964c1379a1","2013-06-29 13:06:05-04:00","fix tabs in code; remove my initials
"
"cbfdee70a872e4cbecf8b323be8af1fa8d9800d3","2013-06-29 13:54:29-04:00","can override mouse tracking events
"
"a1214e273c4c22fb21c14ff67a81cc82c3644006","2013-06-29 14:05:29-04:00","match coding style
"
"2e8a672e1e803831fd3f25d5d223a32b59c3954d","2013-06-29 14:07:28-04:00","no tmux window flip
"
"dc9c8824fc34b1c6fde7c7b5704af8f9e5b99577","2013-07-01 18:33:56-04:00","fling in mouse tracking mode
"
"0095cad46ea6cd7362e69943247be772701d2d38","2013-07-04 11:57:53-04:00","fix mouse click alignment
"
"f03eab08eb5e1032651853aba1b33e4580051499","2013-07-05 17:16:02-04:00","comments; renamed some vars/methods
"
"09821b83e78d4cd0cca173042c36ecda16de5552","2013-07-05 17:25:18-04:00","comment
"
"b2001cd0c3e65a73c613bd8dfd2f14deaae1a412","2013-07-05 17:42:39-04:00","rename mouse tracking pref strings
"
"82a5354ee47c7384c2400d6ccae8df4776352cdb","2013-07-07 18:40:37-04:00","revert change to pushAndRun
"
"36ebe455ceb5bc2aa078064eb26df7371f2457b5","2013-07-21 09:16:55-07:00","Merge pull request #253 from jozka1/master

Repair czech translate
"
"2ce1914ef5f13933b3b4377be6347d024421dd1f","2013-07-21 10:14:25-07:00","Merge pull request #256 from dstahlke/scrolling

Send xterm mouse tracking codes
"
"acdb46d384efd53af9cfd45e2e82d15b8ee0ae87","2013-07-21 21:06:45-04:00","clip mouse to limits of 8-bit data
"
"640b69577600de5da845c5eebbb7d019f06f5106","2013-07-22 09:11:41-07:00","Merge pull request #258 from dstahlke/mouseclipping

clip mouse to limits of 8-bit data
"
"6414ab3270f7c469bc24cfa76257fc80ddebd07b","2013-08-06 20:44:56+02:00","Improved/Updated Norwegian translation
"
"81f9f1d967ae92954d46a3cdbd1c269a73a432a2","2013-08-30 13:00:23+08:00","Update Simplified Chinese translation
"
"91886577196a64a517ea5876d8069909beb5e8ae","2013-08-30 16:55:43-07:00","Merge pull request #262 from Juansheng/master

Update Simplified Chinese translation
"
"9d8401e658023119d23053e1b8604db3743dc433","2013-09-05 07:32:19+03:00","Don't log received data char by char, log as a string.

One log entry per char doesn't scale to debugging real-world full-screen
apps - many log lines just overwrite previously logged content.
"
"525210267db407a1793dddbe30d61da61b4885e2","2013-09-05 07:38:06+03:00","Log output codes produced by keypresses, symmetrical to logging input data.
"
"fe294222b31cf8ac82c3c63282c65faaa6a98c91","2013-09-21 04:07:55+04:00","Update strings.xml
"
"81e3e6eca7c9ef371bdae02afcfbcf9c90b40f7a","2013-09-21 04:15:54+04:00","Update arrays.xml
"
"34bb43746e3f10f52539f378d2c9776ddbfa57b2","2013-09-21 04:17:36+04:00","Update strings.xml
"
"0bf85c76456b0e0ad04b403277a75ca476f3b370","2013-09-21 04:51:01+04:00","Translate more options
"
"12dc3dfad6abe37c7d9d66d51cd822e8a63fde49","2013-09-06 00:00:18+03:00","Add hashmap to map input key/scan codes with arbitrary modifiers to out seqs.

Currently used approach of using String[256] doesn't scale - the arrays are
sparse, while there may be need to handle various modifier combinations. For
example, cursor directional keys produce different codes for all combinations
of Ctrl, Alt, and Shift - 8 combinations total. So, just use hash table, but
be efficient and use integer as key value. Caveat with this approach is
exactness of much. For (abstract) example, suppose Ctrl+Shift+PgUp
combination is not supported, while Ctrl+PgUp is. Current implementation will
however output code for just PgUp, while it may make sense to output code for
Ctrl+PgUp (but that's not 100% sure).

Mapping of raw scancodes is also supported. There actually should be support for
reading user-defined map from an external file, then functionality implemented
here will allow users to perfectly support whatever keyboard they have on their
hands, regardless of Android version, regardless of whether some keys are
supported by Android or not, and whether that support broken or not.
"
"8aaa2c27acc6ed8acf6a8a272ae9f03fc570819d","2013-09-06 00:17:00+03:00","Separate 'application mode' handling for cursor keys vs keypad.

XTerm and other terminals have separate 'application modes' for numeric
keypad block and cursor keys block. A-T-E mixed them together.

Implementation is complicated due to issue
https://github.com/jackpal/Android-Terminal-Emulator/issues/265 : Currently,
terminal emulation is not encapsulated to one class how it would be logical, but
instead split between TerminalEmulator and TermKeyListener. So, this patch adds
'side channel' between these classes to allow TerminalEmulator to control some
aspects of TermKeyListener directly, to avoid routing communication between them
across even more classes. Ideally, terminal-related handling should be refactored
from TermKeyListener into TerminalEmulator (so, TermKeyListener would only handle
receiving events from the underlying OS).

Reference: http://www.xfree86.org/current/ctlseqs.html

This will conflict with https://github.com/jackpal/Android-Terminal-Emulator/pull/266
"
"f200e316d43b9f365bc7fbac696f39eb658e639a","2013-09-06 01:48:04+03:00","Add XTerm alt buffer support ('\E[?47h'/'\E[?47l').

Alt buf is used by many fullscreen apps to preserve original contents
of the console. This implementation is pretty basic, but enough to run
Midnight Commander with proper switching between shell and panels.

Reference: http://www.xfree86.org/current/ctlseqs.html
"
"5591a30e56a131684d30153e9198fb1925c31a5c","2013-09-06 02:09:37+03:00","Quick-add additional altbuf command codes to make 'less' work.

'\E[?1049h' should probably clear altbuf after all, but so far, 'less'
overwrites entire altbuf content itself.

Reference: http://www.xfree86.org/current/ctlseqs.html
"
"52bb963c697d3d292b2a24d7101d95dcad22d3a4","2013-09-14 23:01:05+03:00","Use num keypad for cursor movement, etc. keys. This allows to have Home key.

On some Android versions, Home key unconditionally used to go to Home screen,
so using numpad in cursor key mode is the way to actually have a usable Home
key still. Then, standalone Home key can be redefined to produce numpad's
key code either to get around ugly Android behavior. For reference:

/system/usr/keylayout/bk/Generic.kl:
-key 102   MOVE_HOME
+key 102   NUMPAD_7
"
"78a8a2b671fa45e2c0f97cea6cfe4d15256eecb6","2013-09-15 00:49:38+03:00","Add 'xterm' terminal type.
"
"0ca12b3d619a29660b39785229ed7ffc9a8baf0b","2013-09-09 12:11:50+03:00","If TERM=xterm, use corresponding codes for Home/End keys.
"
"fcdbd857e587ad76a9ea117c756cc39d567621e8","2013-10-13 23:56:34-07:00","Added some underlying data structures for URL processing.
"
"d97f99847f05c6313c2d66a0ff13a72d0af394f6","2013-10-14 09:35:04-07:00","Added functions to return URL to click handler and execute
"
"0382f676e017754fb36ccad3d7ba37a78c352f4c","2013-10-17 21:26:03-07:00","Moved URL processing code to EmulatorView class - fits better there.
Now works for links on current screen.
Does not yet work for multi-line links, or if you scroll up.
"
"0f80edd8c1dc054e3191f2f13394ce42bfe91e71","2013-10-17 21:58:04-07:00","Added support for links at any point in transcript.
"
"6b1d7091ca929d8e51f5383139721459eabc2e36","2013-10-17 22:28:03-07:00","Changed underlying data structure to hash table instead of matrix
"
"b1dccb821b766fa1ff1e4bdf53318ebd83d9ca7e","2013-10-17 22:53:20-07:00","Added header comments
"
"91592ce5daaa59efd31a814072805b029179466f","2013-10-18 15:53:19-07:00","Restructured hash table calls. Still crashing on exit (null pointer exception)
"
"76ea31d544a49b346befaca15763f925a114eac2","2013-10-21 20:40:38+02:00","Added support for ECMA-48 Status Report Commands
"
"220f1fba9722957512e3c662695056060d8e5922","2013-10-21 20:41:28+02:00","In 16-color mode blink attribute should imply bright background color not foreground one
"
"4f2e3264591961460bb9830ca5d11eb1cbf427b1","2013-10-22 22:55:52-07:00","Fixed uncaught null-pointer exception; no longer crashing on exit
"
"467698c7a0d48e75f23a3475c4d229af2705f597","2013-10-22 23:38:45-07:00","Removed unnecessary imports from TranscriptScreen
"
"450f23749b78119d8d5be5fd35b444c36327840f","2013-10-23 10:16:17-07:00","First commit for multi-line link experiment.
"
"1f340dcb000b0ab83ee41a97f98926a2884d97b7","2013-10-23 10:58:22-07:00","Fixed indexing error for spans
"
"71d042d08de38d99806c5a50d3b332e5f99e274c","2013-10-23 21:57:01-07:00","Force line wrap to bet set whenever line is about to wrap
"
"1e9e464093ab934aeab697f993cf0c246c64cd54","2013-10-23 21:58:21-07:00","Fix uncaught null pointer exception
"
"8506adc464ec5d6775e60b66f9c06d89fc809be4","2013-10-23 22:12:33-07:00","Fixed bug preventing multiple links on a wrapped line
"
"0ee62cc67dbf63173b734f49c52e6f2ccb674c63","2013-10-23 22:47:32-07:00","Added comments
"
"ae28bfacc5318bf6ae33b7f3c7bd206d5d900b2c","2013-11-16 14:23:56-08:00","Merge pull request #259 from odinuge/master

Improved/Updated Norwegian translation
"
"43e6d19f99c3814a55d45a873a82ac23fd967f18","2013-11-16 16:13:17-08:00","Update build instructions for the current versions of NDK and SDK.
"
"cda3e36290437bc18ad33e1a899ea343914d6635","2013-11-16 16:20:24-08:00","Merge branch 'patch-1' of git://github.com/NeverGone-RU/Android-Terminal-Emulator into NeverGone-RU-patch-1
"
"681a1b7b7b9ba317be94e431dabb670a40496211","2013-11-16 16:25:43-08:00","Escape @ characters that appear at the start of a string resource.

Otherwise the Android resource compiler won't compile the resource.
"
"d131ef2759ae4ed7b492bfd4605f77e5f298caa4","2013-11-16 16:31:05-08:00","Merge branch 'keyboard-shortcuts' of git://github.com/splondike/Android-Terminal-Emulator into splondike-keyboard-shortcuts
"
"b666ddecc3477b267a15915e48e95016ee0ec441","2013-11-16 17:42:37-08:00","Add user preference for keyboard shortcuts.

Defaults to 'on', but can be turned off for people who don't want the
shortcuts.
"
"1b97291719843a1e7823a27128a1a831c8256694","2013-11-16 17:50:24-08:00","Guard against an empty clipboard.
"
"bfda1fb78fae6dd8d41fcdf17c684932e1cca09f","2013-11-16 19:08:12-08:00","Process shortcuts on ACTION_DOWN rather than ACTION_UP.

Two benefits:

1) Prevents the shortcut keystroke from being interpreted as a regular
keystroke.

2) Allows repeat key logic to work.
"
"159e0262d58754313f589a58e3bcda7e2524c257","2013-11-16 19:17:49-08:00","Merge branch 'in-out-log' of git://github.com/pfalcon/Android-XTerm-Emulator into pfalcon-in-out-log
"
"30054156bdd16c8960a4a1b5071892b6a553471a","2013-11-16 19:57:49-08:00","Merge branch 'for-upstream' of git://github.com/pfalcon/Android-XTerm-Emulator into pfalcon-for-upstream
yListener.java
"
"8244642bde668a4c0dbf9850ea132706eeed1408","2013-11-16 20:04:44-08:00","Turn off logging by default.
"
"349bf58c18d1044716f1075e7ab8843a4da52e04","2013-11-16 20:14:18-08:00","Merge branch 'master' of git://github.com/druzus/Android-Terminal-Emulator into druzus-master
"
"f6a550ee4a9617da76fec93457fb98f013992af7","2013-11-16 20:26:59-08:00","Merge branch 'master' of git://github.com/morae/Android-Terminal-Emulator into morae-master
"
"24331cd7793766d663521a2dc7e83e713c447d1b","2013-11-16 20:40:58-08:00","Update code to compile with current tip-of-tree.

Also turn tabs to spaces, remove trailing whitespace.
"
"e88279194464b9ff8a228271ae737024b5742baf","2013-11-17 08:58:49-08:00","Avoid crash when can't launch telnet binary.
"
"ef4b5fa5da8e1a378f588ff58141aa949067964f","2013-11-17 08:59:15-08:00","Document how to build the telnet widget.
"
"d5d4187549565b1a60e0e504228bf17f61485d93","2013-11-17 09:42:27-08:00","Avoid NPE in EmulatorView.onResume in Telnet sample.

That sample calls EmulatorView.attachSession asynchronously, which means
that mKeyListener can be null at the point in time when onResume is called.

For good luck add the same null pointer check to onPause.

I am not 100% happy with this. There are many other places in
EmulatorView where mKeyListener is called without the null pointer check.

But it is a simple band-aid fix that avoids the problem we are seeing.

Good enough for now.

A long term fix probably involves rethinking whether we allow attachSession
to be called asynchronously, and if we do, how to bullet-proof the code.

(At the very least attachSession should be required to be called
on the UI thread.)
"
"d2321b0ea076062d4e6efa1d92c5539055da7024","2013-11-17 09:50:00-08:00","Version 1.0.54
"
"ab258f1bfdfea6d5e6cd6502e967bd65942d49c2","2013-11-17 11:07:54-08:00","Utility for installing launcher icons.
"
"7ae88d36e2ca0a221293e966f7ca3dfc420048df","2013-11-17 11:13:30-08:00","Updated Launcher icons

Author: Nathanel Titane <nathanel.titane@gmail.com>

Normalized all the icons to the latest guidelines,
ported them to SVG (open standards)
and forced the alignment to the pixel grid to prevent
hardware display fuzziness.

In terms of design, I simplified some areas and eliminated
the usage of too many borders to define the depth of the icon
using more gradients (Google style).

You can take the 512 px, old and new, put side by side and you'll see the
difference. It' subtle but make the difference on screen :)
"
"054e3cf824b8b616ff7dbad690ddb461e4208c86","2013-11-17 11:30:53-08:00","Add a 192x192 xxxhdpi icon (scaled down from 512x512)
"
