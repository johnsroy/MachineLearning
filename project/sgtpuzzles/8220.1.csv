"commit id","commit date","commit message"
"76b5d3e226a6e360df9cdedf1d1d8ba0c4cf59de","2004-04-25 14:27:58+00:00","Initial checkin of a portable framework for writing small GUI puzzle
games.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4138 cda61777-01e9-0310-a592-d414129be87e
"
"9265238f208c192e4b20e16a4a71e40baccd0b8b","2004-04-25 14:45:22+00:00","Beginnings of a GTK framework. (And I do mean _beginnings_; it opens
a window and that's about it.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4139 cda61777-01e9-0310-a592-d414129be87e
"
"0909ce1c290b973691c8b9740fc79e13b2f7bbe5","2004-04-25 20:15:22+00:00","General further development. Sketched out the mid-end, added more
GTK code, rudiments of event passing.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4141 cda61777-01e9-0310-a592-d414129be87e
"
"e891fd4110b02619f6544cd3ed6064b080647920","2004-04-26 17:10:44+00:00","Further general development. Net is now playable, though
configuration is absent as yet.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4145 cda61777-01e9-0310-a592-d414129be87e
"
"6fd79baa9094f5f3cf733e3f4c90ad3f1844186a","2004-04-27 17:44:30+00:00","Implemented Cube, in a sufficiently general way that it also handles
the tetrahedron, octahedron and icosahedron.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4151 cda61777-01e9-0310-a592-d414129be87e
"
"b6b2fe6fb714eb1a19c1fc2ba35455c9f052bdd3","2004-04-27 19:01:49+00:00","Stop the user being able to resize the window.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4155 cda61777-01e9-0310-a592-d414129be87e
"
"a2d3e37843c9f256816bc7b2d332a19b43105151","2004-04-27 20:51:08+00:00","Most of a Windows front end. Something's not _quite_ right in the
GDI - there are blobs in the middle of powered lines in Net. But
it's 99% there now.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4156 cda61777-01e9-0310-a592-d414129be87e
"
"3cdb97b53049b7e1ad96252e6a1ae03ded27f860","2004-04-27 22:49:21+00:00","A-_ha_! The Windows Rectangle() call appears to get uppity if asked
to draw a 1x1 rectangle, presumably on the grounds that that's
beneath its dignity and you ought to be using SetPixel() instead. So
now I do, and now Net actually looks exactly the same on Windows and
GTK. Woo!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4157 cda61777-01e9-0310-a592-d414129be87e
"
"69e8daf05ba79462c7b10845a8c3dd6dbed34099","2004-04-28 12:07:15+00:00","Add a menu bar, in both Windows and GTK. In particular, game modules
are now expected to provide a list of `presets' (game_params plus a
name) which are selectable from the menu. This means I can play
both Octahedron and Cube without recompiling in between :-)
While I'm here, also enabled a Cygwin makefile, which Just Worked.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4158 cda61777-01e9-0310-a592-d414129be87e
"
"7ac0217e4ebea15d909894e1e3b6c62bcda3c6d7","2004-04-28 12:34:37+00:00","More robust timer handling in GTK: never create a new timer when one
is already active.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4159 cda61777-01e9-0310-a592-d414129be87e
"
"8da002db047d3309f2ea421d729a00f3aaa63f76","2004-04-28 12:39:39+00:00","Add .map and .rsp files to .cvsignore.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4160 cda61777-01e9-0310-a592-d414129be87e
"
"ea9221b6bef438ac4ca8abdde66ab623507e129e","2004-04-28 17:21:57+00:00","Introduce diagonal movement keys on the numeric keypad, and use them
as an alternative control method in Cube. (This was a bit of hassle
in the Windows front end; I also introduced a debugging framework
and made TranslateMessage conditional.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4162 cda61777-01e9-0310-a592-d414129be87e
"
"ce93b05db255068746d3f84dbf01e8e3dae18cf2","2004-04-28 17:37:13+00:00","Fix zillions of MSVC compiler warnings. Sigh.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4165 cda61777-01e9-0310-a592-d414129be87e
"
"330d6b6e3ef9a42f2c49822963ec03a8e6a45e67","2004-04-28 17:42:32+00:00","Shift-click is equivalent to middle-click. This is mostly for
Windows users who may not have a middle button at all, but I've
replicated it in GTK to maintain cross-platform consistency.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4166 cda61777-01e9-0310-a592-d414129be87e
"
"f0861c845d484e5f0ab4ea29d4f79809a55b2d3d","2004-04-28 17:46:04+00:00","Have each game declare a name which is used for window titles etc.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4167 cda61777-01e9-0310-a592-d414129be87e
"
"3bacc29f84c5d267730095f8b44180a03765e674","2004-04-28 18:43:50+00:00","Add a new game concept called a `flash'. This is a graphical effect
taking non-zero time, which is triggered by the making of a move and
is _not_ hurried to its conclusion by the start of the next move (so
the game redraw function is expected to be able to draw it in
parallel with continuing moves). The only thing that prematurely
terminates a flash is the start of a fresh flash. In particular,
this concept is used to display the completion flash in Net, because
at least _my_ playing instincts make me lock every piece I've
unambiguously placed, and hence the last turn move is instantly
followed by a lock move which was previously suppressing the
completion flash.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4168 cda61777-01e9-0310-a592-d414129be87e
"
"de0ea22a507439ef1621b6057e58aef2f00b2811","2004-04-29 08:37:19+00:00","Add a template file defining the null game.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4169 cda61777-01e9-0310-a592-d414129be87e
"
"fefff2bb29633fbf45ec0de152cffb7d273fd066","2004-04-29 09:15:42+00:00","`There's always one'. Add nullgame to .cvsignore.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4170 cda61777-01e9-0310-a592-d414129be87e
"
"cf789506442dfc7971cd8cc737f3ba0a024681ef","2004-04-29 18:10:22+00:00","Implemented text and clipping primitives in the frontend, and added
two new simple games `fifteen' and `sixteen'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4173 cda61777-01e9-0310-a592-d414129be87e
"
"aaf6e75774621ef2bd4457598cb11732b2c4285a","2004-04-29 19:23:08+00:00","Added a status bar.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4174 cda61777-01e9-0310-a592-d414129be87e
"
"2f318592b59e5459ee2472e8bd28855558600ec7","2004-04-30 10:11:53+00:00","Incorrect placing of the polyhedron sometimes left it on a blue
square. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4175 cda61777-01e9-0310-a592-d414129be87e
"
"5ca346fabef8bb196f57418313aed02130b3ce72","2004-04-30 10:14:55+00:00","We were forgetting to count the final move.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4176 cda61777-01e9-0310-a592-d414129be87e
"
"8d90cb1a837638b28867d06863be95dabe7ece58","2004-04-30 10:17:22+00:00","Keep the status bar in better sync with the game display.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4177 cda61777-01e9-0310-a592-d414129be87e
"
"38c679c6262fc465d9d9269311cdea1e7e98261f","2004-05-01 07:32:09+00:00","The cube was being drawn slightly differently on the top and left
rows, because the coordinates were crossing one or other axis at
that point and so the lower coordinate was being rounded up while
the upper one was rounded down. Judicious use of floor() fixes it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4179 cda61777-01e9-0310-a592-d414129be87e
"
"5380acd2a762a3056cc7a1cfd16ddf0e1d0fce22","2004-05-01 07:53:53+00:00","Wrap the status bar in a viewport, to avoid it expanding if the text
doesn't fit in it. This not only looked ugly, but caused unnecessary
calls to configure_area() and kept destroying the pixmap.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4180 cda61777-01e9-0310-a592-d414129be87e
"
"d3d6932ab4a61d261000a7d2d4aa4868bb7de29f","2004-05-01 08:58:48+00:00","Remove arbitrary restriction on Net minimum game size. (Awww, cute
2x2! Cuter 2x1!)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4181 cda61777-01e9-0310-a592-d414129be87e
"
"dce878c4a51b4352f18a4b10534e33952aa4084b","2004-05-01 11:32:12+00:00","Configuration dialog box, on the GTK front end only as yet.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4182 cda61777-01e9-0310-a592-d414129be87e
"
"1a7fc552054113d88992396ada5d19fee4a66f17","2004-05-02 10:43:46+00:00","`BOOLEAN' is a term already used by Win32. Bah. Change terminology.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4183 cda61777-01e9-0310-a592-d414129be87e
"
"d32ec72b0b057d88560371edc0c9b58fbd164519","2004-05-03 07:52:33+00:00","Game configuration box for Windows, by constructing the dialog box
right from scratch without the slightest reference to any dialog
templates (meaning that we get to figure out the layout and _then_
choose the window size). I'm rather pleased with that. Also
introduced free_cfg(), which is why this checkin touched gtk.c as
well.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4184 cda61777-01e9-0310-a592-d414129be87e
"
"791692484541f7358d176b918bcab3cb61b6e913","2004-05-03 07:56:23+00:00","`Fifteen' was getting the parity wrong on any size of board where
the top left and bottom right corners didn't have the same
chessboard colour.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4185 cda61777-01e9-0310-a592-d414129be87e
"
"53129bd9cf057c4f88b770b6b90b41fb37c041cb","2004-05-03 08:51:31+00:00","Implement selection of game seeds, by reusing the config box
mechanism I've just invented (the midend handles the standard game
selection configuration). Each game is now required to validate its
own seed data before attempting to base a game on it and potentially
confusing itself.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4186 cda61777-01e9-0310-a592-d414129be87e
"
"45af87593e5bafec359e814f40096cd94216f430","2004-05-03 09:10:52+00:00","The Windows RNG turns out to only give about 16 bits at a time. This
is (a) pretty feeble, and (b) means that although Net seeds transfer
between platforms and still generate the same game, there's a
suspicious discrepancy in the typical seed _generated_ by each
platform.
I have a better RNG kicking around in this code base already, so
I'll just use it. Each midend has its own random_state, which it
passes to new_game_seed() as required. A handy consequence of this
is that initial seed data is now passed to midend_new(), which means
that new platform implementors are unlikely to forget to seed the
RNG because failure to do so causes a compile error!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4187 cda61777-01e9-0310-a592-d414129be87e
"
"43bd0575b7fc60e80addc1a2e221be467e2dd1f3","2004-05-03 09:19:34+00:00","Make Return and Escape work reliably in GTK dialog boxes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4188 cda61777-01e9-0310-a592-d414129be87e
"
"013c2f17b8a2135a2ed6caf5782f51f96e4699c5","2004-05-03 09:43:08+00:00","GTK and Windows appear to handle timers very differently:
specifically, the elapsed time between calls varies much more with
GTK than it does under Windows. Therefore, I now take my own time
readings on every timer call, and this appears to have made the
animations run at closer to the same speed between platforms. Having
done that, I decided some of them were at the _wrong_ speed, and
fiddled with each game's timings as well.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4189 cda61777-01e9-0310-a592-d414129be87e
"
"e666bb6c6907a91d126a771c7333b885874a6948","2004-05-03 12:12:30+00:00","Redraws during undo in Sixteen had been broken by my faffing about
with last_movement_sense (which was necessary to fix the animation
when the grid was only 2 squares wide in either dimension). Movement
sense is now inverted if the move being animated is an undo.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4191 cda61777-01e9-0310-a592-d414129be87e
"
"92a5c5813ea9393f3231944de1d94e3db7d91a6e","2004-05-03 12:48:13+00:00","Add a licence file.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4192 cda61777-01e9-0310-a592-d414129be87e
"
"49e5fa4457b2b0c8f193ea6037de4cc37424d529","2004-05-03 13:03:12+00:00","Shell script to prepare a source distribution archive.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4193 cda61777-01e9-0310-a592-d414129be87e
"
"92a3e076932749cfc93e5d977a6d9a2f0ead610c","2004-05-03 13:07:43+00:00","Add a README.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4194 cda61777-01e9-0310-a592-d414129be87e
"
"a7820a34673ba5148fcaf8fa80df123f34471ba0","2004-05-04 08:28:47+00:00","Uninitialised variable caused ultra-wide windows. Silly.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4195 cda61777-01e9-0310-a592-d414129be87e
"
"92cb39ef5ca5c1cff79e323e8f4f52d89e8d34d9","2004-05-04 08:33:28+00:00","Peter Maydell points out that the README misspells `Makefile' as
`Makefile.gtk'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4196 cda61777-01e9-0310-a592-d414129be87e
"
"e98ab8e49906f7b5fa8569fc83997a7d80e6e85a","2004-05-04 09:18:33+00:00","Net puzzles more than 32 tiles wide weren't working properly due to
me testing the wrong variables for clicks on the tile border...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4197 cda61777-01e9-0310-a592-d414129be87e
"
"667e573394efd377f27897ebf677bdeb45bf367e","2004-05-04 09:56:38+00:00","dupstr() should take a const char *. In particular, this allows
compilation under GTK 2.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4198 cda61777-01e9-0310-a592-d414129be87e
"
"cea3a6cfa9869a23600c01d1f056bc9cc27d1615","2004-05-04 10:24:08+00:00","Forgot to set up the initial value of checkboxes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4199 cda61777-01e9-0310-a592-d414129be87e
"
"abbea47bd01650125560fa607f10c82cc7a20b99","2004-05-04 11:20:47+00:00","Forgot to initialise the font variables in the Windows frontend structure.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4200 cda61777-01e9-0310-a592-d414129be87e
"
"f92cfd5fea3ac634a18d9ba0afaf575d175e8fab","2004-05-11 17:06:50+00:00","Added a new game, `Rectangles', taken from nikoli.co.jp.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4206 cda61777-01e9-0310-a592-d414129be87e
"
"98b10a88485e8aa5727ef4112434bb6b83f3fd7b","2004-05-11 17:44:30+00:00","Framework alteration: we now support a `game_ui' structure in
addition to the `game_state'. The new structure is intended to
contain ephemeral data pertaining to the game's user interface
rather than the actual game: things stored in the UI structure are
not restored in an Undo, for example.
make_move() is passed the UI to modify as it wishes; it is now
allowed to return the _same_ game_state it was passed, to indicate
that although no move has been made there has been a UI operation
requiring a redraw.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4207 cda61777-01e9-0310-a592-d414129be87e
"
"54005f09280070865424c2678886eac4845c14fa","2004-05-11 17:45:45+00:00","Oops - missed a bit in the GTK front end :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4208 cda61777-01e9-0310-a592-d414129be87e
"
"452d038887f3be7683011fb81dad590f8d8cd30f","2004-05-11 18:29:49+00:00","Rectangles is now actually playable, since I've used the new UI
feature to arrange a mechanism that allows you to draw a whole
rectangle at a time by dragging rather than having to click each
edge individually.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4209 cda61777-01e9-0310-a592-d414129be87e
"
"5fea1c12eed524ca2cdb1e1753674945a368170d","2004-05-11 18:32:48+00:00","We should turn off the dragging variables in the UI _whenever_
`enddrag' is TRUE, not just when the end of the drag was within a
sensible range.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4210 cda61777-01e9-0310-a592-d414129be87e
"
"6cc96ce7e605d38ea39d302ff85191fdd5398cd0","2004-05-11 18:37:20+00:00","Don't rush move animation to a conclusion on a subsequent keypress
unless there's actual activity happening as a result of the move.
Net animations were tending to get rushed to conclusion by the mouse
button release now that it's being reported to the mid-end.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4211 cda61777-01e9-0310-a592-d414129be87e
"
"61d03cc9914533672287f579fdc526dffb8c4bc1","2004-05-11 18:46:10+00:00","Cosmetic fixes for Windows.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4212 cda61777-01e9-0310-a592-d414129be87e
"
"04e5d398c83363354b0f1f643b2ae2d5da6e5914","2004-05-11 18:46:36+00:00","And I _always_ forget to clear the background when first drawing the
display of a new game, so I'll add it to nullgame.c and hope that
makes me remember it next time!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4213 cda61777-01e9-0310-a592-d414129be87e
"
"77807ae427dcc62c928be9d0e0930a89075c87b9","2004-05-11 19:24:22+00:00","Now we have the UI abstraction, use it to implement keyboard control
in Net.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4214 cda61777-01e9-0310-a592-d414129be87e
"
"9a65a5a0c07660e52ff0a65a24f379a2a5e6528b","2004-05-11 19:32:05+00:00","Rename the Windows Net executable, due to its clash with the system
net.exe.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4215 cda61777-01e9-0310-a592-d414129be87e
"
"e9c3d485a21a5eb1a5a37884817786f0f9c03f05","2004-05-11 23:22:08+00:00","Missing draw_update call.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4216 cda61777-01e9-0310-a592-d414129be87e
"
"bed302f7cf2612c12156bda0473e5d571c7eed5b","2004-05-12 12:32:27+00:00","Flash on completion. Two people actually complained! :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4218 cda61777-01e9-0310-a592-d414129be87e
"
"78174d19ab03f1c1fc04a80ad9d57fdd7e1facd2","2004-05-12 12:33:03+00:00","Fiddle with the coordinate system to see if I can improve user
experience.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4219 cda61777-01e9-0310-a592-d414129be87e
"
"17918003a80725fdaab7939819454d7b1da8de5a","2004-05-12 18:28:11+00:00","Remove vestigial code from the previous attempt at clever grid
generation. Grid generation should now be orders of magnitude faster
at large sizes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4220 cda61777-01e9-0310-a592-d414129be87e
"
"5cb2aea1304339553d645b53e7c83936bd676168","2004-05-12 18:45:11+00:00","During redraws, I now do corner analysis centrally, which enables me
to maintain the `visible' array accurately and hence actually switch
it on. This prevents us having to redraw the entire playing area on
any move, which means really big grids are now sensibly playable
without display lag.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4221 cda61777-01e9-0310-a592-d414129be87e
"
"1f4d08cfebf97b16e97b42945a85b2632994395b","2004-05-12 18:53:47+00:00","Ahem. Seed validation was completely broken.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4222 cda61777-01e9-0310-a592-d414129be87e
"
"9c374b5a7debe24d8fbd623eb80985ca889375dd","2004-05-12 18:54:16+00:00","Fix `visible' calculation (again).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4223 cda61777-01e9-0310-a592-d414129be87e
"
"7db5b5945e85485891d850145e1d43b3999f37cf","2004-05-19 11:57:09+00:00","Introduce routines in each game module to encode a set of game
parameters as a string, and decode it again. This is used in
midend.c to prepend the game parameters to the game seed, so that
copying out of the Specific box is sufficient to completely specify
the game you were playing.
Throughout development of these games I have referred to `seed'
internally, and `game ID' externally. Now there's a measurable
difference between them! :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4231 cda61777-01e9-0310-a592-d414129be87e
"
"e163abd3e49ef2abcd802dccbcd82b08b73869e1","2004-05-20 08:22:49+00:00","Now that we have string-encodable game parameters, let's support a
command-line argument which is either a set of parameters or a
params+seed game ID.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4234 cda61777-01e9-0310-a592-d414129be87e
"
"424c0b5ab7c522f4ddf99f1aecbe9686f15d82f6","2004-05-22 13:07:23+00:00","Fix a memory leak.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4239 cda61777-01e9-0310-a592-d414129be87e
"
"836ee18316f8e5f6a5e27a8706738e7196c6801c","2004-05-22 13:08:18+00:00","makedist.sh should be silent.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4240 cda61777-01e9-0310-a592-d414129be87e
"
"a1d6c0253a41b3b44c37f2cf4be87636d43aea9e","2004-05-24 13:07:28+00:00","Added the beginnings of a hacking guide.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4255 cda61777-01e9-0310-a592-d414129be87e
"
"4359b237649761411a1b6149328a764f14879449","2004-05-26 09:07:14+00:00","Richard B's utterly evil `netslide': cross between Net and Sixteen.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4257 cda61777-01e9-0310-a592-d414129be87e
"
"543149513a0ac1717d478301f371b73b8ffcfcbe","2004-07-05 10:32:26+00:00","HACKING should be in .cvsignore.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4322 cda61777-01e9-0310-a592-d414129be87e
"
"b1ab8ef70a5af0d6d4c28152613e3b45bf5c0c45","2004-07-30 12:16:57+00:00","Failed to connect up the `destroy' signal in error_box(), causing
gtk_main_quit not to get called, with the result that the whole game
ended up running one gtk_main level lower down. This meant that
final dialog box processing was not performed, so that (for example)
selecting 1x1 in Net, hitting OK and getting an error box, then
selecting a different size and hitting OK again failed to change to
the new size.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4376 cda61777-01e9-0310-a592-d414129be87e
"
"6516dbe6d4d140e0475d291043babd457abfeb4a","2004-08-16 12:23:56+00:00","Added a help file, mostly thanks to Jacob.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4460 cda61777-01e9-0310-a592-d414129be87e
"
"efd5629fa6ee9efca09c35e15d26db426700b223","2004-08-16 12:42:11+00:00","Fold in the expanded-grid mechanism for generating different kinds
of puzzle. Configurable option, turned off by default, and not
propagated in game IDs (though you can explicitly specify it in
command-line parameters, and the docs explain how).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4461 cda61777-01e9-0310-a592-d414129be87e
"
"ac934c115d4601cd43d513c5b368ce1c993d0c65","2004-08-16 12:43:03+00:00","Just for convenience, a docs Makefile, outside the main mkfiles.pl
structure.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4462 cda61777-01e9-0310-a592-d414129be87e
"
"b9c22847d406d2ac54b5dfaadf86aa8df021573a","2004-08-16 12:45:35+00:00","Moved my puzzle collection out into ixion's main CVS area, so here's
a MODULE file.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4463 cda61777-01e9-0310-a592-d414129be87e
"
"82d1ec28a9e7c8b56a7dc739102c90061b8affc9","2004-08-16 13:10:07+00:00","Robustness in the face of a completely configurable expansion factor.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4464 cda61777-01e9-0310-a592-d414129be87e
"
"23783fa5b8a4fea125ff3ff63241f0af5dfe5484","2004-08-16 13:17:40+00:00","Clarify that difficulty does not increase forever as you increase
the expansion factor...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4465 cda61777-01e9-0310-a592-d414129be87e
"
"1eca8a34a845c5f29143a42f29cb305a03521ac3","2004-08-16 13:52:06+00:00","This repository needs to have a copy of mkfiles.pl, although really
I'd prefer to be able to share a single instance with PuTTY.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4466 cda61777-01e9-0310-a592-d414129be87e
"
"4f5cd871cf3ea6cf876c3d4fa3737d481a748180","2004-08-16 13:54:41+00:00","UI nit: make cursor visible upon use of A/S/D keyboard controls.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4467 cda61777-01e9-0310-a592-d414129be87e
"
"e5c54a4e24446bd382c2ee60238f243f0fc61e58","2004-08-16 16:29:54+00:00","After discussion with Simon, the game redraw functions are now passed a new
argument `dir' which tells them whether this redraw is due to an undo, rather
than have them second-guess it from game state.
Note that none of the actual games yet take advantage of this; so it hasn't
been tested in anger (although it has been inspected by debugging).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4469 cda61777-01e9-0310-a592-d414129be87e
"
"863c25fc8295255fa6a401c3a895e8ecc58c5ea0","2004-08-16 16:51:18+00:00","Net's redraw function now uses the `dir' argument to determine whether it's
redrawing an undo. Seems to work.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4470 cda61777-01e9-0310-a592-d414129be87e
"
"a4882ef1ac8bd8cc539c95c31700ee10f146e9d2","2004-08-17 11:51:20+00:00","Remove extraneous underscores at start and end of Rectangles seeds.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4473 cda61777-01e9-0310-a592-d414129be87e
"
"effad913213324e995812e7df9de0481305f7520","2004-08-17 19:59:14+00:00","Now we have the `dir' parameter, we should use it where it makes
sense to do so.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4477 cda61777-01e9-0310-a592-d414129be87e
"
"8826722df210838274bf0e15a4f425ad1d80336c","2004-09-01 11:46:51+00:00","Deactivate the timer when we destroy the puzzle window. Otherwise it
might run again in mid-shutdown and cause chaos, if you hit `q' in
the middle of an animated sequence such as the Net finishing flash.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4525 cda61777-01e9-0310-a592-d414129be87e
"
"01bd146a2210c2e72003423e407ac10296da0c12","2004-09-06 15:17:59+00:00","Move the deactivate_timer() call from window_destroy() into
destroy(). I'm not sure how it cured the crash-on-quit bug, since it
was in completely the wrong place!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4533 cda61777-01e9-0310-a592-d414129be87e
"
"d1c6e680e8853956372e3b600a676757ae2c2796","2004-11-16 15:27:00+00:00","CVS revision numbers, stored as `cvs2svn:cvs-rev' properties, are a
useful piece of history in this repository but we don't want to
preserve their latest values on future commits. Accordingly, I'm
deleting them from all active development (though not from past
release branches).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4787 cda61777-01e9-0310-a592-d414129be87e
"
"1e0a4b08f7f4a388fcf3d01210bc1a7bd5ccae28","2004-11-16 15:29:14+00:00","Remove .cvsignore files on all active branches.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4788 cda61777-01e9-0310-a592-d414129be87e
"
"6d921bd508bc8343b9bc61e26d44c1009eb2d4c2","2004-11-18 11:30:39+00:00","Move MODULE files out of individual project directories into a
MODULES top-level directory, which is where the Tartarus website
scripts will (hopefully) start reading them from.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4813 cda61777-01e9-0310-a592-d414129be87e
"
"8089652bbe9245b468c7a815facd73abbaff5772","2004-12-07 20:00:58+00:00","New puzzle: `pattern'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4953 cda61777-01e9-0310-a592-d414129be87e
"
"644b630efa0b3d5a2e376a9be1aaf7c65a1da60f","2004-12-08 08:08:00+00:00","Game completion detection was occasionally failing to spot a
lingering GRID_UNKNOWN, causing it to declare victory too soon.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4954 cda61777-01e9-0310-a592-d414129be87e
"
"a914b4947984c74f29ac046e89f4817d1e658c6d","2004-12-08 09:37:57+00:00","Bah; r4954 introduced an array overrun.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4955 cda61777-01e9-0310-a592-d414129be87e
"
"92d7488efd9216afe17fc0f17297a41d3eccc17f","2004-12-08 13:42:55+00:00","Tweak Pattern doc for consistency with other puzzles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4957 cda61777-01e9-0310-a592-d414129be87e
"
"9eda008fcb4c625930849df743a4b532b2c5ca4a","2004-12-17 22:00:20+00:00","Add grotty casts to prevent negative -> large positive conversion of cursor
position in Windows frontend; this showed up as a UI glitch while dragging to
the left/top of the window in Rectangles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5007 cda61777-01e9-0310-a592-d414129be87e
"
"ed2e2dff380234267e6654332a09fdf3a63ecb91","2004-12-22 19:27:26+00:00","Add a `jumble' key (`J') to Net, which scrambles the positions of all unlocked
tiles randomly. (Rachel asked for this; it's been being tested for a good few
months now, and Simon didn't care either way, so in it goes :)

As part of this, the front end can now be asked to provide a random random
seed (IYSWIM).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5019 cda61777-01e9-0310-a592-d414129be87e
"
"a3f981cdf5d34bb8cd6553379126497ff3b3a2e1","2005-01-17 13:48:57+00:00","Rather than each game backend file exporting a whole load of
functions and a couple of variables, now each one exports a single
structure containing a load of function pointers and said variables.
This should make it easy to support platforms on which it's sensible
to compile all the puzzles into a single monolithic application. The
two existing platforms are still one-binary-per-game.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5126 cda61777-01e9-0310-a592-d414129be87e
"
"23717e750c7c2fc3180424a96f058f7e50214bde","2005-01-22 15:29:01+00:00","Arrange that we really _can_ compile all the puzzles into a single
binary if we choose: fix bugs in cube.c and sixteen.c that manifest
when compiled that way, and introduce list.c which provides a global
list of all the available puzzles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5169 cda61777-01e9-0310-a592-d414129be87e
"
"37cc1940977b7959e00c990d5b97d8a405a0fd86","2005-01-22 18:34:18+00:00","Initial checkin of a Mac OS X port of puzzles, using Cocoa. All
puzzles are compiled together into a single monolithic application
which allows you to select each one from one of its menus.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5173 cda61777-01e9-0310-a592-d414129be87e
"
"9bd54dd32782757a10101962a07b7eaca8d260c8","2005-01-22 18:46:51+00:00","Update TODO.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5174 cda61777-01e9-0310-a592-d414129be87e
"
"5ac68e7767f55a4153610a6d3607006e71a96507","2005-01-23 08:36:24+00:00","Flesh out the menus a bit.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5175 cda61777-01e9-0310-a592-d414129be87e
"
"a9e4e4255b5aa2856282f751dc3232b0e07c1dda","2005-01-23 09:17:46+00:00","Dynamically frob the menu bar to achieve selection of game presets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5176 cda61777-01e9-0310-a592-d414129be87e
"
"40d23a532b2c9d9d200999605169c33a5fbd26bc","2005-01-23 09:37:16+00:00","I _think_ this has just fixed an uninitialised-memory bug, but I'm
not sure.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5177 cda61777-01e9-0310-a592-d414129be87e
"
"f1b76248c088b1770b87dfb6c35d4f8ef7966cf1","2005-01-23 09:59:45+00:00","Ah, no, _that_ fixes the malloc problem. I'd forgotten that midend.c
already takes care of managing the allocation of game presets, so
there's no need for me to introduce scary ObjC machinery to do so in
the frontend.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5178 cda61777-01e9-0310-a592-d414129be87e
"
"f562bcd1f3ae064df641de26ae1d7ad7475e844f","2005-01-23 11:20:31+00:00","Added a framework for putting things other than the binary into a
Mac OS X application bundle, and provided an icon for Puzzles.

Also renamed the OS X source file from macosx.m to osx.m, so that it
can sit beside other things such as osx-info.plist and not cause
enormously long filenames.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5179 cda61777-01e9-0310-a592-d414129be87e
"
"9e8f3576eb47c23814e2869200cff06a280fd99e","2005-01-23 22:28:18+00:00","Implemented the configurable dialog box mechanism, allowing custom
game sizes and entering of specific game IDs. I think this is now a
plausibly usable port, even if still by no means _finished_.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5182 cda61777-01e9-0310-a592-d414129be87e
"
"275e990963d37f6b6c31cfce3729653d956abf52","2005-01-24 07:37:50+00:00","Status bar support.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5183 cda61777-01e9-0310-a592-d414129be87e
"
"e2d37e4f1600ce861762e590589ef87585025456","2005-01-24 07:42:01+00:00","Added a dock menu which makes it more convenient to launch a new
game window.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5184 cda61777-01e9-0310-a592-d414129be87e
"
"ca0c3d183c8bbd646f599813ea950a3734464f60","2005-01-24 10:35:54+00:00","Improve fatal error handling.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5185 cda61777-01e9-0310-a592-d414129be87e
"
"ee13ad83bbac43088b31667e99a6367d0fe287e3","2005-01-24 10:45:23+00:00","Fix two window-resizing bugs introduced by the addition of the status bar.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5186 cda61777-01e9-0310-a592-d414129be87e
"
"a46b6a5d6d601f38ead50d3667e958aa84499f91","2005-01-24 10:50:17+00:00","The main grid outline in Pattern was asymmetric between the top/left
edges and the bottom/right ones. Fix it. (Also remove it from the
todo list in osx.m, where I had entered it in the assumption that it
was a bug in my new OS X port! Turns out it's an entirely platform-
independent bug.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5187 cda61777-01e9-0310-a592-d414129be87e
"
"3837938f95739b963e598fa9789faee8d9e655d4","2005-01-24 12:05:21+00:00","First cut at online help under OS X. I just built the HTML version
of the manual using Halibut (with one additional magic tag in the
<HEAD> section), stuck it in the right part of the application
bundle, referenced it in Info.plist, and added a Help menu.
Everything else was automatic. Not bad!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5190 cda61777-01e9-0310-a592-d414129be87e
"
"6b9019b5c6c01f43dc0ac610e3113e2071838d07","2005-01-24 12:09:51+00:00","The #definition of COMBINED was done very badly: it was a piece of
platform-dependent code in puzzles.h (ick), which in turn depended
on the magic symbol MAC_OS_X being defined by mkfiles.pl itself
(yuck). Suddenly realised I can do much better simply by putting it
in an OS X makefile extras section in Recipe, and removing both
previous hacks. Much nicer.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5191 cda61777-01e9-0310-a592-d414129be87e
"
"75e7f6092f8738fbdcba8b76d38ac2d23f6cc84e","2005-01-24 13:00:11+00:00","Improve OS X help: split back up into multiple files (thanks to
Halibut's new \cfg{html-local-head} directive), and add some CSS to
mimic the font choices of system help files.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5194 cda61777-01e9-0310-a592-d414129be87e
"
"2390db3cab8d0b3c37884d07934d8bbb83ee1af8","2005-01-24 13:04:37+00:00","Help should have the shortcut Command-?.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5195 cda61777-01e9-0310-a592-d414129be87e
"
"6b56a50aa819c791677bc71d8a4a94be39885178","2005-01-24 13:44:24+00:00","`make release' target, which builds a .dmg disk image in what
appears to be the approved Apple fashion.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5197 cda61777-01e9-0310-a592-d414129be87e
"
"049973b362a5ffa11d2db089d4921ccd72643d89","2005-01-24 14:10:16+00:00","Ahem. Rogue copy and paste was causing preset menu items to go into
the Help menu rather than the Type menu. Fixed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5199 cda61777-01e9-0310-a592-d414129be87e
"
"adcfa141a3efec2f74d8847c90c1e053c359aa81","2005-01-24 15:45:37+00:00","Updates for OS X port (including updating copyright statements).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5201 cda61777-01e9-0310-a592-d414129be87e
"
"2b1eeb7eaa4bca647e0903103c99ca31687d2776","2005-01-25 09:07:54+00:00","Ahem. Lots of stuff, including the new OS X sources, was being left
out of the tarball by makedist.sh, causing the downloaded source
tree to fail mkfiles.pl. Worse still, the GTK Makefile wasn't
included, so people _needed_ to run mkfiles.pl! Both now fixed, I
think.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5205 cda61777-01e9-0310-a592-d414129be87e
"
"1a203a3e551a883a2066874a2779275688457e49","2005-01-25 14:07:46+00:00","Include code in midend.c to sanitise streams of mouse events so that
back ends can be assured of always receiving them in a sensible
sequence (button-down, followed by zero or more drags, followed by
button-up, and never changing button in the middle of such a
sequence). I have a suspicion this issue was the cause of the
mysterious Pattern grid updates seen by Dan during testing last
night.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5208 cda61777-01e9-0310-a592-d414129be87e
"
"a2b5981d5820f39080123cfa02ccab54472e4862","2005-01-25 18:07:08+00:00","Sanitising the mouse input data was a good idea, but my
implementation sucked. Revise it completely.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5209 cda61777-01e9-0310-a592-d414129be87e
"
"165fecb8819b57296acb1fd73fc6eb7c1aabff8d","2005-01-25 21:19:28+00:00","Need to impose a _maximum_ width on edit boxes, as well as a minimum
width; if allowed to resize to the text within them, they look
terribly silly when containing an entire Rectangles or Pattern game
ID.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5210 cda61777-01e9-0310-a592-d414129be87e
"
"c9426627660c99b5013ba4068a47d4d64bde422b","2005-02-05 16:43:13+00:00","I've found NSView's setNeedsDisplayInRect: method, which is
obviously better than just calling setNeedsDisplay on the whole
thing...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5258 cda61777-01e9-0310-a592-d414129be87e
"
"8520d7f8f5689c43d8a29dd7e135a000a0a1bd96","2005-02-24 08:13:32+00:00","Fixes in grid generation for pedantic special cases when one or both
grid dimensions are very small.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5390 cda61777-01e9-0310-a592-d414129be87e
"
"bfffdb57ca4ecef4c212104d2372acc181132048","2005-02-24 09:13:06+00:00","Stop the Pattern grid generation from generating an entire row or
column of the same colour (at least when the dimensions are big
enough to make this feasible). It's a little bit too easy otherwise!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5391 cda61777-01e9-0310-a592-d414129be87e
"
"dd14e41da81a3b261c02cb78e27f0d357258b0e9","2005-03-15 14:24:45+00:00","Oops. Just noticed that the Windows front end completely ignores the
`colour' parameter in draw_text().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5507 cda61777-01e9-0310-a592-d414129be87e
"
"399c8ee28f5321f5eb4587d52cac1bc3c03c4f71","2005-04-23 16:35:28+00:00","Initial checkin of `Solo', the number-placing puzzle popularised by
the Times under the name `Sudoku'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5660 cda61777-01e9-0310-a592-d414129be87e
"
"b117ef7bd51e735b1ddd08f5d9f94e7d17653e8b","2005-04-23 16:41:35+00:00","Visual C points out a couple of typos.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5661 cda61777-01e9-0310-a592-d414129be87e
"
"a88a32950a7c33981d1a9466e5b9541edd723fac","2005-04-23 17:09:19+00:00","Simplify clip region handling under Windows, which also makes Solo's
clipping policy work properly. I haven't proved why it didn't work
the previous way, but I have a good guess: I think that clip regions
are handled by reference. So I saved the old clip region out of the
DC, then did an IntersectClipRect, and then selected the old clip
region back in again - but the old clip region had never been
_de_-selected, because IntersectClipRect didn't change which object
was selected but rather it modified-in-place the one that already
was selected. So my attempt to restore the old clip region did
nothing whatsoever, and thus clipping to two different rectangles
during the same draw sequence failed. Now I'm completely destroying
the clip region during unclip(), which seems to work better.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5662 cda61777-01e9-0310-a592-d414129be87e
"
"21a74d903da10c4238cc5b83c582f1b252e65122","2005-04-23 18:16:54+00:00","Doc tweaks for Solo.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5665 cda61777-01e9-0310-a592-d414129be87e
"
"6944691423531d904bbdc2690ee0683bc0d17f11","2005-04-24 09:21:57+00:00","Introduce configurable symmetry type in generated puzzles, and drop
the default symmetry from order-4 down to order-2, which seems to
mitigate the excessively-full-grid problem by permitting more
freedom to remove stuff.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5666 cda61777-01e9-0310-a592-d414129be87e
"
"3e4032aa868138b1ae975b6da17c1f3209bb0f23","2005-04-24 10:06:47+00:00","Outstandingly cute mathematical transformation which allows me to
lose a lot of code duplication in nsolve while preserving efficiency.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5667 cda61777-01e9-0310-a592-d414129be87e
"
"a1e7190836e576d445686d13830023483456c31f","2005-04-25 14:03:53+00:00","Various changes prompted by my boss taking an interest:
- added a compilation option -DSTANDALONE_SOLVER which makes both
of Solo's internal solvers accessible from the command line.
- fix a bug in nsolve turned up by testing in this mode: it failed
to iterate at all! Oddly, this massive improvement to the
effectiveness of nsolve hasn't emptied the generated grids by
very much.
- add an extra mode of reasoning to my to-do list (which is the
dual of one already there, so I'm kicking myself).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5670 cda61777-01e9-0310-a592-d414129be87e
"
"5232e54a8c4191ba1ef1c43c0ec855a3d332a03a","2005-04-25 14:17:14+00:00","Oops; _actually_ add the reasoning mode I mentioned in the last
checkin.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5671 cda61777-01e9-0310-a592-d414129be87e
"
"a0f2e0b1249e9d8a4baf00e7671c3779234be032","2005-04-25 14:37:33+00:00","Remove some legacy debugging code which was breaking the MinGW
build, and which is redundant given the new standalone solver
functionality.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5672 cda61777-01e9-0310-a592-d414129be87e
"
"1ead41dfb489871d4eae1613ed3caca7fa91b862","2005-04-26 08:20:25+00:00","Fix trivial UI glitch involving clicking on the border outside the
grid. I'm really starting to get annoyed by the default round-
towards-zero behaviour of C integer division.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5681 cda61777-01e9-0310-a592-d414129be87e
"
"43bb79792c24352c5e8680d03dd3af546cf70780","2005-04-26 11:19:00+00:00","Implement the remaining modes of reasoning in nsolve, and thus
enable configurable puzzle difficulty. I'm only generating grids up
to Times level (complicated non-recursive analysis but guessing
never required); I wouldn't object to providing a Telegraph
difficulty level (guessing required) but it turns out to be very
hard indeed to generate at random. I might still add it later
(probably under the name `Unreasonable' :-) if I can think of an
efficient way to find them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5682 cda61777-01e9-0310-a592-d414129be87e
"
"1b50e431c53e9e01efcf958a407995cf276b87e5","2005-04-26 17:03:56+00:00","The command-line solver's difficulty gradings now use the same
terminology as the puzzle GUI.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5683 cda61777-01e9-0310-a592-d414129be87e
"
"89b3ea5e12ca67355950d0c314c488c57238a791","2005-04-27 11:13:33+00:00","Pattern also contains an internal solver, so here's a command-line
interface to it just in case it comes in handy.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5686 cda61777-01e9-0310-a592-d414129be87e
"
"a2c680df0b540c9a363a2263d78963b0526623e7","2005-04-27 16:59:18+00:00","Command-line solver was dividing up non-square puzzles the wrong way
round.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5691 cda61777-01e9-0310-a592-d414129be87e
"
"999839f38f4be76e105edd3bac6a95c31ae45de3","2005-04-27 19:39:20+00:00","Patches for GTK 2. Puzzles already _built_ under GTK 2, but now it
builds better:
- the GTK makefile now defines $(GTK_CONFIG) which you can
override, so you can build for GTK 2 with no makefile-editing
simply by running `make GTK_CONFIG='pkg_config gtk+-2.0''
- we use Pango to find appropriate fonts, which means the text in
the puzzles actually (gasp!) adapts its size to the
circumstances. Unfortunately, I've been unable to do this
portably without depending on _either_ a Pango function that
isn't present in older versions _or_ the underlying window system
being X11; I'd appreciate someone doing better.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5693 cda61777-01e9-0310-a592-d414129be87e
"
"d3a96d7800c58b3976a3a74161707bb339fcc52f","2005-04-27 19:44:34+00:00","Fix inconsistent vertical centring of text in GTK (and update Solo's
todo list, which complained about this because Solo was the only
puzzle noticeably affected).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5694 cda61777-01e9-0310-a592-d414129be87e
"
"3417de3c987a8e11ab4cc64d8938beaaba573bbb","2005-04-28 12:50:56+00:00","Aha, even better: a Makefile hack that causes auto-detection of GTK
2 and fallback to GTK 1.2.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5705 cda61777-01e9-0310-a592-d414129be87e
"
"ea77644a5e9c6b52821500b750149f5f1b03764c","2005-04-29 08:11:01+00:00","Correct block coordinate display when standalone solver shows its
working.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5706 cda61777-01e9-0310-a592-d414129be87e
"
"c03e70c141b29c080c5216014284202712eb9631","2005-04-29 17:07:19+00:00","Added a `--generate' command-line option in the GTK port of every
puzzle, to make it construcct puzzle IDs and output them on stdout.
Also checked in print.py, a script which reads puzzle IDs on stdin
and produces PostScript output. With these, you can generate pages
of Pattern, Rectangles and Solo puzzles to take on trains with you.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5707 cda61777-01e9-0310-a592-d414129be87e
"
"a6eaa44b77ef563af9d242ef6bce8d3ce2fba461","2005-04-30 12:54:22+00:00","New puzzle: `twiddle', generalised from a random door-unlocking
gadget in Metroid Prime 2.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5708 cda61777-01e9-0310-a592-d414129be87e
"
"68ada87162d86ed72cd7ff88f3e0777ef25566b5","2005-04-30 13:11:22+00:00","Pango-derived fonts seem to generally look better if I ask for them
in bold.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5709 cda61777-01e9-0310-a592-d414129be87e
"
"88a18a874773d92b72df7fc9bd2a2d8a8119a87b","2005-04-30 13:20:35+00:00","Add an ignore property.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5711 cda61777-01e9-0310-a592-d414129be87e
"
"e0913c9b9bb81a92589149210dc7416f795bf420","2005-04-30 14:14:14+00:00","Twiddle now has an additional mode in which tile orientation
matters. This mode is hard enough to scare the wossnames out of me,
but that's no reason not to put it in anyway!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5713 cda61777-01e9-0310-a592-d414129be87e
"
"d47c71618252735f1a9759981919329c9ec09dbc","2005-04-30 14:14:37+00:00","Bah, and of course there's a TODO comment I forgot to remove.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5714 cda61777-01e9-0310-a592-d414129be87e
"
"ef052960edbb6e57799592f0e12a8831549f6535","2005-04-30 14:38:20+00:00","After brainstorming with Gareth, we've decided that this is a much
simpler and better way to indicate tile orientation than those
colour bars.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5717 cda61777-01e9-0310-a592-d414129be87e
"
"5aea51503703f3d72d495e94510b26da95d4d2cb","2005-04-30 14:50:33+00:00","Fix game IDs, which I broke in the orientability change. Also
introduce a sensible game ID notation for orientable games, and
finally (*blush*) turn the orientability triangles back the right
way up.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5718 cda61777-01e9-0310-a592-d414129be87e
"
"9afa22c3e65a0fd412bbfb8babb759ad6f302726","2005-05-01 10:57:23+00:00","I think Windows fonts look better in bold as well.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5721 cda61777-01e9-0310-a592-d414129be87e
"
"77982ce2807a9f8ac2718793699326322e100319","2005-05-01 10:57:47+00:00","Remove outdated comment :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5722 cda61777-01e9-0310-a592-d414129be87e
"
"586d1a5f37bd8e490d205e03ebbd96f0db284136","2005-05-01 11:07:13+00:00","I can never remember what that `TRUE' means in the game structure
definitions, so let's move it so that it's just next to the
functions it relates to. This also opens the way for me to add more
booleans next to other functions without getting confused as to
which is which.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5723 cda61777-01e9-0310-a592-d414129be87e
"
"c4efab01579d3ae67661cf05d3e7e500fb4222e8","2005-05-01 12:53:41+00:00","Introduced a new function in every game which formats a game_state
as text. This is used by front ends to implement copy-to-clipboard.
Currently the function does nothing (and is disabled) in every game
except Solo, but it's a start.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5724 cda61777-01e9-0310-a592-d414129be87e
"
"81369e2711821c20688dfdf7feb1b61d4533f621","2005-05-01 13:22:44+00:00","Copy-to-clipboard facility for Fifteen, Sixteen and Twiddle.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5725 cda61777-01e9-0310-a592-d414129be87e
"
"be03a117c94d1d1107d20b21a5b9891259357590","2005-05-01 13:51:46+00:00","Copy-to-clipboard for Rectangles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5726 cda61777-01e9-0310-a592-d414129be87e
"
"4a0c9868828e96e176479b9435de7eda1a1f3d93","2005-05-01 14:05:03+00:00","The addition of a `Copy' menu item on OS X was really beginning to
strain my unconventional menu organisation, so I've reverted to
having `File' and `Edit' menus like everyone else.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5727 cda61777-01e9-0310-a592-d414129be87e
"
"206839142b08cddae67232b5d19a8fd32cfe1b8e","2005-05-02 09:42:09+00:00","It's actually vitally important, it turns out, to have all of the
`Cut', `Copy' and `Paste' items in the Edit menu of an OS X
application - because there's nothing else that enables the keyboard
cut/copy/paste shortcuts in an edit box! OS X Puzzles can now have
game IDs pasted into it, which it previously couldn't.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5728 cda61777-01e9-0310-a592-d414129be87e
"
"d2ac5e7e56f7e173be8709451a29061c861415fa","2005-05-02 10:12:26+00:00","Introduce the concept of a `game_aux_info' structure. This is
constructed at the same time as an internally generated game seed,
so that it can preserve any interesting information known by the
program at generation time but not physically contained within the
text of the game seed itself. (Such as, for example, the solution.)
Currently not used for anything yet, but it will be.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5729 cda61777-01e9-0310-a592-d414129be87e
"
"8ba56ea46b55bd6655310136c32f3aee1b43f8e4","2005-05-02 10:55:32+00:00","Oops; forgot to check in the copy-to-clipboard option for Windows.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5730 cda61777-01e9-0310-a592-d414129be87e
"
"f813f66ecb51e7b0e0af9bad3ea54592dee420d1","2005-05-02 13:17:10+00:00","Added an automatic `Solve' feature to most games. This is useful for
various things:
- if you haven't fully understood what a game is about, it gives
you an immediate example of a puzzle plus its solution so you can
understand it
- in some games it's useful to compare your solution with the real
one and see where you made a mistake
- in the rearrangement games (Fifteen, Sixteen, Twiddle) it's handy
to be able to get your hands on a pristine grid quickly so you
can practise or experiment with manoeuvres on it
- it provides a good way of debugging the games if you think you've
encountered an unsolvable grid!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5731 cda61777-01e9-0310-a592-d414129be87e
"
"a2bcca38e871413cfd2ff6d6761615454394ee51","2005-05-02 13:18:24+00:00","Silly (but harmless) typo.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5732 cda61777-01e9-0310-a592-d414129be87e
"
"f6acae876544cd7485ae742572492e4b0c340d0f","2005-05-02 13:22:25+00:00","Ahem. The `Solve' option in orientable Twiddle needs to correct the
orientations as well as the order!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5733 cda61777-01e9-0310-a592-d414129be87e
"
"62fc50f389a2851be5072cb4b7c2ef7498176858","2005-05-02 13:27:59+00:00","Forgot to mention that you can undo a Solve operation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5734 cda61777-01e9-0310-a592-d414129be87e
"
"f241c41380b46d3a88ca1e0103878253447b96a4","2005-05-02 13:41:34+00:00","Add more useful ignores.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5735 cda61777-01e9-0310-a592-d414129be87e
"
"9eda4fb576b69b91d6ff6912cdab1826ea8a97a6","2005-05-02 16:37:20+00:00","Fix line endings when pasting on Windows.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5736 cda61777-01e9-0310-a592-d414129be87e
"
"99e8da4606542bad70d5b9060086bb542528a29d","2005-05-02 16:59:50+00:00","I've changed my mind. For the benefit of users with slower
computers, let's save the Solo and Pattern grids at generation time
and regurgitate them when asked to solve, rather than doing all the
work over again.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5737 cda61777-01e9-0310-a592-d414129be87e
"
"d2b531c9c79b74907b018a9e050c59f55ddd5046","2005-05-04 12:24:16+00:00","markup typo


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5739 cda61777-01e9-0310-a592-d414129be87e
"
"da0989893f0762119ce015caba871b33e34daada","2005-05-04 12:52:51+00:00","The Twiddle shuffling algorithm was theoretically parity-unbalanced:
it performed a fixed number of shuffling moves, and on each one it
had a 2/3 chance of flipping the permutation parity and a 1/3 chance
of keeping it the same. Markov analysis shows that over a run of
1500-odd shuffle moves this will end up being an undetectably small
actual bias in the parity of the generated grid, but it offends my
sense of pedantry nonetheless so here's a small change to make the
number of shuffling moves itself have randomly chosen parity. The
parity of generated grids should now be _exactly_ 50:50.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5742 cda61777-01e9-0310-a592-d414129be87e
"
"4251d3c983803a5e9bbaf2e9cdcbb7e552599241","2005-05-04 12:56:04+00:00","Allow for trailing '\0' in game_text_format() in various games.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5743 cda61777-01e9-0310-a592-d414129be87e
"
"55868ec04d23476c628b3e5f37283c8ec9906330","2005-05-04 13:17:45+00:00","Fix outdated comment


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5744 cda61777-01e9-0310-a592-d414129be87e
"
"fc755d0612895135f4ad0a0fc25cbc0eb4699d16","2005-05-07 12:30:29+00:00","Aha, here's a nice easy way to generate really hard puzzles. Added
the missing fifth difficulty level to Solo: `Unreasonable', in which
even set-based reasoning is insufficient and there's no alternative
but to guess a number and backtrack if it didn't work. (Solutions
are still guaranteed unique, however.) In fact it now seems to take
less time to generate a puzzle of this grade than `Advanced'!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5756 cda61777-01e9-0310-a592-d414129be87e
"
"2e7f8e81781a59361ae112c1c63417b169ee596a","2005-05-07 12:35:04+00:00","Add 3x3 Trivial to the presets list, and make it the default.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5757 cda61777-01e9-0310-a592-d414129be87e
"
"7a97da05078829b45527e16288c254b7e9e5ef8d","2005-05-07 16:07:26+00:00","solve_game() is passed the _initial_ game state, not the most recent
one; so we can't just set `ret->completed = ret->movecount' and hope
it's been set to something other than zero. Instead, we set both
move counts to 1, which is entirely arbitrary but works.

This fixes a subtle bug with the Solve feature: if you pressed
Solve, then disturbed the grid, then brought it back to the solved
state by making more forward moves (rather than using Undo), then
the first time you did this the `Moves since auto-solve' status line
would reset to zero.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5759 cda61777-01e9-0310-a592-d414129be87e
"
"c69ca10cc922e1764a49cea389fda08941378f9d","2005-05-11 13:03:17+00:00","Completion flashes were occasionally failing to be cleaned up if a
subsequent move animation began during them. Tracked this to
overenthusiastic use of clip() and fixed it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5766 cda61777-01e9-0310-a592-d414129be87e
"
"8e790e198a9f565afb9b8672b1e57348d53eceef","2005-05-11 18:49:42+00:00","Bah. Try the r5766 fix again, this time without the typo.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5767 cda61777-01e9-0310-a592-d414129be87e
"
"cb20cdc23e1aa85c155b00db4a11b330e331fab0","2005-05-11 20:38:10+00:00","The two Rubik-like puzzles, Sixteen and Twiddle, now support an
additional configuration parameter, which is the number of shuffle
moves. By default the grid will be fully shuffled so that you need a
general solution algorithm to untangle it, but if you prefer you can
request a grid which has had (say) precisely four moves made on it,
and then attempt to exactly reverse those four moves.

Currently this feature is only available from the Custom box, and
not in any presets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5769 cda61777-01e9-0310-a592-d414129be87e
"
"133cb716c8e05bd1e27590e4a9a61de7022ff234","2005-05-12 18:25:57+00:00","I've had two complaints that Solo ought to recognise the numeric
keypad. The reason it doesn't is because front ends were carefully
translating the numeric keypad into 8-way directional keys for the
benefit of Cube. Therefore, a policy change:
- front ends process the numeric keypad by sending MOD_NUM_KEYPAD |
'3' and similar
- front ends running on a platform with Num Lock SHOULD do this
_irrespective_ of the state of Num Lock
- back ends do whatever they see fit with numeric keypad keys.
Result: the numeric keypad now works in Solo, and also works in OS X
Cube (which it previously didn't because I forgot to implement that
bit of the front end!).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5774 cda61777-01e9-0310-a592-d414129be87e
"
"066fb5d09b196bb9f97a9714c59d8f94ccc1fbeb","2005-05-15 10:31:11+00:00","Introduce a versioning mechanism, and an `About' box in all front
ends. Versioning will be done solely by Subversion revision number,
since development on these puzzles is very incremental and gradual
and there don't tend to be obvious points to place numbered
releases.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5781 cda61777-01e9-0310-a592-d414129be87e
"
"c6d5e5aa862c0be60e4a8e581b81464466c918c7","2005-05-15 10:52:23+00:00","Added automatic determination of the SVN revision number if a build
takes place in a checked-out copy. Also added mkunxarc.sh which does
the same version determination before building its archive.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5782 cda61777-01e9-0310-a592-d414129be87e
"
"d1751d509f96525c5ed3f3525278f3c1bd2e7b53","2005-05-15 10:58:09+00:00","Er, except that I already had a makedist.sh. Transferred new version
code into that!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5783 cda61777-01e9-0310-a592-d414129be87e
"
"d16eefeb2d077224b7f6a56385602d7b8f5c388e","2005-05-15 11:12:05+00:00","Missed a vital semicolon off the Cygwin version.c makefile fragment.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5784 cda61777-01e9-0310-a592-d414129be87e
"
"ba550f607e1d2c31a68f8a0f8311e918664b2780","2005-05-16 18:57:09+00:00","The game IDs for Net (and Netslide) have always been random seeds
rather than literal grid descriptions, which has always faintly
annoyed me because it makes it impossible to type in a grid from
another source. However, Gareth pointed out that short random-seed
game descriptions are useful, because you can read one out to
someone else without having to master the technology of cross-
machine cut and paste, or you can have two people enter the same
random seed simultaneously in order to race against each other to
complete the same puzzle. So both types of game ID seem to have
their uses.

Therefore, here's a reorganisation of the whole game ID concept.
There are now two types of game ID: one has a parameter string then
a hash then a piece of arbitrary random seed text, and the other has
a parameter string then a colon then a literal game description. For
most games, the latter is identical to the game IDs that were
previously valid; for Net and Netslide, old game IDs must be
translated into new ones by turning the colon into a hash, and
there's a new descriptive game ID format.

Random seed IDs are not guaranteed to be portable between software
versions (this is a major reason why I added version reporting
yesterday). Descriptive game IDs have a longer lifespan.

As an added bonus, I've removed the sections of documentation
dealing with game parameter encodings not shown in the game ID
(Rectangles expansion factor, Solo symmetry and difficulty settings
etc), because _all_ parameters must be specified in a random seed ID
and therefore users can easily find out the appropriate parameter
string for any settings they have configured.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5788 cda61777-01e9-0310-a592-d414129be87e
"
"f86dff881375d53e925e3cb3757c9c8b8c0115f3","2005-05-17 10:59:47+00:00","Cube's dup_game() function was missing a field. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5789 cda61777-01e9-0310-a592-d414129be87e
"
"4b39e05db6076c91ee9749c07c09d0e0ad3a3f62","2005-05-17 11:00:15+00:00","comment c'n'p error


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5790 cda61777-01e9-0310-a592-d414129be87e
"
"dbe6e3e7c3f09b70302771f318a3bb8cc2e518f3","2005-05-17 11:46:55+00:00","`Restart' is now an undo-able action: it appends a move to the end
of the undo list rather than destroying it. Partly this is because
accidental restarts are a real pain, and partly because it allows
you to compare the initial to the current state by restart-then-undo
which is handy in some puzzles.

In order to do this, I've introduced an additional per-entry field
in the undo list in the midend, which tracks which states were
created by `unusual' operations (Solve and Restart). The midend
takes care of suppressing animation and completion flashes during
transitions between a `special' state and its predecessor, relieving
the game backends of having to do it individually.

(This probably means I could remove some complexity in the
flash_time() functions in most backends, but I haven't done that in
this checkin.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5791 cda61777-01e9-0310-a592-d414129be87e
"
"14394f75552adad6c95b17a1c8ca767ce798fca0","2005-05-17 11:47:33+00:00","Just for Gareth: a means of overriding individual game colour
settings using environment variables. GTK frontend only, because
this is an unsupported (and unprincipled) hack.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5792 cda61777-01e9-0310-a592-d414129be87e
"
"f51cc3d0499a55513f02074794436b729c88caf1","2005-05-17 11:53:42+00:00","Keyboard shortcuts for Twiddle: abcdABCD in line with the notation
Gareth and I have been using to analyse the game, and also the
number pad. They don't work sensibly for all sizes, but they'll be
handy for the most common ones.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5793 cda61777-01e9-0310-a592-d414129be87e
"
"c877cc312cf62818013fea13b7a763f40fadd783","2005-05-17 12:02:30+00:00","Null-terminate generated Net/Netslide descriptive game IDs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5794 cda61777-01e9-0310-a592-d414129be87e
"
"d34375eceac7d66481888d039fc2b2e5c73f776f","2005-05-17 17:20:08+00:00","After much thought, I've decided that `Restart' on r is not a
particularly useful keypress, particularly given how easy it is to
confuse it with `Redo'. So both r and ^R are now Redo, and Restart
is relegated to being a menu-only option.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5796 cda61777-01e9-0310-a592-d414129be87e
"
"ececf34431df8a57f3df7a6a16773ab174348df2","2005-05-17 18:04:12+00:00","Update doc for recent changes in Restart behaviour.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5799 cda61777-01e9-0310-a592-d414129be87e
"
"55ef25547b2086eb17f9ec15ee67bc337d05aa69","2005-05-18 08:34:01+00:00","Standalone solvers were broken by my recent API changes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5800 cda61777-01e9-0310-a592-d414129be87e
"
"34476e542f9ecab2045d7727c7cf53c87fb430d7","2005-05-18 09:04:47+00:00","Move the colour configuration into midend.c so that it becomes
cross-platform, and rename the environment variables so that they
follow the puzzle name. Should allow a static environment
configuration for each puzzle. Also introduced a <game>_PRESETS
variable for people whose favourite configuration isn't on the Type
menu by default.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5801 cda61777-01e9-0310-a592-d414129be87e
"
"3d1df68131b487ed84824843fa24dceb405c9924","2005-05-18 17:25:30+00:00","It's a good idea to validate presets received from the environment.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5805 cda61777-01e9-0310-a592-d414129be87e
"
"f49f65e281e8cbf465c2b01f4411757514a37ad8","2005-05-18 17:27:16+00:00","--version.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5806 cda61777-01e9-0310-a592-d414129be87e
"
"cf1b369be1374b26d70efaa55acb2d54a5495f0a","2005-05-18 17:28:48+00:00","Rectangles random seed IDs shouldn't bother stating the expansion
factor if it's zero.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5807 cda61777-01e9-0310-a592-d414129be87e
"
"51eb40bf24ec00ccddfbf5ac53ad2c3a3464b829","2005-05-18 17:41:53+00:00","If you paste in a random seed with different ephemeral parameters
from the currently configured ones, and then bring the Random Seed
box back up, the wrong parameters get shown, and the resulting
random seed is incorrect for the current game.

At least, it was, until this checkin.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5808 cda61777-01e9-0310-a592-d414129be87e
"
"3344f294435351b4de54e42cde3aaba9374a220d","2005-05-19 16:17:03+00:00","Cunning way to ensure unique solutions in generated Rectangles
puzzles. I generate the grid of rectangles as normal, but before I
place the numbers I run it through a non-deterministic solver
algorithm which tries to do as much as it can with as little
information about where the numbers are going to be. The solver
itself narrows down the number placement when it runs out of steam,
but does so as little as possible. Once it reaches a state where it
has ensured solubility, and then the generation algorithm chooses
random number placement from whatever's left.

Occasionally it paints itself into a corner and can't ensure a
unique solution no matter what happens; in that situation we just
have to give up, generate a fresh grid, and try again.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5809 cda61777-01e9-0310-a592-d414129be87e
"
"d7f268d64504f197d722fb95d7faa14fb1175e6a","2005-05-20 12:30:37+00:00","Move IDM_ABOUT so that it doesn't overlap the presets space! Ahem.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5814 cda61777-01e9-0310-a592-d414129be87e
"
"4afb3c34a001b00ec4bc8105ce24eb05ba36acaa","2005-05-21 13:23:26+00:00","Solution uniqueness for Net. Can be disabled on request (but is
enabled by default), since ambiguous sections in grids can present
additional interesting challenges. I think uniqueness is a better
default, though.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5816 cda61777-01e9-0310-a592-d414129be87e
"
"48bd11bdb5bd12f457ea3f9a9181ed94ae8467e4","2005-05-21 13:39:23+00:00","Cleanups:
- fix documentation of Net's unique solution option (should have
tested before last checkin)
- make unique solutions optional in Rectangles too (same reasons)
- tidy up various issues in parameter encoding in both games.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5818 cda61777-01e9-0310-a592-d414129be87e
"
"a052b2f523ac439b08725f1806415f392449e1fb","2005-05-21 22:07:48+00:00","Ensure that an old random seed isn't left around for the user to see when a
descriptive ID has been specified.
Fix tiny memory leak.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5825 cda61777-01e9-0310-a592-d414129be87e
"
"ab0b38da86e3a4c36f54abf73f929558ee033248","2005-05-22 11:06:25+00:00","It occurred to me yesterday that Net could perfectly well be played
on paper, so here's a routine to print it out.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5826 cda61777-01e9-0310-a592-d414129be87e
"
"7e940cf047f452d21f6e745c98a1e067873ef943","2005-05-22 11:15:03+00:00","The Net solver now makes use of barrier information when applied to
a typed-in grid.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5827 cda61777-01e9-0310-a592-d414129be87e
"
"82b9c2596f9801976c4b724a05e7eb15e380a116","2005-05-22 11:45:20+00:00","Special case in dead-end checking which prevents the solver falling
over on a grid containing a 0 (completely blank) tile. This can't
happen in self-generated grids, but can happen if you type in a grid
from another Net implementation. Previously, the solver would notice
(technically correctly!) that a completely blank tile connects to no
other tiles and thus forms an isolated subgraph, and would therefore
complain that no orientation of that tile could possibly yield a
valid solution...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5828 cda61777-01e9-0310-a592-d414129be87e
"
"2de2c3851b74a0488abb6bc223c9a9dbadebb834","2005-05-22 12:14:39+00:00","Another tweak to the solver to make it handle blank tiles correctly.
The previous checkin stopped it choking on them, but it didn't
actually manage to _deduce_ that all the edges bordering them had to
be closed. Now it does better.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5829 cda61777-01e9-0310-a592-d414129be87e
"
"7e9409312fd12215fd446b516adf2b8d917cf26f","2005-05-22 12:45:39+00:00","Forgot to add print.py to the source archive. Ahem.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5830 cda61777-01e9-0310-a592-d414129be87e
"
"ca99a2c3959a7fe6d3496ae5f5ba47e0e0f8c4d2","2005-05-22 13:35:13+00:00","Aesthetic improvements, mostly suggested by Gareth.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5833 cda61777-01e9-0310-a592-d414129be87e
"
"91858c65c05cb4dc7670dad24920ff024a393091","2005-05-23 11:03:52+00:00","Net hangs if you ask it for a 2xn or nx2 wrapping puzzle with a
unique solution. This, it turns out, is because there is literally
no such thing. Protective constraint added to validate_params(),
with a proof in a comment alongside.

If you really want a 2xn or nx2 wrapping puzzle, you can still have
one if you turn uniqueness off.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5835 cda61777-01e9-0310-a592-d414129be87e
"
"d7200c0ce535b74f01caef4985eca648170963c7","2005-05-23 11:13:39+00:00","The GTK `--generate' option didn't validate the game parameters. It
does now.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5836 cda61777-01e9-0310-a592-d414129be87e
"
"d7277e643d49589f019a54546ef3f46790cef3af","2005-05-23 11:15:39+00:00","I'm sick of `--generate' giving the same answers if you run it twice
in one second. Switched the Unix get_random_seed() to using
gettimeofday() rather than time().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5837 cda61777-01e9-0310-a592-d414129be87e
"
"a0c8159cbd01251eddbced8b1c807fd7eb76e2bb","2005-05-23 12:02:37+00:00","Avoid leading zeroes on internally generated random seeds, _just_ in
case they confuse anyone who expects the same seed without the
leading zero to be equivalent.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5838 cda61777-01e9-0310-a592-d414129be87e
"
"30dddda96db3e5d740471bbb0413680141b9b0f7","2005-05-24 20:28:38+00:00","Mention NetWalk and update comment


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5841 cda61777-01e9-0310-a592-d414129be87e
"
"543199b22a8d96a855183458cab9edc81b4c2d69","2005-05-25 11:09:43+00:00","Support for `pencil marks' in Solo, by right-clicking and typing a
number. Many thanks to Chris Thomas, for helping with the detailed
UI design by means of testing an endless series of prototypes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5842 cda61777-01e9-0310-a592-d414129be87e
"
"19c6206bb8aa057f4b3428616a81d10b3620cdb3","2005-05-26 13:40:38+00:00","Add origin-shifting (Shift+cursors) and source-shifting (Ctrl+cursors) to Net.
(Adding modifier+cursors handling has had minor knock-on effects on the other
puzzles, so that they can continue to ignore modifiers.)

(An unfortunate side effect of this is some artifacts in exterior barrier
drawing; notably, a disconnected corner can now appear at the corner of the
grid under some circumstances. I haven't found a satisfactory way round
this yet.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5844 cda61777-01e9-0310-a592-d414129be87e
"
"f20f64335267c0c2bd54781d5866b222299c0949","2005-05-26 16:57:19+00:00","Since the split into random and descriptive IDs, the section on game seeds has
been mostly covered by the main documentation or otherwise moot.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5845 cda61777-01e9-0310-a592-d414129be87e
"
"f34cc9a6bf53ad6968284f4abec89afbd08aeb6f","2005-05-26 17:03:51+00:00","Sorted out the barriers/corners trouble left by r5844. No wonder
Jacob wasn't able to find a satisfactory fix: the whole area was a
horrid mess. Fortunately, the reason it was a horrid mess was
because the Net drawing routines predated the introduction of clip()
in the frontend interface, and it turns out that clip() makes it
possible to do all this more easily and better. So, a complete
rearchitecting of barrier corners: the corner flags in the
`barriers' array are now gone (and good riddance), and corner
information is computed on the fly so as to take into account the
moving grid edges. In the process I've also updated the corner
mechanism so that a barrier `corner' (really endpoint) is drawn at
the end of _every_ barrier, not just where two meet. This has
changed the appearance of a single isolated barrier, to what I would
have wanted it to look like in the first place but achieving it
without clip() was just too fiddly.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5846 cda61777-01e9-0310-a592-d414129be87e
"
"02e846b0a3caf786ed54e1f08495e3f58f426c72","2005-05-26 17:12:04+00:00","Add support for Jacob's new cursor-key modifier flags in the OS X frontend.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5847 cda61777-01e9-0310-a592-d414129be87e
"
"b8e4746c2e6f45fc08e60d009ce878ab677c81c1","2005-05-28 08:04:29+00:00","Add the ability to use the Rectangles solver for actually solving
puzzles, rather than just doing its nondeterministic number
placement thing. This enables the use of the `Solve' menu option on
externally entered game IDs, provided of course that they aren't
_too_ difficult.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5852 cda61777-01e9-0310-a592-d414129be87e
"
"b95a281ba5a61f8dae199b45b82a4d6732e8f740","2005-05-28 23:45:43+00:00","Add a limited-shuffle mode like that added to Sixteen and Twiddle in r5769,
for completeness.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5854 cda61777-01e9-0310-a592-d414129be87e
"
"9a6d27dc60ebeba32e99abd31c0cedfdab4462b3","2005-05-30 07:55:27+00:00","Infrastructure change: game_anim_length and game_flash_length now
both get passed a pointer to the game_ui. This means that if they
need to note down information for the redraw function about what
_type_ of flash or animation is required, they now have somewhere to
do so.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5858 cda61777-01e9-0310-a592-d414129be87e
"
"acc46a3eb76e84237a7780782a1ba7701dcd889b","2005-05-30 10:08:27+00:00","Initial checkin of my Minesweeper clone, which uses a solver during
grid generation to arrange a mine layout that never requires guessing.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5859 cda61777-01e9-0310-a592-d414129be87e
"
"cb5d389f318589f7639ba7892f7b289ada6eb1b8","2005-05-30 11:49:08+00:00","Nit: 'warning: extra tokens at end of #endif directive'


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5860 cda61777-01e9-0310-a592-d414129be87e
"
"475a2fe90d88bc188a5e43386db4866b9c4b264b","2005-05-30 12:24:31+00:00","Neat idea from Gareth: if you put a % on the end of the mine count
in the Custom dialog box, it'll treat it as a mine density.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5861 cda61777-01e9-0310-a592-d414129be87e
"
"1fabe27d9a21d57335df84b3d6cd502a60e3ed0f","2005-05-30 13:10:37+00:00","Mines now follows the conventional approach of offering a completely
blank grid until you make the first click; to ensure solubility, it
does not generate the mine layout until that click, and then ensures
it is solvable starting from that position.

This has involved three infrastructure changes:

- random.c now offers functions to encode and decode an entire
random_state as a string
- each puzzle's new_game() is now passed a pointer to the midend
itself, which most of them ignore
- there's a function in the midend which a game can call back to
_rewrite_ its current game description.

So Mines now has two entirely separate forms of game ID. One
contains the generation-time parameters (n and unique) plus an
encoding of a random_state; the other actually encodes the grid once
it's been generated, and also contains the initial click position.
When called with the latter, new_game() does plausibly normal stuff.
When called with the former, it notes down all the details and waits
until the first square is opened, and _then_ does the grid
generation and updates the game description in the midend. So if,
_after_ your first click, you decide you want to share this
particular puzzle with someone else, you can do that fine.

Also in this checkin, the mine layout is no longer _copied_ between
all the game_states on the undo chain. Instead, it's in a separate
structure and all game_states share a pointer to it - and the
structure is reference-counted to ensure deallocation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5862 cda61777-01e9-0310-a592-d414129be87e
"
"9b9ae6c5ac414f4ab0cbe908476d7e8dc304f5c0","2005-05-30 13:11:05+00:00","D'oh, there's always one. Remove first-click stuff from the todo list.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5863 cda61777-01e9-0310-a592-d414129be87e
"
"6d2b31726e3c65027b7a5497186c17b3de07b257","2005-05-30 16:15:34+00:00","First cut at a game timer. Yet another backend function which
indicates whether a particular game state should have the timer
going (for Mines the initial indeterminate state does not have this
property, and neither does a dead or won state); a midend function
that optionally (on request from the game) prepends a timer to the
front of the status bar text; some complicated midend timing code.

It's not great. It's ugly; it's probably slightly inaccurate; it's
got no provision for anyone but the game author decreeing whether a
game is timed or not. But Mines can't be taken seriously without a
timer, so it's a start.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5866 cda61777-01e9-0310-a592-d414129be87e
"
"c41f2d8afbba4434c8d3648028c501e38223ec48","2005-05-30 17:57:45+00:00","Constrain mine count to be at most the largest number of mines we
can guarantee to fit into the grid!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5867 cda61777-01e9-0310-a592-d414129be87e
"
"b61b2bcf55604653af2c2d58723bd921605c689d","2005-05-30 18:24:06+00:00","`Copy' operation for Mines.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5868 cda61777-01e9-0310-a592-d414129be87e
"
"ee7c4b22b8416047b16161e3b5a46cb8c8c18a8e","2005-05-30 18:41:40+00:00","Added an `interactive' flag to new_game_desc(), which toggles Mines
between on the one hand generating indeterminate game descriptions
awaiting the initial click, and on the other hand generating
concrete ones which have had their initial click. This makes `mines
--generate' do something useful.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5869 cda61777-01e9-0310-a592-d414129be87e
"
"0aa62a8d7499ef17f7cfec95dcea77c2851b2143","2005-05-30 22:33:34+00:00","Chris's patch to stop Mines depending on char being signed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5871 cda61777-01e9-0310-a592-d414129be87e
"
"2c5b23e1ce715e95a0ab17f356ee92f912d24cd9","2005-05-31 08:50:42+00:00","GTK misfires timers at inconvenient moments, sometimes causing a new
puzzle of a different size to be redrawn before the pixmap is
resized, and since backends never redraw already-drawn stuff this is
a problem. Was biting me when I entered a Mines game ID of a
different size than the current settings into the Specific box.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5872 cda61777-01e9-0310-a592-d414129be87e
"
"b18f8069092a244f67ac416eec0fb83f3a191771","2005-05-31 08:56:33+00:00","Fix a couple of robustness issues.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5873 cda61777-01e9-0310-a592-d414129be87e
"
"3bf8414d59af98c95a97aa82f077194d5170af6e","2005-05-31 11:19:11+00:00","Improved the limited shuffle mechanism in Sixteen and Twiddle. They
were already making sure that no shuffle move was the precise
inverse of the previous one, or contributed to repeating the
previous one so many times as to turn it into effectively fewer
moves (doing the same rotation three times in Twiddle, or shifting a
row by more than half its length in Sixteen). However, they were
only checking against the _last_ move, which meant that in any
situation where there were completely disjoint move spaces (4x4n2
Twiddle, or any Sixteen at all) it was still possible to have A then
B then inv(A) occurring in the shuffle, leading to an unnecessarily
easy game.

Now both shuffle routines keep separate track of all
_non-overlapping_ recent moves, and will avoid inverting any move
which hasn't had another move overlap it since it was made. This
should reduce the incidence of too-easy limited shuffle games,
although it can't be prevented _entirely_ (since, if nothing else,
it's always possible to increase the shuffle limit past the maximum
group radius).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5875 cda61777-01e9-0310-a592-d414129be87e
"
"4a85b4abe03b3a9e90e49b0d9edc640c41b52327","2005-05-31 11:20:24+00:00","Emma Garside suggested that it would be nice to have a different
background colour for covered and uncovered squares in Mines, since
otherwise you have to distinguish them by the edge highlights alone.
So here one is; it's not _very_ different (it just looked odd if it
was any darker than this), but anyone who wants a bigger difference
can reconfigure it using the MINES_COLOUR_1 environment variable.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5876 cda61777-01e9-0310-a592-d414129be87e
"
"6f71d27964411a7e2cfc6768036a805bb9a0011b","2005-05-31 11:43:51+00:00","Mouse-based interface for Cube: you left-click anywhere on the grid
and it moves the polyhedron in the general direction of the mouse
pointer. (I had this in my initial throwaway Python implementation
of this game, but never reimplemented it in this version. It's
harder with triangles, but not too much harder.)

Since the logical-to-physical coordinate mapping in Cube is
dynamically computed, this has involved an interface change which
touches all puzzles: make_move() is now passed a pointer to the
game_drawstate, which it may of course completely ignore if it
wishes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5877 cda61777-01e9-0310-a592-d414129be87e
"
"b007d9ba1df54d08a8cd0e08ab36121319dc8b30","2005-05-31 12:03:25+00:00","Move definition of PI into puzzles.h. If nothing else, the definition in cube.c
had a typo :)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5878 cda61777-01e9-0310-a592-d414129be87e
"
"789efa732ece8f5dc541be2d36fefef4791f441d","2005-05-31 12:12:47+00:00","Document the mouse control method for Cube.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5879 cda61777-01e9-0310-a592-d414129be87e
"
"cf11fba29a9673f187930289043fa07b5151d4ba","2005-05-31 12:41:18+00:00","Apparently a number of Windows programs like to use ^Y as a keyboard
shortcut for Redo. I wasn't doing anything else with it, so why not?


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5880 cda61777-01e9-0310-a592-d414129be87e
"
"2c928c2fe7da8b94efce99d2a000f317b15e36f8","2005-05-31 13:02:26+00:00","`Solve' operation is relatively simple in Mines.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5882 cda61777-01e9-0310-a592-d414129be87e
"
"07eab8304dead3973a66c941a626ae0e0439cd1a","2005-05-31 17:09:39+00:00","Oops! A trivial typo in obfuscate_bitmap() made the obfuscation
function rather less uniform-looking than I'd intended. I _thought_
it looked a bit fishy, but had assumed it was just the human
tendency to see patterns where none exist. Now fixed, and some real
test vectors confirm that this time the obfuscation function is
actually what I intended it to be.

This means that all masked game IDs generated before this revision
are now invalid. That's a shame, but the game is only a day old and
I think I can reasonably justify it as teething trouble.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5883 cda61777-01e9-0310-a592-d414129be87e
"
"9a2042bfa35f803c455043f0288e268a9ff6dd75","2005-05-31 17:46:22+00:00","valgrind spotted this array underrun. I wonder if this might have
been causing some of Verity's nonreproducible weirdnesses.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5884 cda61777-01e9-0310-a592-d414129be87e
"
"eafdc2acc45e659e750beded7599f5686e2a57ab","2005-05-31 18:09:28+00:00","Aha! It turns out, after a bit of failure-mode profiling, that when
the Mines unique grid generator fails at high mine densities it is
_almost always_ for the same reason, and it also turns out that this
reason is one which can be addressed. So here's an enhancement to
mineperturb() which enables Mines to generate a grid at (as far as I
can tell) any mine density you like, up to and including w*h-9
mines. At densities of 1 in 2 or thereabouts the grids start to look
rather strange, but it can at least generate them without hanging.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5885 cda61777-01e9-0310-a592-d414129be87e
"
"71df25341d6716f6329129e34178b8445405d4db","2005-05-31 18:24:39+00:00","Now _this_ is what Undo ought to be doing in a Minesweeper clone.
Rather than revealing the entire mine layout when you die, we now
only reveal the one mine that killed you. You can then Undo and
continue playing, without having spoiled the rest of the grid for
yourself. The number of times you've died is counted in the status
line (and is not reduced by Undo :-).

Amusingly, I think this in itself is quite a good way of dealing
with ambiguous sections in a Minesweeper grid: they no longer
_completely_ spoil your enjoyment of the game, because you can still
play the remainder of the grid even if you haven't got a completely
clean sweep. Just my luck that I should invent the idea when I've
already arranged for ambiguous sections to be absent :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5886 cda61777-01e9-0310-a592-d414129be87e
"
"5677b497a58f3f2e1f4109a32591ef70e2a92f1f","2005-05-31 18:25:06+00:00","Bah, and remove the TODO item. As usual.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5887 cda61777-01e9-0310-a592-d414129be87e
"
"cd41d5a9162d7c5b3ff4d19e05f79514c248f0f4","2005-05-31 18:38:01+00:00","Better mouse button handling in Mines:
- middle button now also triggers the clear-around-square action
- a special-case handler in midend_process_key() arranges that the
left button always trumps the right button if both are pressed
together, meaning that Windows Minesweeper players used to
pressing L+R to clear around a square should still be able to do
so without any strange behaviour.
(The latter touches all game backends, yet again, to add a field to
the game structure which is zero in everything except Mines.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5888 cda61777-01e9-0310-a592-d414129be87e
"
"aa8e34f941eee716d3cfef61a028370f72c9a7d7","2005-06-01 06:47:55+00:00","Typo in click bounds checking.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5890 cda61777-01e9-0310-a592-d414129be87e
"
"e76594ae348d20ff12bafea32932910643a517a7","2005-06-01 06:54:14+00:00","Chris Emerson observed the same status-bar flicker under GTK as I
did under Windows, so here's his patch (blatantly copied from my own
fix in windows.c :-).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5891 cda61777-01e9-0310-a592-d414129be87e
"
"99b0aa94926223558ca12f28b61f976550e2d552","2005-06-01 07:01:32+00:00","Patches from Richard B for Solo:
- prevent highlighting a clue square at all
- enable easier switching between highlight types by not requiring
a left-click highlight to be left-click-cancelled before
right-clicking, and vice versa
- fix bit-rot in -DSTANDALONE_SOLVER
Also one of mine:
- replicate Richard's -DSTANDALONE_SOLVER fix in Pattern, where it
was also broken.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5892 cda61777-01e9-0310-a592-d414129be87e
"
"a969948206266dc1f5639e7a9289511b307d216f","2005-06-01 07:22:21+00:00","Gareth points out that the recess highlights around the outside of
the grid, in all games that have them, are drawn incorrectly when
the grid is not square. Fixed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5893 cda61777-01e9-0310-a592-d414129be87e
"
"7476de84f941b770ffb11055b64b9a68143219e3","2005-06-01 12:42:30+00:00","I've proved that a grid dimension of 2 is capable of irretrievably
hanging the grid generator and that there's no way to fix it.
Therefore, lower limit of 3 squares in each direction, which will
upset envelope-pushers everywhere but doesn't destroy any actually
interesting puzzles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5895 cda61777-01e9-0310-a592-d414129be87e
"
"032ddf153c08454973df436c1fe51cf1d6d51fb2","2005-06-01 12:46:27+00:00","Arrange that random seeds are as harmonised as they can reasonably
be between interactive and batch use.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5896 cda61777-01e9-0310-a592-d414129be87e
"
"4e8f98c58c681461bdb0e4eff6872ec2fe451b44","2005-06-01 17:47:56+00:00","Miscellaneous fixes from James Harvey's PalmOS porting work:
- fixed numerous memory leaks (not Palm-specific)
- corrected a couple of 32-bit-int assumptions (vital for Palm but
generally a good thing anyway)
- lifted a few function pointer types into explicit typedefs
(neutral for me but convenient for the source-munging Perl
scripts he uses to deal with Palm code segment rules)
- lifted a few function-level static arrays into global static
arrays (neutral for me but apparently works round a Palm tools
bug)
- a couple more presets in Rectangles (so that Palm, or any other
slow platform which can't handle the larger sizes easily, can
still have some variety available)
- in Solo, arranged a means of sharing scratch space between calls
to nsolve to prevent a lot of redundant malloc/frees (gives a 10%
speed increase even on existing platforms)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5897 cda61777-01e9-0310-a592-d414129be87e
"
"21c68b6fffb00a16bffb7075f204860fd796f672","2005-06-01 18:33:25+00:00","Another highlighting patch from Richard Boulton: immediately flag
any actual clashes (duplicate numbers in a row, column or block) in
red. This is a non-privileged deduction: it doesn't compare against
a known solution or consult a solver. It simply indicates reasons
why (no superset of) the current grid would cause the completion
flash to go off.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5898 cda61777-01e9-0310-a592-d414129be87e
"
"2ec563e6272cb837522edd8f534c442cd72df805","2005-06-01 18:57:28+00:00","Fix Richard's patch so that it's actually C :-/


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5899 cda61777-01e9-0310-a592-d414129be87e
"
"9773c564092fcd74459219a815132be0100f2c9f","2005-06-01 22:56:20+00:00","min()/max() macros conflict with ones defined by Windows (or at least MinGW)
headers; but MIN()/MAX() conflict with glib. Let's keep the lower-case ones,
and assume that any provided by the system have the obvious semantics.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5900 cda61777-01e9-0310-a592-d414129be87e
"
"b5f8ef799950cde961368327bef386304bfcdafd","2005-06-02 08:14:14+00:00","Fix various departures from C found by `gcc -ansi -pedantic'. I
haven't checked in Makefile changes to enable this, but I'll at
least fix the specific problems it found when enabled as a one-off.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5902 cda61777-01e9-0310-a592-d414129be87e
"
"f458bb868fe720be91bf87db10eb81f15d683576","2005-06-02 16:34:37+00:00","Standalone compilation mode which turns mines.c into a little
utility to convert descriptive game IDs containing mine bitmaps
between obfuscated and cleartext. Might be handy for anyone planning
to design custom levels to send to friends (mines spelling out
`Happy Birthday', that sort of thing), as someone suggested to me
today :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5903 cda61777-01e9-0310-a592-d414129be87e
"
"28a4474e47fa9cebdcb422cf39a310d4deb80cc6","2005-06-03 08:38:24+00:00","Add mines and mineobfusc to the ignore property.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5905 cda61777-01e9-0310-a592-d414129be87e
"
"f4741d7c874ce48899336aba126d05af3631daa8","2005-06-03 12:10:32+00:00","Unique solubility in Mines means that you can massively increase the
mine density without (as you would with a conventional random grid
generator) rendering the game completely unplayable. High mine
densities are really good fun, and the point of the presets menu is
to provide people with pre-tested good settings and things they
might not have thought to try for themselves; so here are three
additional presets with high densities.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5906 cda61777-01e9-0310-a592-d414129be87e
"
"1d246370385245aef2952dc324279cfb68723a07","2005-06-03 12:27:29+00:00","Colin Watson suggests that Alt-click (or Option-click) could
usefully be equivalent to right-clicking on platforms other than OS
X; in particular, it's useful if you're running Linux on Apple
hardware such as PowerBook which inherently has only one button. So
here's the fix for GTK, and Windows as well (the latter for
completeness and consistency, not because I can actually think of
any reason somebody might be running Windows on one-button
hardware).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5907 cda61777-01e9-0310-a592-d414129be87e
"
"4ee0f7f3657fba2586ed09e61bae50dd83c6cd18","2005-06-04 09:59:03+00:00","James Harvey requested that puzzles not use DEBUG as a preprocessor
symbol for enabling diagnostics, presumably because in his Palm port
it means something else as well. He sent this patch to switch Net
and Netslide over to using GENERATION_DIAGNOSTICS, in the fashion of
the newer games.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5908 cda61777-01e9-0310-a592-d414129be87e
"
"a8ca1cb89c95579fdc5f3374235597756cb5ac63","2005-06-04 12:32:40+00:00","Revamp pencil mark placement and sizing. Pencil marks are now sized
and positioned according to how many there are in the cell, rather
than how many distinct digits there are in the entire puzzle. This
means that 4x4 Solo can now be played with pencil marks without
_too_ much difficulty; the marks will still get a bit crowded if you
have more than 12 in the same square, but with luck that shouldn't
happen often, and as long as you're down in the 2-9 range things
should be entirely legible.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5909 cda61777-01e9-0310-a592-d414129be87e
"
"139a3cfdbe939fd292798d26930778ce339e5356","2005-06-04 17:51:49+00:00","Small UI bug: LEFT_RELEASEs were being thrown away completely if
their coordinates were outside the playing area. Clearly no actual
move should be made in that situation, but we do at least need to
sort out any highlighted squares from the prior dragging operations.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5911 cda61777-01e9-0310-a592-d414129be87e
"
"08bc96b82ae37d7d432bf84d6aa9c05fe413c542","2005-06-06 11:21:36+00:00","Introduce a new game backend function (there seem to have been a lot
of these recently) whose job is to update a game_ui to be consistent
with a new game_state. This is called by midend.c in every situation
where the current game_state changes _other_ than as a result of
make_move (Undo, Redo, Restart, Solve).

The introduction of this function allows a game_ui to contain
information about selections or highlights within a game_state which
simply wouldn't make sense when transferred to another game_state.
In particular, I've used it to fix a subtle bug in Solo whereby,
although you couldn't right-click to pencil-mode highlight a filled
square, you could _get_ a pencil-mode highlight in a filled square
if you used Undo and Redo. (Undo to before the square was filled,
right-click to highlight it, then Redo. Alternatively, left-click
and clear the square, right-click to highlight it, then Undo.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5912 cda61777-01e9-0310-a592-d414129be87e
"
"92549889d431895333546c8cb505ff13edcccd30","2005-06-07 17:57:50+00:00","All the games in this collection have always defined their graphics
in terms of a constant TILE_SIZE (or equivalent). Here's a
surprisingly small patch which switches this constant into a
run-time variable.

The only observable behaviour change should be on Windows, which
physically does not permit the creation of windows larger than the
screen; if you try to create a puzzle (Net makes this plausible)
large enough to encounter this restriction, the Windows front end
should automatically re-adjust the puzzle's tile size so that it
does fit within the available space.

On GTK, I haven't done this, on the grounds that X _does_ permit
windows larger than the screen, and many X window managers already
provide the means to navigate around such a window. Gareth said he'd
rather navigate around a huge Net window than have it shrunk to fit
on one screen. I'm uncertain that this makes sense for all puzzles -
Pattern in particular strikes me as something that might be better
off shrunk to fit - so I may have to change policy later or make it
configurable.

On OS X, I also haven't done automatic shrinkage to fit on one
screen, largely because I didn't have the courage to address the
question of multiple monitors and what that means for the entire
concept :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5913 cda61777-01e9-0310-a592-d414129be87e
"
"0fb2ba370fa7bac95ac3c7ecc41e6aabe7d268c4","2005-06-07 19:01:36+00:00","James Harvey has contributed an implementation of `Same Game', also
known as ksame (KDE) and Same GNOME (GNOME).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5914 cda61777-01e9-0310-a592-d414129be87e
"
"851424e891b62b56fb6f05c95eb739c75c6d2c36","2005-06-07 19:04:52+00:00","Another James Harvey patch. This one introduces a new button code
called `CURSOR_SELECT', intended for platforms which have a fire
button to go with their cursor keys. (Apparently some Palms do.)
CURSOR_SELECT is not bound to anything on any of the current three
platforms, and therefore no game may rely on it being available.
This checkin adds it in Net as a synonym for 'a', the keyboard-based
rotate-left command.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5915 cda61777-01e9-0310-a592-d414129be87e
"
"4e2cbdb54b1b5cc4c3282184922524c2ba01cee2","2005-06-07 19:07:58+00:00","James Harvey (again) points out an array underrun in the new
clash-checking code in Solo. (valgrind confirms it.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5916 cda61777-01e9-0310-a592-d414129be87e
"
"7b7e7af783a40b0b135e92f3b51f2ba813681062","2005-06-07 20:22:08+00:00","Forgot to add Same Game to the big list for OS X.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5918 cda61777-01e9-0310-a592-d414129be87e
"
"7866221755fbcd1bf3b84e7856592cae6e460a0a","2005-06-07 20:22:25+00:00","James Harvey's patch to support keyboard control in Same Game.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5919 cda61777-01e9-0310-a592-d414129be87e
"
"5285f578105a8242f6e93b32468985bd0bf0b511","2005-06-07 20:25:25+00:00","Chris Emerson points out that gtk_window_resize() isn't in GTK 1.2.
Work around it the same way I did in PuTTY.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5920 cda61777-01e9-0310-a592-d414129be87e
"
"a55f3d34e07aaaf77c86ce228be435d05d0073f9","2005-06-07 20:44:14+00:00","Integer overflow in game_size(). Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5921 cda61777-01e9-0310-a592-d414129be87e
"
"4c5ba7334115f4d8dd6ab028ff3af6842903459a","2005-06-07 21:03:14+00:00","Tweaks and more complete documentation for Same Game.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5922 cda61777-01e9-0310-a592-d414129be87e
"
"fb554d7945eddf517868d85aa85155b103cf567c","2005-06-07 21:05:29+00:00","Add Windows help topic


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5923 cda61777-01e9-0310-a592-d414129be87e
"
"6affeb4699aea6c1b040144f6c085584365a916c","2005-06-08 09:20:35+00:00","Remove debug output.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5926 cda61777-01e9-0310-a592-d414129be87e
"
"c48e79f5f376ea0479e5fa3e754298722878aed9","2005-06-09 18:29:11+00:00","GDK 2.6, in its doubtless infinite wisdom, has decided that
gdk_font_from_description() will no longer even _try_ to return a
font matching the specified Pango font description; instead it will
return `fixed' no matter what you do. Therefore, I've had to switch
to using Pango proper for Puzzles text rendering, rather than just
using Pango for font selection.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5936 cda61777-01e9-0310-a592-d414129be87e
"
"f8bbe5d9b69ae354f80efe22a91460bc20d94b8d","2005-06-10 11:24:44+00:00","Patch from Chris Emerson to add a status bar to Rectangles. Apart
from saying `Auto-solved' or `Completed', the main function of the
status bar is to track the current size of a rectangle you're
dragging out, which makes life much easier when trying to count up
large rectangles in 19x19 mode.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5937 cda61777-01e9-0310-a592-d414129be87e
"
"754ea2269c311f44ede198c2bd717255eed88b32","2005-06-10 11:27:26+00:00","Patch from James Harvey to rearrange the Same Game colours.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5938 cda61777-01e9-0310-a592-d414129be87e
"
"0dff9a84e3b6be8b00502077820f62cacef2d98e","2005-06-10 11:29:59+00:00","Overzealous last-move tracking during shuffle was causing lockups on
2x2 grid generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5939 cda61777-01e9-0310-a592-d414129be87e
"
"7431ec6e6008ee7821b48b4bf34457e7af6f8146","2005-06-10 11:34:02+00:00","Disable shuffle overlap checking in the special case w=h=n.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5940 cda61777-01e9-0310-a592-d414129be87e
"
"8637310b3e601073eee41c5f867aa438ce32a69c","2005-06-10 13:05:24+00:00","Clean up the behaviour of drags off the edge of the grid. These have
always been a convenient way to cancel a drag you decided was an
error, but now it's more obvious that this is the case.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5941 cda61777-01e9-0310-a592-d414129be87e
"
"a2416e2d0ebc55968d8ccf426dc904772a1dc290","2005-06-17 11:51:52+00:00","An email conversation with Chuck Fresno turned up several forms of
symmetry which were not implemented in Solo. Now they are.

In the process I've completely retired symmetry_limit() on the
grounds that some of the new symmetries do not have a rectangular
base region; instead I determine the base region by going through
the grid and finding every square which is not transformed into a
lexicographically lower square by any symmetry operation. This means
that adding new symmetries is now _only_ a matter of encoding the
actual transformation rules.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5965 cda61777-01e9-0310-a592-d414129be87e
"
"9113d99cb7a8f1c467b35928d81e0f750fd91707","2005-06-17 17:16:49+00:00","Another new puzzle! This one isn't particularly deep or complex
(solving it only requires matrix inversion over GF(2), whereas
several of the other puzzles in this collection are NP-complete in
principle), but it's a fun enough thing to play with and is
non-trivial to do in your head - especially on the hardest preset.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5967 cda61777-01e9-0310-a592-d414129be87e
"
"8f0d5a284e4c2bb5e9a5619391e5f7dc93f6d40b","2005-06-17 17:32:28+00:00","Animation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5968 cda61777-01e9-0310-a592-d414129be87e
"
"35c25e9f6f309de03c2d429077d8e4bc1ef74295","2005-06-17 18:54:58+00:00","Infrastructure change which I've been thinking about for a while:
the back end function solve_game() now takes the _current_
game_state in addition to the initial one.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5969 cda61777-01e9-0310-a592-d414129be87e
"
"7ee7bc2c5657f658f2af9966dc1bbf5241fd9411","2005-06-17 18:55:36+00:00","Solver for Flip.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5970 cda61777-01e9-0310-a592-d414129be87e
"
"94fce0bcf5ebebad5c822503c19302aeacf76385","2005-06-17 19:06:25+00:00","Correct rogue chapter into a subheading.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5972 cda61777-01e9-0310-a592-d414129be87e
"
"cb666e3e6c68167009dbb63f79f7fd5664fff7ad","2005-06-18 08:36:52+00:00","I'm sick of not having a `make install' target.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5973 cda61777-01e9-0310-a592-d414129be87e
"
"658e4d65155bd92792ed2d10f83c970e42f58a4b","2005-06-18 08:46:33+00:00","I've decided I didn't like the asymmetry of putting the solution
markers in the top left of the square.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5974 cda61777-01e9-0310-a592-d414129be87e
"
"2e1466704a2cd3f6571f1710b30a03da51729653","2005-06-18 08:52:50+00:00","Just noticed yesterday that initial window sizing is broken on
Windows for puzzles with status bars, because the initial call to
check_window_size is given the window size _without_ the status bar
and assumes that that has to be big enough for the whole thing
_with_ the status bar, so it shrinks everything by a little bit. So
now we resize the window to take account of the status bar before
calling check_window_size(), and the problem seems to have gone away.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5975 cda61777-01e9-0310-a592-d414129be87e
"
"118cffffcc151043065add581a4e718ae156d345","2005-06-19 14:33:06+00:00","Redraw glitch: tiles marked black (at game-over time) were not
redrawn as non-black on undo. Introduce a new flag TILE_IMPOSSIBLE,
so that information about those black markers is cached in the
drawstate and we know when we have to erase them.

In the process I've removed the game_state argument completely from
the subfunction tile_redraw(), which gives me some confidence that
it isn't getting any _more_ privileged information out of it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5979 cda61777-01e9-0310-a592-d414129be87e
"
"cb9d0b5c48a0c5ec803361ea6db5b85206f201d4","2005-06-19 21:49:53+00:00","James Harvey's memory leak patch for Flip.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5980 cda61777-01e9-0310-a592-d414129be87e
"
"c1609d06c9d6a678e928d9e232fd085a23bdd318","2005-06-20 17:32:45+00:00","Conversation with Richard and Chris yesterday gave rise to a more
sensible means of generating an initial gridful of rectangles. This
was previously a stupidly non-scalable bit of the Rectangles puzzle
generator: it filled a ludicrously large array with every possible
rectangle that could go anywhere in the grid, picked one at random
and winnowed the list by removing anything that overlapped that one,
then repeated until the list was empty (and therefore the grid was
full except for remaining singleton squares). Total cost was O(N^4)
in both time and space; not pretty.

Richard and Chris's sensible alternative was to place each rectangle
by randomly choosing a so-far-uncovered _square_, and then picking a
random rectangle from the possible ones covering that square. This
means we only have to deal with a small fragment of the rectangle
list at any one time, and we don't have to store the whole lot in
memory; so it's _much_ faster and more scalable, and has virtually
no memory cost.

A side effect of this algorithmic change is that the probability
distribution has altered. When you line up all the possible
_rectangles_ and pick one at random, then obviously the small ones
are going to be in the majority since lots of small ones can fit
into the space taken up by any given big one. So the original
algorithm tends to favour fiddly grids full of lots of tiny
rectangles, which don't tend to be very interesting. But if you
first pick a square and then think about the rectangles that can
surround that square, the small ones are suddenly going to be in the
_minority_ because there are only two ways you can place (say) a 2x1
containing a given square compared to 36 ways you can place a 6x6.
So this algorithm favours more large rectangles, which I generally
consider to be an improvement.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5982 cda61777-01e9-0310-a592-d414129be87e
"
"9e2c2ed13757fc400a498d0050e6caa4b1dc1370","2005-06-21 08:15:53+00:00","Patch from James Harvey in response to the new Rectangles grid
generator: (a) take out the `#ifdef SLOW_SYSTEM' because the new
generator is much more efficient, and (b) convert another int to
size_t to prevent the solver going negative in 16-bit ints as a
result.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5983 cda61777-01e9-0310-a592-d414129be87e
"
"abc7550aadb0f3828be5b6ec56fb3c0927505ea3","2005-06-21 11:16:36+00:00","Add WinHelp topic


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5984 cda61777-01e9-0310-a592-d414129be87e
"
"9f6faf2bebdfcf1fc736fb7fc0cc1a19d6cac7d0","2005-06-22 08:30:31+00:00","New front end functions to save and restore a region of the puzzle
bitmap. Can be used to implement sprite-like animations: for
example, useful for games that wish to implement a user interface
which involves dragging an object around the playing area.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5987 cda61777-01e9-0310-a592-d414129be87e
"
"1e5f3fd50393404d65054b3cbd530a6dc49ae3d7","2005-06-22 09:26:03+00:00","This TODO comment should have been taken out in r5913 :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5988 cda61777-01e9-0310-a592-d414129be87e
"
"4a874b3d6836caa013a935bd9d6cbd025aac2e8d","2005-06-23 08:24:52+00:00","Introduce a front-end function to draw circles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5991 cda61777-01e9-0310-a592-d414129be87e
"
"bb5fa0cfa9ff97828e90a733bfebab5d93c63a00","2005-06-23 09:14:19+00:00","`Guess', a Mastermind clone from James Harvey. This checkin also
introduces a few new utility functions in misc.c, one of which is
the bitmap obfuscator from Mines (which has therefore been moved out
of mines.c).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5992 cda61777-01e9-0310-a592-d414129be87e
"
"27868ff2149ca66643792b95c9c983fe358d3737","2005-06-23 12:21:14+00:00","Two small fixes: add some ceil() calls to stop the puzzle shrinking
every time I press N, and revert the help topic to NULL until some
documentation materialises.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5993 cda61777-01e9-0310-a592-d414129be87e
"
"8bcabf65af6f84b8ecb38b9081c0951a7fd59d66","2005-06-23 12:55:47+00:00","Must outline as well as filling circles, because not all platforms
can be guaranteed to draw bare filled shapes the same way.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5994 cda61777-01e9-0310-a592-d414129be87e
"
"6b0d6fe773f13b000fc65ab8338f7e184355060a","2005-06-23 16:36:09+00:00","Allow dragging of coloured pegs from previous guesses. Also
reorganise the colours so there are fewer of those terribly
computery cyan and magenta shades, and more good old-fashioned
colours with simple names like orange and purple. Finally, change
the `right place' marking peg colour from red to black, in line with
at least _my_ old Mastermind set (I faintly suspect red marker pegs
of being an Americanism) and also so that the marker pegs and the
coloured pegs have no colours in common.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5995 cda61777-01e9-0310-a592-d414129be87e
"
"399515326634cd05d33700385c59b0d41b4d21e4","2005-06-23 17:43:43+00:00","Erase backgrounds when drawing over an existing circle, for the
benefit of antialiasing platforms such as OS X. Also in this
checkin, fiddle with svn:ignore (there's a new puzzle binary).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5996 cda61777-01e9-0310-a592-d414129be87e
"
"14e0761b7dc3df6ed114239fc7b88b90be9fc238","2005-06-23 18:02:21+00:00","Bah, not good enough. Extend those background erases by one more
pixel.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5997 cda61777-01e9-0310-a592-d414129be87e
"
"a1e8742e71e6bcb2a0473e7577b807766f03ddc6","2005-06-23 18:05:19+00:00","And forgot to add guess to the Unix make install target! I need a list.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5998 cda61777-01e9-0310-a592-d414129be87e
"
"7ac65272b9dd64146eeb9676b7dd4c76f710a6ab","2005-06-23 18:50:58+00:00","James Harvey's extensions to Guess: a couple of extra game settings
plus a manual chapter.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5999 cda61777-01e9-0310-a592-d414129be87e
"
"2f79704aa1575609adee8e36577e071c25f416fb","2005-06-23 19:01:01+00:00","Credit James Harvey.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6000 cda61777-01e9-0310-a592-d414129be87e
"
"12784a6da513ba1ecf5252f4b6f29cf5f81cfae5","2005-06-23 21:37:05+00:00","Reinstate WinHelp topic now we have a manual chapter.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6002 cda61777-01e9-0310-a592-d414129be87e
"
"58fc69333f12e71b2dff9e0f6f6e42b08bf64e9b","2005-06-23 21:47:55+00:00","Factual and other corrections/additions to the Guess docs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6003 cda61777-01e9-0310-a592-d414129be87e
"
"e1d7106b8e62fc6a9677022e3287ffa1118c0999","2005-06-23 22:01:17+00:00","Make the `hold marker' in Guess accessible from the keyboard (`H' key, for want
of a better idea).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6004 cda61777-01e9-0310-a592-d414129be87e
"
"a7951b441eef9dfcaf19285c242411b06580ec90","2005-06-23 23:11:59+00:00","Array overflow fix from James Harvey.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6005 cda61777-01e9-0310-a592-d414129be87e
"
"c67e94324c0d72a9034a86c8d62c116908dd7c9a","2005-06-24 11:03:20+00:00","My background-erasing changes in r5996/r5997 caused trouble with the
keyboard-control cursors, and when I tried to fix those more
wallpaper bubbles popped up elsewhere. Here's what I think is a
proper fix: a comprehensive overhaul of the redraw code such that,
instead of tracking the cursor positions explicitly in the
drawstate, we instead track for each peg position whether or not a
cursor is currently displayed at that position. So cursor erasing
and cursor drawing become part of the main draw loop rather than a
separate bit on the end.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6006 cda61777-01e9-0310-a592-d414129be87e
"
"b21ba781722c62d1ca0f31bb75d425a6a42a0be4","2005-06-24 11:05:43+00:00","Change the preprocessor symbol `DEBUG' to `DEBUGGING', since the
former is automatically defined by Cygwin.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6007 cda61777-01e9-0310-a592-d414129be87e
"
"3bb1b05793520d52609496f253406a911ec0bcca","2005-06-24 11:13:08+00:00","Turn off the keyboard-control cursor when the user reverts to mouse
control.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6008 cda61777-01e9-0310-a592-d414129be87e
"
"941624dfe3861fc29affdde8d213783c07e41aff","2005-06-24 12:30:30+00:00","Fix another display/UI glitch which triggered if you filled a row
(so that the hint pegs lit up as `ready') and then pressed Undo: the
markable flag would remain set and the redrawing wouldn't darken the
pegs again.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6009 cda61777-01e9-0310-a592-d414129be87e
"
"62a712164a9dee92a9d4a7225b99fbfad8171d0a","2005-06-24 16:35:27+00:00","More patches from James Harvey: enforce a maximum brightness in the
background colour (to ensure white pegs show up against it), and
convert the keyboard-control cursor into a rectangle when it's over
the hint pegs (otherwise it looks rather silly for numbers of pegs
above 4).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6010 cda61777-01e9-0310-a592-d414129be87e
"
"7e5262186bb638c8fab0969eea97f58635a1869b","2005-06-24 16:35:42+00:00","Couple of presets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6011 cda61777-01e9-0310-a592-d414129be87e
"
"778b1786739af1de0d71b8684bb7ef6a8d87ac55","2005-06-25 13:24:19+00:00","The AngleArc() function that was being used to draw circles on Windows turns
out to be unsupported on the Win9x/Me series. Use Arc() instead (tested on
Win98 and Win2K).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6012 cda61777-01e9-0310-a592-d414129be87e
"
"4db8307ccfe64ca34b650ac57e19051a6aa19f06","2005-06-25 13:43:45+00:00","Make the keyboard-control cursors visible whenever a keyboard control is
activated.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6013 cda61777-01e9-0310-a592-d414129be87e
"
"b78285a0f42632cc1aece027179121dcf70111e6","2005-06-25 13:52:52+00:00","Further additions to the Guess docs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6014 cda61777-01e9-0310-a592-d414129be87e
"
"dc21c3f22c30a3b432aa5aa61306ba0687b1be9f","2005-06-25 17:24:03+00:00","Add debugging support.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6018 cda61777-01e9-0310-a592-d414129be87e
"
"a6a7c6c0a4e293c7d81f6165019e9aef3e25a975","2005-06-26 12:54:08+00:00","Under Gtk 1.2 (at least on Debian woody), a config or preset change that would
otherwise not cause the window size to change caused it to become very small
indeed. This change from Simon fixes that behaviour; I haven't tested it with
Gtk 2.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6022 cda61777-01e9-0310-a592-d414129be87e
"
"f06d2439d26222ebd0ce687a1609fd278ffc1054","2005-06-26 13:12:34+00:00","Fix GTK casts to restore correct compilation on GTK 2.0 after r6022.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6023 cda61777-01e9-0310-a592-d414129be87e
"
"59ddba269e7d305a124c0e19a8ee074d28e4661c","2005-06-27 19:34:54+00:00","Re-architecting of the game backend interface. make_move() has been
split into two functions. The first, interpret_move(), takes all the
arguments that make_move() used to get and may have the usual side
effects of modifying the game_ui, but instead of returning a
modified game_state it instead returns a string description of the
move to be made. This string description is then passed to a second
function, execute_move(), together with an input game_state, which
is responsible for actually producing the new state. (solve_game()
also returns a string to be passed to execute_move().)

The point of this is to work towards being able to serialise the
whole of a game midend into a byte stream such as a disk file, which
will eventually support save and load functions in the desktop
puzzles, as well as restoring half-finished games after a quit and
restart in James Harvey's Palm port. Making each game supply a
convert-to-string function for its game_state format would have been
an unreliable way to do this, since those functions would not have
been used in normal play, so they'd only have been tested when you
actually tried to save and load - a recipe for latent bugs if ever I
heard one. This way, you won't even be able to _make_ a move if
execute_move() doesn't work properly, which means that if you can
play a game at all I can have pretty high confidence that
serialising it will work first time.

This is only the groundwork; there will be more checkins to come on
this theme. But the major upheaval should now be done, and as far as
I can tell everything's still working normally.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6024 cda61777-01e9-0310-a592-d414129be87e
"
"3c6206a1281fddedebbf921d625184cbef3b7995","2005-06-28 06:59:27+00:00","Annoying special cases for Mines.

Firstly, the `Restart' function now reconstructs an initial game
state from the game description rather than dup_game(states[0]).
This means that Restart in a game of Mines restarts to just _after_
the initial click, so you can resume the puzzle-solving part without
having to remember where you placed that click.

Secondly, the midend now contains a second `private' game desc,
which is guaranteed to actually reconstruct the initial game_state
correctly (which Mines's publicly visible game descs tend not to,
since they describe a state which has already had the first click).
This should make serialising of Mines more sensible.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6025 cda61777-01e9-0310-a592-d414129be87e
"
"af7b19a223ea87bffe85469a4101518d6a070d6c","2005-06-28 07:33:49+00:00","Another function pair required for serialisation; these ones save
and restore anything vitally important in the game_ui. Most of the
game_ui is expected to be stuff about cursor positions and currently
active mouse drags, so it absolutely _doesn't_ want to be preserved
over a serialisation; but one or two things would be disorienting or
outright wrong to reset, such as the Net origin position and the
Mines death counter.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6026 cda61777-01e9-0310-a592-d414129be87e
"
"3078025ed1b7685de52d48bcfe28eee76b0f3f98","2005-06-28 08:06:56+00:00","Move a rogue declaration to the top of its block.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6027 cda61777-01e9-0310-a592-d414129be87e
"
"63e92ea5df0696c96a605eb813940d52b71f117c","2005-06-28 08:35:55+00:00","Rogue diagnostic!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6028 cda61777-01e9-0310-a592-d414129be87e
"
"3bae77da3fcebe75ffd11502745c9abd566ef292","2005-06-28 11:14:09+00:00","More serialisation changes: the game_aux_info structure has now been
retired, and replaced with a simple string. Most of the games which
use it simply encode the string in the same way that the Solve move
will also be encoded, i.e. solve_game() simply returns
dupstr(aux_info). Again, this is a better approach than writing
separate game_aux_info serialise/deserialise functions because doing
it this way is self-testing (the strings are created and parsed
during the course of any Solve operation at all).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6029 cda61777-01e9-0310-a592-d414129be87e
"
"08f6d526e0a90a4a55aa0b1b73f1e395fed01e2e","2005-06-28 17:05:05+00:00","Actually implemented the serialise/deserialise functions in
midend.c. Also I've added an experimental front end in gtk.c only:
`Save' and `Load' options on the Game menu, which don't even show up
unless you define the magic environment variable
PUZZLES_EXPERIMENTAL_SAVE. Once I'm reasonably confident that the
whole edifice is plausibly stable, I'll take that out and turn it
into a supported feature (and also implement it in OS X and Windows
and write documentation).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6030 cda61777-01e9-0310-a592-d414129be87e
"
"1c0f48aefd0b17b2cee7bba9b047b2c9d07804fb","2005-06-28 17:43:50+00:00","New {en,de}code_ui functions should be static. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6031 cda61777-01e9-0310-a592-d414129be87e
"
"10cab5a9cc059847ca4a6a5d6a93ae318aaa4f9f","2005-06-28 18:10:20+00:00","Make peg removal accessible from the keyboard.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6032 cda61777-01e9-0310-a592-d414129be87e
"
"e274ad5bd640e604d2f756590b1462c951711b68","2005-06-29 08:20:49+00:00","When serialising this game, it's probably better to keep the
half-finished guess in the game_ui rather than throwing it away.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6033 cda61777-01e9-0310-a592-d414129be87e
"
"198e2685745f431eeb6d78b02757ff3dbd36e1b6","2005-06-29 12:19:08+00:00","Validation of random-state-type game descriptions was broken. This
meant that a Mines game saved before the first click had taken place
could not be successfully reloaded.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6036 cda61777-01e9-0310-a592-d414129be87e
"
"66ca3ba7f7c3062ef017b0dca96b5da43e155516","2005-06-29 16:32:53+00:00","Add a cast whose absence was causing a (-Werror-exacerbated) compile
warning on OS X.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6037 cda61777-01e9-0310-a592-d414129be87e
"
"25e3bf30ed224f7cb08be590500de22965fa51a9","2005-06-30 08:25:47+00:00","Attempting to begin a drag from (i.e. just click on) the hint pegs
for a past guess caused strangeness up to and including segfault,
thanks to bad bounds checking. Well spotted John Sullivan.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6040 cda61777-01e9-0310-a592-d414129be87e
"
"b8fabc5e38916c6404f749bccc5a4c8e46667f33","2005-06-30 09:07:00+00:00","General robustness patch from James Harvey:
- most game_size() functions now work in doubles internally and
round to nearest, meaning that they have less tendency to try to
alter a size they returned happily from a previous call
- couple of fiddly fixes (memory leaks, precautionary casts in
printf argument lists)
- midend_deserialise() now constructs an appropriate drawstate,
which I can't think how I overlooked myself since I _thought_ I
went through the entire midend structure field by field!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6041 cda61777-01e9-0310-a592-d414129be87e
"
"dfb9bd054b720690d05b76414b968269e72be2da","2005-06-30 18:00:37+00:00","Load and Save are now supported on all three desktop platforms, and
documented. (This means the GTK temporary dependency on an
environment variable is now gone.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6042 cda61777-01e9-0310-a592-d414129be87e
"
"9bcdff464a32a9f97b43da2ad7a854002a517fe6","2005-06-30 18:11:02+00:00","Preset names retrieved from the environment must be dupstr()ed. How
did I miss this before? It just caused a segfault for me, which is
entirely fair enough, but I've no idea why it didn't fail before!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6043 cda61777-01e9-0310-a592-d414129be87e
"
"2261f9babf759ec7ffbe2d56f6962739c4494d16","2005-06-30 18:11:41+00:00","Prevent drags from being started outside the playing area, which was
causing invalid move descriptions to be returned from
interpret_move() and then failing an assertion when execute_move()
refused them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6044 cda61777-01e9-0310-a592-d414129be87e
"
"b8d92861bea17ee626c24c01572a2ea240bea11f","2005-07-01 16:50:49+00:00","James Harvey points out that entering an invalid game ID can affect
the current midend state even if you don't subsequently enter a
valid one. Reorganise midend_game_id_int() so that (just like
midend_deserialise()) it does all its error checking before altering
anything in the midend's persistent data, so that it either succeeds
completely or fails before doing anything at all.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6045 cda61777-01e9-0310-a592-d414129be87e
"
"3190cf46e3e928d9d835427d4011d89ae129f39d","2005-07-03 09:35:29+00:00","draw_polygon() and draw_circle() have always had a portability
constraint: because some front ends interpret `draw filled shape' to
mean `including its boundary' while others interpret it to mean `not
including its boundary' (and X seems to vacillate between the two
opinions as it moves around the shape!), you MUST NOT draw a filled
shape only. You can fill in one colour and outline in another, you
can fill or outline in the same colour, or you can just outline, but
just filling is a no-no.

This leads to a _lot_ of double calls to these functions, so I've
changed the interface. draw_circle() and draw_polygon() now each
take two colour arguments, a fill colour (which can be -1 for none)
and an outline colour (which must be valid). This should simplify
code in the game back ends, while also reducing the possibility for
coding error.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6047 cda61777-01e9-0310-a592-d414129be87e
"
"ab2b50dc8439c068e6bfde393f92d73757d97ddd","2005-07-03 11:45:49+00:00","Allow game backends to use even special keystrokes such as N and Q;
they will only be processed as special by the midend if unwanted by
the backend. This causes 5x5 Solo to become just about playable,
because you can now click in a square and type `n'. However, typing
`n' when a square is not selected will revert to the normal
behaviour of starting a new game.

(This isn't particularly ideal, I know, but it's better than
nothing.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6048 cda61777-01e9-0310-a592-d414129be87e
"
"d6fdc6a2b3b6b03d5beba9efdc8cc6f01ae29f33","2005-07-03 14:49:00+00:00","James H's patch for a keyboard-controlled cursor in Flip.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6049 cda61777-01e9-0310-a592-d414129be87e
"
"f63c50be8eaacc1a50b42af992d894bbc5b87232","2005-07-04 11:21:50+00:00","Fix bounds checking for Flip cursor control.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6050 cda61777-01e9-0310-a592-d414129be87e
"
"a638b304df3921994d82d9c1a173b7ae7a189c63","2005-07-04 14:35:14+00:00","Document keyboard controls for Flip


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6051 cda61777-01e9-0310-a592-d414129be87e
"
"125d2f36b0767311be0b7460d3df17180f822bc6","2005-07-04 19:42:55+00:00","Peg Solitaire implementation, complete with a random board
generator. The generator is lacking in almost any kind of finesse,
but it produces puzzles which at least _I_ find plausibly puzzling.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6052 cda61777-01e9-0310-a592-d414129be87e
"
"7ba39ea55788513846c291ef8fa0ebfd577302a8","2005-07-04 19:53:36+00:00","Documentation for Pegs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6053 cda61777-01e9-0310-a592-d414129be87e
"
"0251db80ce49e245ad7b4d16f95fd737f40a331a","2005-07-04 19:55:10+00:00","There's always one. Forgot to add Pegs to `make install'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6054 cda61777-01e9-0310-a592-d414129be87e
"
"bc7e4d554670f2d4ff9e2fc8710dfabccfb73014","2005-07-04 20:06:35+00:00","Add WinHelp topic.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6056 cda61777-01e9-0310-a592-d414129be87e
"
"192479a2e8de72b5964384fca0c09c75ae439e1f","2005-07-04 21:07:40+00:00","Clarify that diagonal moves are not permitted in Pegs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6057 cda61777-01e9-0310-a592-d414129be87e
"
"36e5f62a909abbe8cc9d3558711e7cc77c717b6c","2005-07-05 12:03:56+00:00","James Harvey points out a missing ifdef.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6058 cda61777-01e9-0310-a592-d414129be87e
"
"ed9182ebddf90c257da190c733fdc8b041adcbb6","2005-07-05 18:13:31+00:00","Refactored the game_size() interface, which was getting really
unpleasant and requiring lots of special cases to be taken care of
by every single game. The new interface exposes an integer `tile
size' or `scale' parameter to the midend and provides two much
simpler routines: one which computes the pixel window size given a
game_params and a tile size, and one which is given a tile size and
must set up a drawstate appropriately. All the rest of the
complexity is handled in the midend, mostly by binary search, so
grubby special cases only have to be dealt with once.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6059 cda61777-01e9-0310-a592-d414129be87e
"
"a73d2ea849b1a57fe99f77bc232f8529f9823410","2005-07-05 18:14:03+00:00","Add `pegs' to svn:ignore.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6060 cda61777-01e9-0310-a592-d414129be87e
"
"74e792ed9118a80a9c34a5d69a5e18e15e863c3e","2005-07-05 18:57:34+00:00","Add a completion flash when you get down to a single peg.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6061 cda61777-01e9-0310-a592-d414129be87e
"
"b6417889905aeeec09a3cf225f2b5b5234660347","2005-07-05 19:10:26+00:00","typo


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6062 cda61777-01e9-0310-a592-d414129be87e
"
"5e3896cf2f56bd077f180c173add19ad0caf44d0","2005-07-05 19:11:51+00:00","Add HACKING to main doc build.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6063 cda61777-01e9-0310-a592-d414129be87e
"
"16936955636eb9520346730f2d598b9660224640","2005-07-05 19:12:56+00:00","revert supposed typo -- I have no brain


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6064 cda61777-01e9-0310-a592-d414129be87e
"
"9a37c043869bd2375429703caf3d05ce96913fde","2005-07-05 19:38:27+00:00","It's been a new year for a while now.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6065 cda61777-01e9-0310-a592-d414129be87e
"
"8d44c0b46026b0e87da4149e049f24669ff342ad","2005-07-05 19:40:32+00:00","Enhancements to mkfiles.pl and Recipe to arrange for the auxiliary
command-line programs (solosolver, patternsolver, mineobfusc) to be
built as part of the normal Makefiles. This means mkfiles.pl now has
the capability to compile a source file more than once with
different #defines. Also, fixes for those auxiliary programs and one
fix in midend.c which the Borland compiler objected to while I was
testing its makefile generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6066 cda61777-01e9-0310-a592-d414129be87e
"
"2e0e88ed8fffb5ad5b0f8d81f26227025ca0ab05","2005-07-05 21:27:19+00:00","Add a `full' parameter to validate_params(), analogous to the one in
encode_params(). This is necessary for cases where generation-time parameters
that are normally omitted from descriptive IDs can place restrictions on other
parameters; in particular, when the default value of a relevant generation-time
parameter is not the one used to generate the descriptive ID, validation could
reject self-generated IDs (e.g., Net `5x2w:56182ae7c2', and some cases in
`Pegs').


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6068 cda61777-01e9-0310-a592-d414129be87e
"
"0c9ee6a27c274b481658af2b8ce352a4ab012c44","2005-07-05 21:40:29+00:00","Revert the code that assumed that incoming parameters used a random generation
scheme in r6068, since this messed up the non-permanency of the non-limited
parameter.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6069 cda61777-01e9-0310-a592-d414129be87e
"
"b2c3cd684f5b657d2272728b619cc95a91e86328","2005-07-06 11:06:17+00:00","Some patches from James H:
- reinstate the initialisation of ds->w and ds->h in guess.c, which
I'd accidentally removed during game_size() refactoring
- reorganise Net's interpret_move() so that my uncommitted patch
for drag-based UI (which he uses on the Palm port) will apply
more easily
- the interpret_move() changes make it easy to have a single move
type which rotates a tile by 180 degrees, so this is now provided
via the `F' key (but there's no spare button available to provide
it via the mouse).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6070 cda61777-01e9-0310-a592-d414129be87e
"
"200ac3b036e35ece02b356d7dd837d07442f349b","2005-07-06 18:27:40+00:00","Refactoring from James H: the highlight and lowlight colour setup
common to Fifteen, Sixteen, Twiddle and Pegs is now a utility
function in misc.c.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6076 cda61777-01e9-0310-a592-d414129be87e
"
"d2b946a2d280c03627b86f117e65806285d0955f","2005-07-06 18:36:20+00:00","Unify the two solvers in Solo. nsolve has now had recursion
capability added to it, to be used only when all else fails, and is
simply called `solver'. This means that:

- solving of 5x5 Trivial grids using the `Solve' function, which
previously hung for ages because rsolve happened to take a wrong
turning at the start, is now zippy
- solosolver doesn't require the confusing -r and -n options
- solosolver can show its working even for Unreasonable grids.

Unfortunately, the new unified solver still isn't suitable for grid
generation. After it proved to be so much faster at solving 5x5s, I
hoped to be able to substitute it for rsolve during generation and
gain additional speed in 5x5 generation too; but no luck, because
it's slower _per recursion level_, and although during solving it
makes up for this by needing very few levels, there is a lot of
_unavoidable_ recursion during generation, especially at 5x5. A
hybrid strategy which starts off with rsolve and switches to the
unified solver at a critical point proved unsatisfactory as well,
because the critical point changes depending on the vagaries of the
recursion and can't be pinpointed easily. So rsolve is still in
there, only renamed `gridgen' because that's now all it's good for.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6077 cda61777-01e9-0310-a592-d414129be87e
"
"d9ba50c2895879ec25f562514c96fb749c1009be","2005-07-06 20:10:03+00:00","Move various printf()s after declarations.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6078 cda61777-01e9-0310-a592-d414129be87e
"
"74f3861ca0e33d00b48893c080a05ba04dbc18de","2005-07-06 21:24:28+00:00","Missing quit on error was leading to an assertion failure on some
types of incorrectly formatted save file.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6079 cda61777-01e9-0310-a592-d414129be87e
"
"3c5a9f9dea0a1f17ba8c07b935f64e95efd82661","2005-07-09 10:19:41+00:00","Alter the `Octagon' board preset so that instead of presenting you
with the obvious central hole it presents you with a randomly chosen
one of twelve other holes. The reason is, the central-hole starting
position is provably insoluble (proof given in comments), so instead
we pick from the ones that are actually possible.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6083 cda61777-01e9-0310-a592-d414129be87e
"
"38baa0090dccddb4ad8ef295e58ea73344b82b8d","2005-07-10 09:27:08+00:00","Subtle UI change to Mines. Although I mostly find the unified left-
button interface (same button to open a closed square or to clear
around an open one) to be a massive help, there is one circumstance
in which it frequently kills me: if I click down on an open square I
want to clear around, then the mouse pointer accidentally drifts
over on to the nearest closed square before I release, I'll end up
opening that square instead and (usually) dying. So this checkin
causes Mines to note which type of square I left-clicked on, and to
do nothing if the button release is on the other type.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6086 cda61777-01e9-0310-a592-d414129be87e
"
"9a216de3700b8e17ea520b4b3bc272cc301357cb","2005-07-10 10:06:04+00:00","Change of policy on game_changed_state(). Originally, it was called
by the midend every time the game state changed _other_ than as a
result of make_move(), on the basis that when the game state changed
due to make_move() the game backend had probably noticed anyway.
However, when make_move() split up, this became more fiddly: if the
game_ui had to be updated based on some property of the final game
state, then execute_move() couldn't do it because it didn't have a
pointer to the game_ui, but it was fiddly to do it in
interpret_move() because that didn't directly have a copy of the
finished game state to examine. Same Game (the only game to be
affected) had to deal with this by actually having interpret_move()
_call_ execute_move() to construct a temporary new game state,
update the UI, and then throw it away.

So now, game_changed_state() is called _every_ time the current game
state changes, which means that if anything needs doing to the
game_ui as a result of examining the new game state, it can be done
there and save a lot of effort.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6087 cda61777-01e9-0310-a592-d414129be87e
"
"52c85ce1ee7156be3e8041d00a788f61f017dce4","2005-07-10 10:17:13+00:00","game_timing_state() now has access to the game_ui. This means that
whether the timer is currently going is no longer solely dependent
on the current game_state: it can be dependent on more persistent
information stored in the game_ui. In particular, Mines now freezes
the timer permanently once you complete a grid for the first time,
so that you can then backtrack through your solution process without
destroying the information about how long it took you the first time
through.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6088 cda61777-01e9-0310-a592-d414129be87e
"
"640e8cd6c6d9f46049ce665f3d7e257289929de4","2005-07-14 17:37:05+00:00","Introduce a `shuffle' utility function.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6090 cda61777-01e9-0310-a592-d414129be87e
"
"fc5542f7d69e50f9e4d8d589ea267769d0a266c8","2005-07-14 17:42:01+00:00","New puzzle: Dominosa.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6091 cda61777-01e9-0310-a592-d414129be87e
"
"c9df09a0adcc2e9e3b15c3bc30911781fc8e607f","2005-07-14 18:15:23+00:00","Cleanups to Solo:
- use the new `shuffle' utility function in a couple of places
- remove the random_state parameter from solver(). It was there
because I initially wanted to use the same solver for grid
generation, but since I had to abandon that plan the solver now
doesn't have any need for randomness at all.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6093 cda61777-01e9-0310-a592-d414129be87e
"
"4f770234b781aac21f5214d3e3c09e30ce3c9890","2005-07-14 22:50:58+00:00","Add Dominosa printout support.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6094 cda61777-01e9-0310-a592-d414129be87e
"
"05316fa5fb5c269625699e604f733fb02da1a676","2005-07-15 16:43:02+00:00","Improve speed of grid generation: I've found something simple I can
do during construction which massively increases (by over a factor
of four with default parameters) the probability that any given
randomly generated grid will be uniquely solvable.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6096 cda61777-01e9-0310-a592-d414129be87e
"
"7ad97b8bd9f102abe2df4eec456917b7fe0b6b00","2005-07-16 19:51:53+00:00","New puzzle: `Untangle', cloned (with the addition of random grid
generation) from a simple but rather fun Flash game I saw this
morning.

Small infrastructure change for this puzzle: while most game
backends find the midend's assumption that Solve moves are never
animated to be a convenience absolving them of having to handle the
special case themselves, this one actually needs Solve to be
animated. Rather than break that convenience for the other puzzles,
I've introduced a flag bit (which I've shoved in mouse_priorities
for the moment, shamefully without changing its name).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6097 cda61777-01e9-0310-a592-d414129be87e
"
"b338ecc95f0af9633f93a8779a9f6b847aeb9859","2005-07-16 20:02:15+00:00","Sanity-checking patch from Phil Bordelon: since Solo can't cope with
more than 36 distinct symbols (it runs out of alphanumerics), check
this in validate_params. I hate to do this, since I like puzzle
sizes to at least be open-ended in _principle_, but in this case
there's a fundamental UI limitation which won't be fixed by getting
a faster CPU.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6098 cda61777-01e9-0310-a592-d414129be87e
"
"4e7dae8b39c4c3c82be438e580d644f2099701e1","2005-07-16 20:06:37+00:00","Cleanups and memory leak fixes from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6099 cda61777-01e9-0310-a592-d414129be87e
"
"c986f2ecbc6ead94b6c05a34d4419a449d74e4af","2005-07-17 08:44:18+00:00","Another game from James H: `Black Box'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6100 cda61777-01e9-0310-a592-d414129be87e
"
"c7b846f62f04bfb4b5f2b1d1efc998f37a36201c","2005-07-17 08:46:00+00:00","Bah, there's always one: failed to `svn add' blackbox.c itself!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6101 cda61777-01e9-0310-a592-d414129be87e
"
"89c9f66a894e25da210ff322c44aa6a4a6edb9bb","2005-07-17 09:35:01+00:00","I keep forgetting to do things when adding a new puzzle, so here's a
checklist.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6103 cda61777-01e9-0310-a592-d414129be87e
"
"15e86a8697843ab6cb1c6961375b47360c769bda","2005-07-17 10:13:41+00:00","Use \q{} and \by in Black Box docs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6104 cda61777-01e9-0310-a592-d414129be87e
"
"d82f441088f3716a0cc65b81ce18a3c4b2416015","2005-07-17 10:33:40+00:00","Black Box: fix 'reveal' button location, explain what's meant by the
`firing range'


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6105 cda61777-01e9-0310-a592-d414129be87e
"
"9f04affc4cbe56d0138dd7f91dccc5e3e20aac15","2005-07-17 11:15:50+00:00","Patch from Chris Emerson: rather than dynamically calling
get_correct() at (among other things) every redraw, we call it once
at the creation of a new game_state to save CPU.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6106 cda61777-01e9-0310-a592-d414129be87e
"
"e0671ffbefa6d67dbcef4fab4a9fd9aaf7a30fb6","2005-07-17 12:12:16+00:00","Get rid of the malloc in shuffle(), by defining a subfunction
memswap() which declares a fixed-size buffer on the stack and uses
it multiple times if necessary.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6107 cda61777-01e9-0310-a592-d414129be87e
"
"25d742cac6577f7396f7d4c918690891aa20e818","2005-07-17 14:49:13+00:00","Two tiny cleanup patches from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6111 cda61777-01e9-0310-a592-d414129be87e
"
"7f13e0147171d123bca4c586da6323281325b2fd","2005-07-17 17:10:11+00:00","Quite a few instances of the Cardinal Error of Ctype were turned up
by a grep I just did. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6113 cda61777-01e9-0310-a592-d414129be87e
"
"50d60f8cb400de9534e0dfe4774c5e2dd16a0820","2005-07-17 17:12:21+00:00","Switch Untangle to using `long' rather than `int' in its internal
rationals, for the sake of 16-bit-int platforms such as Palm. Thanks
to James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6114 cda61777-01e9-0310-a592-d414129be87e
"
"a91a4090ef7a3b1488e169d3424daec71fa81a66","2005-07-18 18:54:06+00:00","Fix to Chris's patch in r6106 (also from Chris).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6117 cda61777-01e9-0310-a592-d414129be87e
"
"44a93f94da93e51991330c1a0d23fe26d2f4492a","2005-07-18 19:07:36+00:00","Another fix from Chris: Guess's allow-blanks mode wasn't allowing
blanks...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6118 cda61777-01e9-0310-a592-d414129be87e
"
"08dd32c06ae937f7b0c30b3edf6ffa4ecfc5d8b6","2005-07-19 19:33:49+00:00","Some attempt to explain Dominosa for those unfamiliar with dominos. (Not sure
I've succeeded.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6120 cda61777-01e9-0310-a592-d414129be87e
"
"72dbbb8af744180034d208838763f8d3bc641846","2005-07-20 11:05:35+00:00","The Untangle completion flash was weedy and anaemic; beef it up a
bit. In particular, it now flashes between _two_ specially picked
colours (white and mid-grey), meaning that it should be visible even
if your default background colour is white; and it also flashes
twice rather than once.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6121 cda61777-01e9-0310-a592-d414129be87e
"
"3d05a8b2eee595cda9e27d1485e28b61444f6f82","2005-07-20 23:35:43+00:00","Sync with website


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6122 cda61777-01e9-0310-a592-d414129be87e
"
"729a2381d9f8e6bb8acc82e742e6a0ebde99e45a","2005-07-21 17:26:46+00:00","I've been meaning to do this for ages: all the Makefiles now give
$(XFLAGS) _after_ $(CFLAGS) on the compiler command lines, meaning
that you can provide options in XFLAGS on the makefile which will
override the ones in CFLAGS. For example, `make XFLAGS=-O0' to make
debugging easier.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6123 cda61777-01e9-0310-a592-d414129be87e
"
"599baac1f9d9639a95fcc60eba945b30d888637f","2005-07-21 18:06:31+00:00","Until now, Same Game has been the only puzzle in this collection
which is unable to guarantee that every grid it generates can be
solved. So I'm eliminating that exception: this checkin contains a
more sophisticated grid generator which does guarantee solubility.
It's a bit slow (most noticeably on the 15x10c3 preset), and the
quality of the generated grids is slightly weird (a tendency toward
small regions rather than large sweeping areas of contiguous
colour); however, I'm willing to see the latter as a feature for
now, since making the game more challenging while simultaneously
guaranteeing it to be possible sounds like an all-round win to me.

From now on I'm raising my standards for contributions to this
collection. I made this fix to Same Game because I heard a user
_automatically assume_ that any puzzle in my collection would not be
so uncouth as to generate an impossible grid; as of this checkin
that's actually true, and I intend to maintain that standard of
quality henceforth.

(Guaranteeing a _unique_ solution is more of an optional extra,
since there are many games for which it isn't a meaningful concept
or isn't particularly desirable. Which is not to say that _some_
games wouldn't be of unacceptably low quality if they failed to
guarantee uniqueness; it depends on the game.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6124 cda61777-01e9-0310-a592-d414129be87e
"
"55f72b198b5ae76803bfffd42da89b2f955b748d","2005-07-22 11:06:57+00:00","James H profiled the new Same Game grid generator and discovered it
was spending 60% of its time in shuffle(). The purpose of the
shuffle() call was to go through a largish array in random order
until we found an element that worked, so there's no actual need to
shuffle the whole array every time and I only did it out of
laziness. So I now pick a random element each time I go round the
loop, meaning I save a lot of shuffling effort whenever the loop
terminates early (which is often). I get about a factor of two speed
improvement from this small change.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6125 cda61777-01e9-0310-a592-d414129be87e
"
"3ff829b373ddd077207370fcc26f7319c1deb850","2005-07-22 11:55:50+00:00","The `Solve' operation now rotates and/or reflects the solution grid
to bring it as close as possible to the current game state. This
means that if you request `Solve' after solving a puzzle yourself,
with the intention of finding out how similar your solution is to
the program's, then you will mostly see the differences in _shape_
rather than those being masked by the fact that yours happened to be
the other way up.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6126 cda61777-01e9-0310-a592-d414129be87e
"
"6fc12d222eaa749151e70d46643c6ab44f45a773","2005-07-22 12:07:56+00:00","Solve animation (currently only in Untangle) was failing to set
me->anim_pos to zero, meaning that if it happened immediately after
a completion flash then anim_pos would start off half way through
its run.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6127 cda61777-01e9-0310-a592-d414129be87e
"
"e1d1065556caf9eff465c781f6bb7b7bd651db80","2005-07-24 10:05:11+00:00","(GTK only so far) Allow the argument passed to a game binary to be
either a game ID or a save file name. (The former takes priority,
because you can usually find a synonym for the latter, such as by
prepending `./' or `$PWD/'.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6135 cda61777-01e9-0310-a592-d414129be87e
"
"a6ecf573251a5153d5b49ed209a8638192cb42ac","2005-07-24 10:09:04+00:00","Another diagnostic mode for Untangle: if compiled with
`-DSHOW_CROSSINGS', it will show each edge in red if it is crossed
by anything, and in black otherwise. Distracting and not
particularly useful during play, but occasionally handy for
debugging cross().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6136 cda61777-01e9-0310-a592-d414129be87e
"
"0d2216cf10bf58cb7c3202a1df7467a9be744c2e","2005-07-24 10:39:33+00:00","The very core of cross() is capable of suffering integer overflow on
large puzzles. Resort to hand-hacked 64-bit arithmetic for doing dot
products; everything else remains in `long' for the moment.

(Ideally I'd auto-detect the presence of `long long' and use it in
place of my cheap plastic imitation where possible, but since I
currently don't have a configure mechanism that'll have to wait.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6137 cda61777-01e9-0310-a592-d414129be87e
"
"acd321e606a17f5ad5bb52aa6786cf7fd57656a6","2005-07-28 17:12:18+00:00","Shiny new developer documentation to replace the old sketchy HACKING
guide.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6142 cda61777-01e9-0310-a592-d414129be87e
"
"c2fb4637befa99fe66b8dd85eb7d8380323e4c71","2005-07-29 08:20:40+00:00","Tweak a paragraph after discussion with Simon.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6144 cda61777-01e9-0310-a592-d414129be87e
"
"33a751c2b8aea1e85fd154db25062aef3f20ab28","2005-07-29 11:24:55+00:00","Patches from Ben Hutchings to fix failures of sscanf error checking.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6147 cda61777-01e9-0310-a592-d414129be87e
"
"1889c314bf31f090ec30dc818fa6945fa413b983","2005-07-29 11:34:02+00:00","Ben Hutchings reports that gcc 4 gives an optimiser warning because
it can't tell that one branch of a particular switch is always
taken. Adding a default clause with an automatic assertion failure
apparently fixes it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6148 cda61777-01e9-0310-a592-d414129be87e
"
"5e1602f396e2a2f78569fc41ad7f019c6778fb0d","2005-07-29 12:07:10+00:00","Various fixes and cleanups suggested by Ben Hutchings:
- clarified wording of messages in validate_params(), including in
particular a correction from `< 255' to `<= 255'
- fixed random_upto() in game generation which caused the maximum
number of balls never to be used when there was uncertainty
- fixed widespread miscalculation of rectangular-array indices
(multiplication by h instead of w, which would have broken
non-square grids rather profoundly)
- corrected an ANSI namespace violation
- removed real functionality from the inside of assert()
statements, so that the game should still work when compiled
-DNDEBUG
- couple of unnecessary linear-time loops removed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6149 cda61777-01e9-0310-a592-d414129be87e
"
"6c167e194dbf72a0294860cfd999cb89b49c3ff8","2005-07-29 16:45:52+00:00","One more fix from Ben H. Also switched round the arena colour
selection in the redraw function, so that locked squares are no
longer displayed once the game is at an end. (It looked untidy and
disorienting for lighter-coloured locked squares to suddenly become
darker when the box was opened. You can still flip back and forth to
your previous game state using undo/redo if you want to compare the
results against your lock pattern.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6150 cda61777-01e9-0310-a592-d414129be87e
"
"c4d83d407bd4088182fe32bdf88fa023ac0ff52e","2005-07-29 23:05:10+00:00","missing `i' in `\e'


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6151 cda61777-01e9-0310-a592-d414129be87e
"
"86d4de2e37326831c4411fde36362ceab9d61c1c","2005-07-31 14:56:18+00:00","New end-game approach to Black Box. Instead of revealing the ball
positions immediately when you make an error, the game now reveals
as little information as is necessary to prove you wrong (including
none - if an existing laser path you know about is inconsistent with
your guesses, the game will just point it out and tell you nothing
new!) and you can try again. Errors are counted in much the same way
as deaths in Mines.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6152 cda61777-01e9-0310-a592-d414129be87e
"
"b4544d468c309d2ff2265413afa7b418bc94861e","2005-08-01 11:27:01+00:00","Various cleanups and clarifications to devel.but; some from Richard
B and some from me. Also an additional utility function
`random_copy' from Richard B, which he says is useful in a new
puzzle he's working on and which seems likely to come in handy again
at some point.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6153 cda61777-01e9-0310-a592-d414129be87e
"
"9de33f1ec4ded9c2128fe18fa2351b003711042a","2005-08-02 23:16:46+00:00","New puzzle: `Slant', picked from the Japanese-language section of
nikoli.co.jp (which has quite a few puzzles that they don't seem to
have bothered to translate into English).

Minor structural change: the disjoint set forest code used in the
Net solver has come in handy again, so I've moved it out into its
own module dsf.c.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6155 cda61777-01e9-0310-a592-d414129be87e
"
"bb9a4535ab59d1281e09e3f0ee938fc8af990d73","2005-08-02 23:24:03+00:00","Bah! There's _always_ one. Display glitch corrected.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6156 cda61777-01e9-0310-a592-d414129be87e
"
"9c7dca3df5ed0fa93c387d872817d86c2d292b3a","2005-08-03 11:06:16+00:00","Slant uses the same generation strategy as Solo, despite not having
the property which devel.but claimed to be the reason why that
strategy works. A bit of thought revealed what the _real_ reason is
why this strategy works in some puzzles and not others, so I've
rewritten the paragraph to be more accurate.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6158 cda61777-01e9-0310-a592-d414129be87e
"
"4dd26f69199211d62206d9f93f2af75da3be0270","2005-08-03 12:44:51+00:00","Cleanups from James H: a few missing statics, a precautionary cast
or two, a debugging fix, a couple of explicit initialisations of
variables that were previously read uninitialised, and a fix for a
whopping great big memory leak in Slant owing to me having
completely forgotten to write free_game().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6159 cda61777-01e9-0310-a592-d414129be87e
"
"a10578df68b8a3621e047501bfc0e9fc3d82a3fe","2005-08-04 11:16:10+00:00","I am COMPLETELY GORMLESS. The Solo grid generator, when eliminating
clues from a filled grid, was using the algorithm

- loop over the whole grid looking for a clue (or symmetry group of
clues) which can be safely removed
- remove it
- loop over the whole grid again, and so on.

This was due to my vague feeling that removing one clue might affect
whether another can be removed. Of course this can happen - two
clues can be alternative ways of deducing the same vital fact so
that removing one makes the other necessary - but what _can't_
happen is for removing one clue to make another _become_ removable,
since you can only do that by _adding_ information. In other words,
after testing a clue and determining that it can't be removed, you
never need to test it again. Thus, a much simpler algorithm is

- loop over the possible clues (or symmetry groups) _once_, in a
random order
- for each clue (group), if it is removable, remove it.

This still guarantees to leave the grid in a state where no further
clues can be removed, but it greatly cuts down puzzle generation
time and also simplifies the code. I am a fool for not having
spotted this in three and a half months!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6160 cda61777-01e9-0310-a592-d414129be87e
"
"126671680e3a6db22df6edefe25fea52030e2aef","2005-08-04 17:07:51+00:00","Bug fix from James H: solve_game() was returning error messages in
the return value rather than in *error. In the old days type-
checking would have caught this, but now of course they're the same
type.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6161 cda61777-01e9-0310-a592-d414129be87e
"
"b36e6a59a4024d9dbb3729c9dbe085bf9e906279","2005-08-04 17:08:26+00:00","Patch from James H: tinker with the presets on SLOW_SYSTEMs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6162 cda61777-01e9-0310-a592-d414129be87e
"
"9f90fe730157d28005b853dc85f30c1cb1bd8233","2005-08-04 18:09:48+00:00","Environment-based configuration wasn't sensibly usable in games with
spaces in the name. Fixed. (One day I really must get round to
turning this into a proper config mechanism.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6163 cda61777-01e9-0310-a592-d414129be87e
"
"084c7f2007835c18aaa8dc96050e688bedfe1751","2005-08-04 19:14:10+00:00","New puzzle: `Light Up', by James H.

Also in this checkin (committed by mistake - I meant to do it
separately), a behind-the-scenes change to Slant to colour the two
non-touching classes of diagonals in different colours. Both colours
are set to black by default, but configuration by way of
SLANT_COLOUR_* can distinguish them if you want.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6164 cda61777-01e9-0310-a592-d414129be87e
"
"ae1b67005db1a207c5bf1809d4b2a343cb0d8d38","2005-08-05 17:17:23+00:00","Cleanups to completion flashes: all four of these games used to
redraw the whole window _every_ time game_redraw() was called during
a flash. Now they only redraw the whole window every time the
background colour actually changes. Thanks to James H for much of
the work.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6166 cda61777-01e9-0310-a592-d414129be87e
"
"c08200e42c0bd00e8c138fed701146d61f130e27","2005-08-06 10:24:52+00:00","A bunch of new reasoning techniques in the Slant solver, leading to
a new Hard mode. Also added a command-line `slantsolver' which can
grade puzzles and show working.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6167 cda61777-01e9-0310-a592-d414129be87e
"
"bcfce0b59f10bb8ef02405cb6254ea2e81b1b222","2005-08-06 10:33:46+00:00","Introduce an environment variable setting (SLANT_SWAP_BUTTONS=yes)
to reverse the effect of the mouse buttons. Gareth has been
complaining about this for days: apparently he finds precisely the
opposite control system intuitive to me.

This is a horrendous hack, and pushes me one step closer to losing
my temper and designing a proper preferences architecture.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6168 cda61777-01e9-0310-a592-d414129be87e
"
"60130048dc63e0d943fdfddc2f9aa07a2a7cd499","2005-08-06 10:38:34+00:00","Document hard mode in Slant, and also fix an obvious memory
management error in game_configure().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6169 cda61777-01e9-0310-a592-d414129be87e
"
"403044f1335f57318f698233f8129dea6713d08d","2005-08-06 14:52:26+00:00","Streamline `slantsolver' a bit (avoid showing advanced working on
easy puzzles, and stop having a second encoding of the difficulty
levels).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6170 cda61777-01e9-0310-a592-d414129be87e
"
"4b3764949d66608cec03642a99214234528d18ef","2005-08-07 08:01:51+00:00","Placate optimiser.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6171 cda61777-01e9-0310-a592-d414129be87e
"
"7b1613c835d7bef7ce2a61c905616876c5d60c84","2005-08-07 08:47:08+00:00","Remove conditional definition of MAX_GRIDGEN_TRIES, for consistency
between Palm and other ports when fed the same random seed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6172 cda61777-01e9-0310-a592-d414129be87e
"
"7f1ef171ba1128ede0044ab7f89e6b06ec27526c","2005-08-09 17:14:25+00:00","Implement error checking in Slant. Clue points are now highlighted
in red if it's impossible to fulfill them (either through too many
neighbours connecting to them, or too many not connecting to them),
and edges are highlighted in red if they form part of a loop.

In order to do this I've had to revamp the redraw function
considerably. Each square is now drawn including its top and left
grid edges, but _not_ its bottom or right ones - which means that I
need to draw an extra strip of empty squares outside the actual grid
in order to draw the few pixels which appear on the grid bottom and
right borders and also to red-highlight border clues.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6174 cda61777-01e9-0310-a592-d414129be87e
"
"25315cacad4a344c57b972b93d0fe0512323c85e","2005-08-09 18:09:07+00:00","Very fiddly corrections to the loop highlighting. ERRSLASH means the
slash in this square is red, so it does indeed imply that some of
the edge markings are also red; but it doesn't mean _all_ the edge
markings must be red. So instead of assuming ERRSLASH implies all
edge error markers, we set the correct set of edge error markers at
the same time as setting ERRSLASH, at which point we know which kind
of slash it is so we know which ones to set.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6175 cda61777-01e9-0310-a592-d414129be87e
"
"4105dc12cf3192f4dfcf487ed3e0c281ea9bdff1","2005-08-11 11:06:13+00:00","16-bit-cleanness fixes from James H (again). It would be really nice
to have some means of automatically spotting this sort of problem on
a desktop platform, but I can't immediately think of one; building a
trick compiler which thinks `int' is 16 bits would be the obvious
option, but it would immediately break the ABIs to all the system
functions.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6184 cda61777-01e9-0310-a592-d414129be87e
"
"39d10f632b4933e5221bbffbf3920e1e0fd33828","2005-08-11 11:06:59+00:00","Oops. Back out a local change I shouldn't have committed in r6184.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6185 cda61777-01e9-0310-a592-d414129be87e
"
"2ef443aa48b6055a4a26ca7fcc3e95875847b0f6","2005-08-13 10:43:26+00:00","New puzzle: `Map'. Vaguely original, for a change.

(This puzzle is theoretically printable, but I haven't added it in
print.py since there's rather a lot of painful processing required
to get from the game ID to the puzzle's visual appearance. It
probably won't become printable unless I get round to implementing a
more integrated printing architecture.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6186 cda61777-01e9-0310-a592-d414129be87e
"
"554cc3cacf5db7819f243577df76badd4a913f1c","2005-08-13 21:35:41+00:00","Memory leak fixes from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6188 cda61777-01e9-0310-a592-d414129be87e
"
"eed82c5e281e2b69531f3b8db2856fd93692a5d1","2005-08-15 14:12:07+00:00","Just noticed another thing that could easily catch me out when
adding a new puzzle.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6189 cda61777-01e9-0310-a592-d414129be87e
"
"b67419f8bb068f9d5866b074dbd919561111091d","2005-08-18 17:50:14+00:00","Substantial infrastructure upheaval. I've separated the drawing API
as seen by the back ends from the one implemented by the front end,
and shoved a piece of middleware (drawing.c) in between to permit
interchange of multiple kinds of the latter. I've also added a
number of functions to the drawing API to permit printing as well as
on-screen drawing, and retired print.py in favour of integrated
printing done by means of that API.

The immediate visible change is that print.py is dead, and each
puzzle now does its own printing: where you would previously have
typed `print.py solo 2x3', you now type `solo --print 2x3' and it
should work in much the same way.

Advantages of the new mechanism available right now:
- Map is now printable, because the new print function can make use
of the output from the existing game ID decoder rather than me
having to replicate all those fiddly algorithms in Python.
- the new print functions can cope with non-initial game states,
which means each puzzle supporting --print also supports
--with-solutions.
- there's also a --scale option permitting users to adjust the size
of the printed puzzles.

Advantages which will be available at some point:
- the new API should permit me to implement native printing
mechanisms on Windows and OS X.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6190 cda61777-01e9-0310-a592-d414129be87e
"
"b855ead970a50410e99df27f34997c8569396e01","2005-08-19 07:49:44+00:00","Bah, there's always one. Remove the now-erroneous `*.py' from the
makedist script.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6191 cda61777-01e9-0310-a592-d414129be87e
"
"617dfe6893324be22d3aa1d0cdfb190a848065ca","2005-08-19 12:29:08+00:00","Richard B points out a cut and paste error.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6192 cda61777-01e9-0310-a592-d414129be87e
"
"c39307b4cfa982aab30c3d491eaf4800e472e6ef","2005-08-20 15:48:55+00:00","Native Windows printing support, using the infrastructure I put in
place in r6190. I'm quite pleased that I didn't have to modify the
printing infrastructure _at all_ to make this work; the only source
change required outside windows.c was the addition of a trivial
utility function midend_get_params(), and that was for the benefit
of bulk puzzle generation rather than anything to do with actual
printing.

As far as I can tell, all printable puzzles now print almost
indistinguishably from the way they print under Unix. If you look
closely the font is slightly different, and the Windows standard
hatching doesn't seem to be quite as nice as the kind I did by hand
in ps.c (and, particularly annoyingly, hatched areas don't show up
at all for me when I print to a file and use gv, though they come
out fine on the printer itself); but it's all there, and it all
works.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6193 cda61777-01e9-0310-a592-d414129be87e
"
"c7ae9020ede904811f1e746d5093850a7351c54b","2005-08-20 15:49:43+00:00","Retire redundant print_line_width() in Net: a relic from a failed
printing strategy, irrelevant to the one which worked.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6194 cda61777-01e9-0310-a592-d414129be87e
"
"2fc741585581350adfd2241f1a90915d3bf3865e","2005-08-21 10:55:17+00:00","*blinks* I apparently didn't try _building_ the OS X port since the
printing upheaval. I could have sworn I had. Oh well; small errors
fixed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6197 cda61777-01e9-0310-a592-d414129be87e
"
"d0630f8ba9c0ec824090b4214541fab8a624bc38","2005-08-22 09:27:52+00:00","`Solve' operation on an already solved map without an aux_info was
returning NULL due to no moves being required, leading to a strange
error message. Trivial fix.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6198 cda61777-01e9-0310-a592-d414129be87e
"
"aef7f718ee5ab5753a466d128e03cedda043cc5a","2005-08-22 18:46:38+00:00","Memory leak in the new printing stuff, plus a couple of comment
corrections.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6199 cda61777-01e9-0310-a592-d414129be87e
"
"65b855ed7d4cace51acfb629f03ad30dd3406162","2005-08-22 22:58:19+00:00","James H points out a rogue fprintf in Net's print routine.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6202 cda61777-01e9-0310-a592-d414129be87e
"
"e1533c8a763b20c7ca64535320654c5e28578a4c","2005-08-23 12:49:21+00:00","Don't report an error when loading a saved game from the command
line unless there really _is_ an error!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6203 cda61777-01e9-0310-a592-d414129be87e
"
"38ae6aa20abc3c5acbe1b2caaa2aaae93b3daec9","2005-08-24 17:32:39+00:00","Brand new difficulty level in Solo. The other day Gareth and I
independently discovered an advanced reasoning technique in Map, and
then it occurred to me that since Solo can also be considered as a
graph-colouring game the same technique ought to be applicable. And
it is; so here's a new difficulty level, `Extreme', which sits just
above Advanced. Grids graded `Extreme' by new-Solo will of course
fall into old-Solo's `Unreasonable' category (since they're not
soluble using the old set of non-recursive methods). A brief and
unscientific experiment suggests that about one in six Unreasonable
grids generated by old-Solo are classified Extreme by the new
solver; so the remaining Unreasonable mode (now containing a subset
of the grids it used to) hasn't actually become much harder.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6209 cda61777-01e9-0310-a592-d414129be87e
"
"d6a23a403fc8f9aa15a5507b48f82096d939ae0e","2005-08-24 17:49:52+00:00","Minor update to Solo's documentation due to Extreme mode.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6210 cda61777-01e9-0310-a592-d414129be87e
"
"e846906460021e7df6161dace88dbfa0c3e3bc1d","2005-08-24 21:32:54+00:00","New puzzle: `Loopy', an implementation of Nikoli's `Slither Link' or
`Loop the Loop' puzzle. Contributed by Mike Pinna.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6211 cda61777-01e9-0310-a592-d414129be87e
"
"c15982094c953ef3713835ef11d93ac2eb1c37d7","2005-08-24 21:44:54+00:00","Optimiser placation for OS X gcc.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6212 cda61777-01e9-0310-a592-d414129be87e
"
"db840e13f5aea510dffb2a735a0489b33c439895","2005-08-24 22:13:43+00:00","Over-enthusiastic assertion introduced in the printing revamp was
causing Mines to crash one second after starting a game. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6214 cda61777-01e9-0310-a592-d414129be87e
"
"772e4bd2fe0b99c4d1b001f4eefb5bb7a9eb1fe1","2005-08-25 07:57:58+00:00","Mike points out that I made an error in one of the presets...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6216 cda61777-01e9-0310-a592-d414129be87e
"
"b8896e7d79920fd6a236dfd9154c48761ef510fc","2005-08-25 08:07:44+00:00","Phil Bordelon points out that the general convention is to orient
rectangular presets in a portrait fashion.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6217 cda61777-01e9-0310-a592-d414129be87e
"
"1c840d389d9f01e628f7f6b96d21853c220a9362","2005-08-25 18:14:54+00:00","Memory leak and type safety fixes from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6219 cda61777-01e9-0310-a592-d414129be87e
"
"55714ec66fd3db5d114c0ebb4b318666776a5ca6","2005-08-26 19:44:25+00:00","Trivial doc changes after recent prolificacy.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6220 cda61777-01e9-0310-a592-d414129be87e
"
"b186869107318bef2daf549c752c1795653a9f46","2005-08-27 09:21:22+00:00","New puzzle: `Inertia', originally written for Windows by Ben
Olmstead and reimplemented with the help of his source code which he
was kind enough to release into the public domain.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6222 cda61777-01e9-0310-a592-d414129be87e
"
"d11e72bff8499c9f753f3421f4b64d8a165d2978","2005-08-27 09:35:14+00:00","OS X seems particularly picky about possibly uninitialised
variables. Placate its optimiser (again).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6223 cda61777-01e9-0310-a592-d414129be87e
"
"aceca0759cdbdb9638b603e18dc2367d815f4947","2005-08-27 09:53:38+00:00","Fix array bounds violation in the solver. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6225 cda61777-01e9-0310-a592-d414129be87e
"
"a2be20637b8f776049c13711d9fbf949008fedc8","2005-08-28 09:35:55+00:00","HACKING.but -> devel.but


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6226 cda61777-01e9-0310-a592-d414129be87e
"
"952b9a038c2e1c43f2af139d4a9906649c302e06","2005-08-28 13:52:58+00:00","There seems to be some odd behaviour when GTK is asked to draw an
outline polygon with a clipping rectangle active. I don't know or
care whether this is GTK or my X server or what, but I'm working
around it by drawing the lines myself, which seems to sort it out.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6227 cda61777-01e9-0310-a592-d414129be87e
"
"210054d44cefdfd42285d0bbbf2deed33d65d958","2005-08-28 13:53:07+00:00","Error highlighting in Map.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6228 cda61777-01e9-0310-a592-d414129be87e
"
"987752e635709c1caeb0f93c4d9d98533c349af1","2005-08-28 14:29:19+00:00","Unreasonable mode for Map.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6229 cda61777-01e9-0310-a592-d414129be87e
"
"ecec40b0470e19022abd1b102f72c4371ec5e24e","2005-08-29 08:57:45+00:00","Aesthetic improvements to the Map error indicators:
- the exclamation mark was a bit dot-heavy
- allowing the indicator to be placed at a grid point as well as
half way between two grid points allows some much more natural
positioning.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6234 cda61777-01e9-0310-a592-d414129be87e
"
"619c4bbb13f2da92a9db0fade3fcf128638cbc09","2005-08-29 09:05:35+00:00","Ahem. The region density at which things start to get hairy is 2/3
of the grid area, not 3/2!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6235 cda61777-01e9-0310-a592-d414129be87e
"
"058aa38014ba392fea6f63786fe30bfcbed35c11","2005-08-29 09:14:35+00:00","Typo in comment :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6236 cda61777-01e9-0310-a592-d414129be87e
"
"10602cbd56f658bab9bb0b68e6316d9c4603846e","2005-08-29 11:12:05+00:00","Backspace and Delete keys now function like Space in Solo.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6237 cda61777-01e9-0310-a592-d414129be87e
"
"fdf3746cb89b2808c938666a881ed71572fe685d","2005-08-30 17:44:18+00:00","Implemented a couple more reasoning modes for Extreme difficulty
level: positional set elimination (which is so obvious I really
should have thought of it myself, though it's tricky to spot) and
forcing chains (which are a type of one-level proof by
contradiction, findable through a simple breadth-first search
without requiring recursion, but so ludicrously powerful that they
are able to solve _two thirds_ of grids that the pre-Extreme Solo
generated and rated as Unreasonable).

Of course this makes Unreasonable mode harder still...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6239 cda61777-01e9-0310-a592-d414129be87e
"
"1bd51e82987ef34c46567fb9018a9def65332c71","2005-08-30 19:42:45+00:00","Forcing chains in Map give rise to a new `Hard' difficulty level.
Also implemented the Map analogue of Solo's pencil marks, to make
this mode more playable.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6240 cda61777-01e9-0310-a592-d414129be87e
"
"7a1695614afd4de224d94666f2edd07092f03d7f","2005-08-31 12:17:01+00:00","Now that Map has some seriously complex deductions, it's about time
it had a command-line solver. In order to do this, I've had to
expose the internal region numbering because the solver has to have
some way to state which region it means; and in any case it's also
useful to have human-visible region numbering so that two people can
discuss a puzzle they're solving together. So pressing L during play
now toggles the display of region numbers; and `mapsolver' uses
those same numbers when showing its working and its solutions.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6244 cda61777-01e9-0310-a592-d414129be87e
"
"bee3da53117a3788f5dcf4d2034862d683f6c88a","2005-08-31 12:43:14+00:00","Ahem; forgot about recursion. Recursive solving now shows its
working as well.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6245 cda61777-01e9-0310-a592-d414129be87e
"
"23caa51bec7057f4d8abcf49f35b3a304320ad08","2005-08-31 16:59:51+00:00","Debian requires -lm, where Red Hat didn't.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6247 cda61777-01e9-0310-a592-d414129be87e
"
"f1c8c016f2ca9fbc627639c9306a9adcb48051d7","2005-08-31 17:34:47+00:00","Terribly cunning approach to making the pencil marks look nicer,
thanks to Gareth.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6248 cda61777-01e9-0310-a592-d414129be87e
"
"7b0a01e51bb1ac54c726768b6b996bac847413f3","2005-08-31 19:27:41+00:00","Ability to drag pencil marks around.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6250 cda61777-01e9-0310-a592-d414129be87e
"
"795753de622e1f14f6fdc82ab4b282707a7b535b","2005-09-01 11:57:56+00:00","James H has implemented a new `Tricky' difficulty level in Light Up:
a non-recursive level above Easy, which therefore moves the
recursive Hard mode further up still. Play-testing suggests that in
fact Tricky is often _harder_ than the old Hard mode, since the
latter had limited depth of recursion and would therefore spot
complex deductions only if it happened to start a recursion on the
right square; Tricky may be limited in the sophistication of its
complex deductions, but it never misses one, so its puzzles tend to
be hard all over.

Also in this checkin, a new source file `nullfe.c', containing all
the annoying stub functions required to make command-line solvers
link successfully. James wrote this for (the new) lightupsolver, and
I've used it to simplify the other stand-alone solvers.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6254 cda61777-01e9-0310-a592-d414129be87e
"
"e6ea4dd67ecc8313d33e287574747e0dc15c23bc","2005-09-01 11:59:51+00:00","James H's memory leak fixes to Inertia.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6255 cda61777-01e9-0310-a592-d414129be87e
"
"6361b63f6b4dbbced32491fc239d20e676903dd5","2005-09-01 12:00:55+00:00","Palm fixes for Loopy from James H: a #ifdef SLOW_SYSTEM, and an
int/long fix.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6256 cda61777-01e9-0310-a592-d414129be87e
"
"be2e46d482aa0820acb82946467ae364634ee9a0","2005-09-01 12:17:14+00:00","Optimiser placation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6257 cda61777-01e9-0310-a592-d414129be87e
"
"e3491154d4778eee396e8b36ad00ca361bced4e5","2005-09-01 17:25:06+00:00","Stop Light Up from eating system keypresses, which it was previously
doing whenever the cursor was active.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6258 cda61777-01e9-0310-a592-d414129be87e
"
"9f6f98a425dc07eb9335125dba255605b4821735","2005-09-02 13:40:16+00:00","Someone points out that the Solo text formatter would be a lot
better if it marked empty cells with something other than a space.
So here's a three-bit change to turn it into a dot :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6261 cda61777-01e9-0310-a592-d414129be87e
"
"f2c86d65362aabba92edd74f81566e4b33e84861","2005-09-03 18:32:58+00:00","Patches from James H. The usual stuff (memory leak fixes and 16-bit
cleanliness), plus he's enlarged the pencil-mark circles from
TILESIZE/8 to TILESIZE/7. Makes no difference at all (thanks to
integer division) when TILESIZE is the default of 20, but presumably
helps at some other tile sizes. Fine by me.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6265 cda61777-01e9-0310-a592-d414129be87e
"
"dbb8015bcd272ec23ca680d72d51952fc2c4acae","2005-09-04 12:31:04+00:00","Couple of minor updates to restore accuracy.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6268 cda61777-01e9-0310-a592-d414129be87e
"
"726150eb18213ff75c4a56ba06638484ca7ab513","2005-09-04 12:40:23+00:00","Another global environment-variable override across all games. This
one is <game>_TILESIZE, adjusting the game's default size. I
anticipate that this will probably _mostly_ be useful for debugging.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6269 cda61777-01e9-0310-a592-d414129be87e
"
"9dc304362e73b293041dd85f89710519763c40e2","2005-09-04 12:46:19+00:00","Patch from Ton van Overbeek to correct Loopy's misplaced line ends
at small tile sizes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6270 cda61777-01e9-0310-a592-d414129be87e
"
"1fdbaa693e1a7b7cb7424d248a6ee66cd34a70c8","2005-09-04 12:53:27+00:00","Patch from Ton van Overbeek to fix a small memory leak in
midend_solve().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6271 cda61777-01e9-0310-a592-d414129be87e
"
"62cecd50226a9c48a024b6ea1bbf5199f0b724f1","2005-09-05 17:18:03+00:00","I've dithered a bit in the past about whether or not it's allowable
to call game_set_size() twice on the same drawstate. Finally, a
definite decision: it isn't. Accordingly, midend.c arranges never to
do so, the devel docs state that puzzles may enforce by assertion
that it never happens, and the four puzzles which care (i.e. use
blitters) do so.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6274 cda61777-01e9-0310-a592-d414129be87e
"
"3e207f681b377b5c67ca1ef64b558600d50d39b9","2005-09-05 17:21:05+00:00","Various patches from Ben H: a fix for an outdated comment, a couple
of spurious ps_printf() arguments removed, and an error check in the
`make install' target.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6275 cda61777-01e9-0310-a592-d414129be87e
"
"bd587fea7a0a3e418236f6c1207a03b3be95ca23","2005-09-06 18:49:18+00:00","Take the Windows taskbar into account when deciding on the maximum
size of the puzzle window. This has involved some _completely
stupid_ window manipulation: in order to figure out in advance how
big I want my main window to be, I first have to _create_ the status
bar so I know how tall it is; but since I can't reparent it into my
main window after I've created it, I then have to throw that status
bar away and create a new one. *sigh*


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6276 cda61777-01e9-0310-a592-d414129be87e
"
"024599192ddba82ba654cac8e4472ed27bd6a584","2005-09-06 22:28:04+00:00","I arranged that dying after the game was already completed didn't
increment the deaths counter. In doing so, I incorrectly handled the
borderline case, so that a death incurred _in the act_ of collecting
the final gem also didn't increment the deaths counter. Now it does.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6277 cda61777-01e9-0310-a592-d414129be87e
"
"72b413ddd59998da126c70c8cf51a45a0cb141a2","2005-09-10 08:31:22+00:00","Patch from James H which initialises a couple of Windows API object
handles to NULL before accidentally trying to use them for anything.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6282 cda61777-01e9-0310-a592-d414129be87e
"
"065e90c6ec2eedf9d802b991a35c2b8a1f2ec4b2","2005-09-10 09:39:29+00:00","Completely rewrite the loop-detection algorithm used to check game
completion, _again_. In r6174 I changed it from dsf to conventional
graph theory so that it could actually highlight loops as opposed to
just discovering that one existed. Unfortunately, yesterday I
discovered a fundamental graph-theoretic error in the latter
algorithm: if you had two entirely separate loops connected by a
single path, the path would be highlighted as well as the loops.

Therefore, I've reverted to the original dsf technique, combined
with a subsequent pass to trace around each loop discovered. This
version seems to do a better job of only highlighting the actual
loops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6283 cda61777-01e9-0310-a592-d414129be87e
"
"dc969b7017b354a8c688349fef8c1223fc099683","2005-09-11 11:57:24+00:00","Marginally greater robustness in the face of solve_game() failing to
return an error message.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6288 cda61777-01e9-0310-a592-d414129be87e
"
"2f2f066226f53f8f083a249bf63f497801f6aa0a","2005-09-11 12:40:49+00:00","Solve function for Inertia, using what's essentially an approximate
TSP algorithm.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6289 cda61777-01e9-0310-a592-d414129be87e
"
"4a4fe5facb1a6099872c2a8d2780605af4c9bbaa","2005-09-11 14:22:32+00:00","Run the final solution-reduction pass in both directions, since
Gareth managed to find an example (10x8#458168771440033 in r6289)
where running it in only one direction failed to eliminate an
obviously redundant piece of path.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6290 cda61777-01e9-0310-a592-d414129be87e
"
"a3829554a7f0f066c2c4649368eb812ef38a2deb","2005-09-11 14:53:39+00:00","Oops; left some rogue diagnostics in.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6291 cda61777-01e9-0310-a592-d414129be87e
"
"07a0b126df7b375e83fd7c168edaa153cc95a05f","2005-09-11 18:05:23+00:00","Minor improvement to initial loop generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6292 cda61777-01e9-0310-a592-d414129be87e
"
"336d537c4c21f52556925c09fc4bbe86446be4fd","2005-09-12 12:38:58+00:00","I found a slightly odd-looking line of code in this file a few days
ago, and nearly changed it to the obvious thing. After some thought,
though, I've decided the `bug' is better off unfixed, and added a
comment explaining why.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6293 cda61777-01e9-0310-a592-d414129be87e
"
"e2d0d393a7baf4e00a8da326d0fe7148b8b448b5","2005-09-12 17:09:29+00:00","I am again gormless! When I overhauled Solo's grid generator in
r6160, I completely failed to ensure that generated grids were _at
most_ the required difficulty. It appears to have been only random
chance that prevented a request for a Trivial puzzle from producing
Extreme. Here's a one-line fix.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6298 cda61777-01e9-0310-a592-d414129be87e
"
"80557df7bcb9f23bb575f4e7edf72f6346586eb3","2005-09-12 17:13:26+00:00","Patch from Mike:
- remove the backtracking `Hard' level, on the grounds that it was
incredibly slow and not really usable.
- introduce an `Easy' difficulty level below the standard one; many
people seem to find this puzzle unusually hard, so an easy level
is particularly helpful.
- highlight unfulfillable clue squares (but not yet any other types
of obvious error).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6299 cda61777-01e9-0310-a592-d414129be87e
"
"39072268f24c3636fe8c7f5395357c836d3719d2","2005-09-13 18:34:12+00:00","Patch from Mike: fix an array indexing error in the clue
highlighting, and adjust the presets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6303 cda61777-01e9-0310-a592-d414129be87e
"
"78e43707177b281779260140876fedcc43564089","2005-09-15 18:09:27+00:00","Optimisation patch from Mike: remember which squares we've entirely
finished dealing with, and don't do them again on the next loop.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6312 cda61777-01e9-0310-a592-d414129be87e
"
"6de958f93c8f7289c0fc7499907c46f7c457f634","2005-09-18 12:09:16+00:00","Another optimisation patch from Mike, which (among other things)
eliminates gratuitous duplication of the solver state every time it
goes round the main loop, in favour of the usual type of
`done_something' flag.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6322 cda61777-01e9-0310-a592-d414129be87e
"
"be437b826fe115332a99cfe26617b338703f0040","2005-09-18 17:00:07+00:00","Bug fix from James H: prevent LINEWIDTH ever reaching zero.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6331 cda61777-01e9-0310-a592-d414129be87e
"
"0592b28fdf4e790fdb62aa51624ecccca2609db4","2005-09-23 12:43:42+00:00","Fix very strange indentation issue!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6339 cda61777-01e9-0310-a592-d414129be87e
"
"dd6980f434b2fcd123c7580914500b9cbe9e0a86","2005-09-23 12:50:51+00:00","Use game_set_size() to set up the temporary drawstate in
game_print(), wherever feasible. This fixes a specific bug in Loopy
(James H's new field ds->linewidth wasn't being set up, leading to
corrupted print output), but I've made the change in all affected
files because it also seems like a generally good idea to encourage
it for future games, to prevent other problems of this type.

There is one slight snag, which is that Map _can't_ do this because
its game_set_size() also initialises a blitter. I could fix this by
abstracting the common parts of Map's game_set_size() out into a
subfunction called by game_set_size() and also called directly by
game_print(); alternatively, I could introduce a means of
determining whether a `drawing *' was for screen or printing use.
Not sure which yet.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6340 cda61777-01e9-0310-a592-d414129be87e
"
"a600ce5d974dd96e91b2d12d91e1aafcb598c001","2005-10-10 16:29:58+00:00","Richard Earnshaw points out that if you enter an out-of-range number
in the game description, the solver will fail to notice it and
overrun an array leading to assertion failure, silent wrong answers
or (in extreme cases) segfaults. Hence, validate_desc() now spots
them and kicks them out.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6383 cda61777-01e9-0310-a592-d414129be87e
"
"037958598b0d553723c7085b4dabaf3afba71525","2005-10-10 16:31:26+00:00","Fixes for handling human-entered Flip games. The clicked-on square
always got a flip animation even when it wasn't one of the ones
being turned, and a square with no effect at all was still counting
as a move.

Since it's an invariant of Flip's internal generator that every
square includes itself as an effect, this never comes up in auto-
generated games.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6384 cda61777-01e9-0310-a592-d414129be87e
"
"6ffa5cc8df8f4f82d563a1652bece8db2b04047d","2005-10-10 17:22:33+00:00","r6384 didn't go quite far enough. In fact, a grid square which
differs between oldstate and state in only the hint bit should not
have a flip animation even if hints_active is TRUE. Flip animations
should only happen for tiles which are changing their primary state.
(Put like that, it seems so obvious.)

Test case which demonstrates this fix to be right and r6384 to be
wrong: 3x3:101000000000000000000,300 . Hit Solve immediately and
then click on the red-highlighted squares.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6385 cda61777-01e9-0310-a592-d414129be87e
"
"e1b8960b4c4ed2de3044e68c95bf6a659f3f800e","2005-10-12 17:57:40+00:00","Yikes! I've only just noticed that this copy of tree234.c was still
using unwrappered malloc/free, leaving plenty of openings for out-
of-memory segfaults. Switch to using Puzzles's memory management,
which I should have done right at the start but can only assume I
forgot about.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6388 cda61777-01e9-0310-a592-d414129be87e
"
"0c3e2f75874a93953cafba94376d1e8d97790c01","2005-10-13 18:27:57+00:00","loopy_diffnames[] isn't used, and provokes a warning on OS X.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6389 cda61777-01e9-0310-a592-d414129be87e
"
"0262631ef200f9790289cb3f8b6141435fac9704","2005-10-13 18:30:24+00:00","New puzzle: `Tents'. Requires a potentially shared algorithms module
maxflow.c. Also in this checkin, fixes to the OS X and GTK back ends
to get ALIGN_VNORMAL right. This is the first time I've used it! :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6390 cda61777-01e9-0310-a592-d414129be87e
"
"cb8f55395d8bfce6ffe58a6ceae9e17b5ae9b1fd","2005-10-14 12:23:41+00:00","Revamp of the control mechanism to permit drag- as well as
click-based control. Only used for right-dragging to clear a large
area to NONTENT.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6400 cda61777-01e9-0310-a592-d414129be87e
"
"131b4fa95d54cf4112edfa8a07354d449446c47c","2005-10-15 15:01:40+00:00","Small error in solver diagnostics.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6402 cda61777-01e9-0310-a592-d414129be87e
"
"ed7bc993f6821071b27fac503754a2a5ae0662d0","2005-10-15 16:03:14+00:00","Janes H provides a small workaround for a Palm tools bug.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6403 cda61777-01e9-0310-a592-d414129be87e
"
"07e65d4fe7ca4dae95cd2eb62315c876e14e0d44","2005-10-17 18:32:24+00:00","Just noticed a longhand shuffling operation which I must have missed
when I converted them all into calls to shuffle().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6404 cda61777-01e9-0310-a592-d414129be87e
"
"eca9ec7e449b5dcf1fb37f3a48167a6fa148c2c0","2005-10-17 18:41:05+00:00","Miscellaneous fixes. Correct a comparison of y with w causing
assertion failures in portrait-type grids; retire an unused array in
the game generation function (my original generation strategy needed
it, but the final one didn't); correct a typo; further restrict the
generable sizes of game and include a special case for 4x4dt to
prevent a tight loop.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6405 cda61777-01e9-0310-a592-d414129be87e
"
"b72cd4e874bcebcd6f7efe7a783671332c9200a2","2005-10-21 08:07:31+00:00","New puzzle from James H: `Bridges', another Nikoli job.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6409 cda61777-01e9-0310-a592-d414129be87e
"
"db6dd28dc8a41dead40802672f3a0f9498ed6815","2005-10-22 16:27:54+00:00","Cleanup: rename random_init() to random_new(), because it actually
_allocates_ a random_state rather than just initialising one passed
in by the caller.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6412 cda61777-01e9-0310-a592-d414129be87e
"
"b6974ef2ed6b142cb3adc1309d0ba4612357ad9f","2005-10-22 16:34:28+00:00","OS X frontend was directly calling the backend's wants_statusbar()
function, whereas it ought to have been calling the midend's one.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6413 cda61777-01e9-0310-a592-d414129be87e
"
"14859ccd06e7133a0bcd687daec320d181567640","2005-10-22 16:35:23+00:00","Cleanup: the `mouse_priorities' field in the back end has been a
more general-purpose flags word for some time now. Rename it to
`flags'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6414 cda61777-01e9-0310-a592-d414129be87e
"
"90bb1dfa6597112d34004e41adc3f08c8d0edc6b","2005-10-22 16:38:15+00:00","Noticed recently that bitcount16() isn't 16-bit clean due to signed
shift right. It doesn't actually matter in the current code since
the input word only ever uses the bottom 9 bits, but if I ever
extended Mines to work in a triangular grid then all 16 bits might
be required. Fix this now, while I'm cleaning things up, so that it
won't bite me unexpectedly in future.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6415 cda61777-01e9-0310-a592-d414129be87e
"
"9fc4702f6ea8faacadecb7fb810fa59a257d9569","2005-10-22 16:44:38+00:00","Cleanup: remove the game_state parameter to game_colours(). No game
was actually using it, and also it wasn't being called again for
different game states or different game parameters, so it would have
been a mistake to depend on anything in that game state. Games are
now expected to commit in advance to a single fixed list of all the
colours they will ever need, which was the case in practice already
and simplifies any later port to a colour-poor platform. Also this
change has removed a lot of unnecessary faff from midend_colours().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6416 cda61777-01e9-0310-a592-d414129be87e
"
"b0441765868545e74482950c760e92f241403cd4","2005-10-22 16:52:16+00:00","Cleanup: it was absolutely stupid for game_wants_statusbar() to be a
function, since it took no parameters by which to vary its decision,
and in any case it's hard to imagine a game which only
_conditionally_ wants a status bar. Changed it into a boolean data
field in the backend structure.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6417 cda61777-01e9-0310-a592-d414129be87e
"
"337982e9fddc288a23fcc98fcefa014fe53ac8c6","2005-10-22 16:53:06+00:00","Forgot to update devel.but in r6417.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6418 cda61777-01e9-0310-a592-d414129be87e
"
"7aadce9b40a56ec680542476b1bb1c4dae20d135","2005-10-22 17:00:35+00:00","Cleanup: remove the `just_used_solve' field from a number of games
which didn't actually need it. It was originally introduced in
Fifteen to suppress animation on Solve moves, but midend.c now does
that centrally unless the game specifically instructs it otherwise.
Therefore, just_used_solve is obsolete in all games which previously
used it. (Mines was even worse: it scrupulously maintained the
correctness of the field but never used it!)

Untangle is exempt from this cleanup: its `just_solved' field is
used to change the _length_ of the animation on Solve moves, not to
suppress it entirely, and so it has to stay.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6419 cda61777-01e9-0310-a592-d414129be87e
"
"44c89d117cf9f4cc08951b91ed2896285440505e","2005-10-22 17:23:55+00:00","Cleanup: relieve frontends of the duty to call
midend_rewrite_statusbar() and check the result against the last
string returned. This is now done centrally in drawing.c, and the
front end status bar function need only do what it says on the tin.

While I'm modifying the prototype of drawing_init(), I've also
renamed it drawing_new() for the same reason as random_new() (it
_allocates_ a drawing object, rather than just initialising one
passed in).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6420 cda61777-01e9-0310-a592-d414129be87e
"
"63d828fb16422c91d7e6623b92912d79e676f2ea","2005-10-22 18:07:56+00:00","Work around a couple of minor display issues with max bridges set to 4:

- the highlighting for a set of 4 lines spilled outside the tile, so would
leave white residue if undone;

- the endpoints of sets of 4 lines were not completely overprinted by the
circle of an island (at least on Windows), which was untidy.

Fixed by reducing the gap width for groups of lines which wouldn't otherwise
fit in a tile (only).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6421 cda61777-01e9-0310-a592-d414129be87e
"
"ce8f3cb3458a4fa40ab04907ee076f72a0263c26","2005-10-22 18:18:21+00:00","Fix segfault in Tents' printing.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6422 cda61777-01e9-0310-a592-d414129be87e
"
"a5e41b77386032a234f29b26d97a9a1d052c8c4b","2005-10-22 19:58:59+00:00","Document Unix command-line options.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6423 cda61777-01e9-0310-a592-d414129be87e
"
"e6449d3a6ee226bf9c9d7fd9acb41af328f0d803","2005-11-10 11:57:15+00:00","Correct w/h mixup in grid edge checks.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6452 cda61777-01e9-0310-a592-d414129be87e
"
"2e1bda0203aac1cbdef2dd172b95af7450081db9","2005-12-26 11:26:34+00:00","I've just noticed a bug in the Inertia solver: if you call it on an
already-solved grid (i.e. no gems), it will still attempt to show
you a move you can make. Eliminate that special case.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6507 cda61777-01e9-0310-a592-d414129be87e
"
"e0bd12499b4db41804e8e2457121ceeca8506bd0","2005-12-26 23:24:09+00:00","Laurent Thioudellet reports that gcc4's ultra-cautious data flow
warnings require two more variables to be explicitly initialised. In
fact these variables are reliably initialised by a subfunction; gcc3
was happy to assume I knew what I was doing when it couldn't prove
they were definitely used uninitialised, whereas gcc4 apparently
takes the view that the onus is on me to allow it to prove they
_aren't_. I regard this as a step backwards, since the effect will
be to make explicit initialisation commonplace in cases where the
initialiser value is chosen arbitrarily and never expected to be
used, at which point (a) it will be less clear which initialisers
have genuine purpose and which are compiler-placating fluff, and (b)
valgrind's run-time uninitialised-data tracking will become less
useful. Still, the effect doesn't seem great as yet, so here's the
gcc4-placating checkin.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6508 cda61777-01e9-0310-a592-d414129be87e
"
"cb2ed80ccb50a4b4139e7a629872d36f116a4c12","2005-12-27 15:36:21+00:00","Add some random index terms. ('Sudoku' wasn't in the index!)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6509 cda61777-01e9-0310-a592-d414129be87e
"
"3249397c4126e8027d011a8bf2b31c6dfb4774f0","2006-01-05 09:40:51+00:00","Revert a change in an assertion made in r6299. It was right the
first time, and now has a comment explaining why!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6511 cda61777-01e9-0310-a592-d414129be87e
"
"a15094bbe85ff7f041102460aadf9f091885b162","2006-01-08 18:18:11+00:00","It's a new year.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6513 cda61777-01e9-0310-a592-d414129be87e
"
"dbfddfd839063b1be69fe61677f3da283fc927e8","2006-02-07 21:45:50+00:00","Tal Kelrich spotted that hitting `Solve' on a configuration which is
laser-indistinguishable from the right solution _but_ has a number
of balls outside the acceptable range does not report an error. His
example was the game ID w8h8m5M5:1e3e6e80fa3e16265ccef7ca , omitting
the rightmost ball in the second row.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6542 cda61777-01e9-0310-a592-d414129be87e
"
"560cb73577df3964a452e6785af36844fc83cfbc","2006-02-19 12:42:46+00:00","Patch from Phil Bordelon to improve Bridges' appearance by adjusting
the font size.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6573 cda61777-01e9-0310-a592-d414129be87e
"
"80b6ba35d09f4ebe29d8f2bc1aface0430f90a2f","2006-02-19 12:54:17+00:00","Small docs patch from Phil Bordelon adding more history of Sudoku.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6575 cda61777-01e9-0310-a592-d414129be87e
"
"39e439b1e1b06eb4c0ba769e6507608b63ed6bbb","2006-02-20 19:51:50+00:00","Mines's error signalling is highly asymmetric: if you erroneously
believe a square to be empty, you find out instantly and lethally,
but if you erroneously believe a square to be full you can
occasionally (when it doesn't cause a complementary square to be
assumed empty) not notice until you find at the very end of the game
that you're one mine heavy. To help with this, here's an error
highlighting patch: any number square surrounded by an excess of
flags will now light up red. This should be an unintrusive change,
because it will never happen unless you make a mistake.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6580 cda61777-01e9-0310-a592-d414129be87e
"
"861a2e3d2b003fcaf4826cd3677d6624db49a818","2006-03-02 19:39:46+00:00","I've been pondering whether to do this for months: turn the rather
washed-out yellow and green in Guess into their full-brightness pure
forms. This makes them hard to see against some backgrounds, so I'm
also surrounding all coloured pegs with black outlines. Looks a
little cartoony, but I think it's an overall improvement on the
previous look.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6589 cda61777-01e9-0310-a592-d414129be87e
"
"8b3667e1579259480044a0fa1311d55b9a013169","2006-03-03 20:04:13+00:00","'Hold' function in Guess was completely broken.
Fix it, add holds to the undo history (by analogy with Net), and save the
current holds in saved games.
Also fix a couple of unrelated minor issues with string encoding.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6590 cda61777-01e9-0310-a592-d414129be87e
"
"96545cd9349487de78c3d5257fda495c3f9d234a","2006-03-06 20:03:27+00:00","Introduce a new deductive mode in Slant's Hard level, which is the
generalisation of the previous deduction involving two 3s or two 1s
either adjacent or separated by a row of contiguous 2s. I always
said that was an ugly loop and really ought to arise naturally as a
special case of something more believable, and here it is.

The practical upshot is that Hard mode has just become slightly
harder: some grids generated by the new Slant will be unsolvable by
the old one's solver. I don't think it's become _excessively_ more
hard; I think I'm happy with the new difficulty level. (In
particular, I don't think the new level is sufficiently harder than
the old to make it worth preserving the old one as Medium or
anything like that.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6591 cda61777-01e9-0310-a592-d414129be87e
"
"d91a771f254228c0feb8a7effc297f1245c441e3","2006-03-12 09:06:27+00:00","Tidy up comments.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6601 cda61777-01e9-0310-a592-d414129be87e
"
"d8f147652c828aa00e3eb0ac96cef66f36858f5e","2006-05-20 11:52:22+00:00","Patch from Ben Hutchings to prevent memory leakage during Loopy game
generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6708 cda61777-01e9-0310-a592-d414129be87e
"
"395e8cfa8b84c0911adc83d9e20660692e734161","2006-05-20 11:54:21+00:00","Cleanup patch from Ben Hutchings, fixing some odd-looking range
checks. He thinks they were harmless (due to being followed by other
range checks in RIGHTOF_DOT and friends) but it clearly can't hurt
to fix them anyway.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6709 cda61777-01e9-0310-a592-d414129be87e
"
"3d1af2b5a2f4eed1ed8734db142192e670bedaa1","2006-05-20 11:58:24+00:00","Patch from Ben Hutchings to prevent an ugly special case in
&splitline in which a line is `split' into a line ending in a
backslash followed by a completely blank line.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6710 cda61777-01e9-0310-a592-d414129be87e
"
"803417a02330e78040d90e16ba36970842e5bc34","2006-05-20 12:01:55+00:00","Ben Hutchings's patch to add display of key accelerators in the Game
menu.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6711 cda61777-01e9-0310-a592-d414129be87e
"
"7a2325b758fba08f4adc91032f27ab2660fcbd77","2006-05-20 12:06:41+00:00","Trivial patch from Ben Hutchings to support resizable windows under
GTK. All the infrastructure in the midend and beyond was already
there; it was just a matter of enabling it!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6712 cda61777-01e9-0310-a592-d414129be87e
"
"058d2783f2dd9b3712c71cbc077ba8a65c1f2beb","2006-06-26 22:01:51+00:00","Since r6711, puzzles built with Gtk 1.2 would take double actions when a menu
accelerator key (N/U/R/Q) was pressed -- once for the menu accelerator, and
once more in key_event().
This workaround, while unlovely, should at least not break in future (since the
things it relies on are unlikely to change).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6745 cda61777-01e9-0310-a592-d414129be87e
"
"ec326c7d8c2bf8b3e4faab94a2df747d555796e4","2006-07-07 13:59:16+00:00","Random docs cleanups I've collected together.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6749 cda61777-01e9-0310-a592-d414129be87e
"
"fc89b616ec1f2f84e70b395c5d14942c7ee85b45","2006-08-05 16:35:25+00:00","Extra utility function.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6780 cda61777-01e9-0310-a592-d414129be87e
"
"1e6cd738bc86fba6d9bdaed61069fc1e581e77f5","2006-08-05 17:20:29+00:00","I'm sick of repeatedly adding and removing local changes to Recipe
when testing a new game, so here's a new architecture for the Recipe
file. mkfiles.pl now supports several new features:

- an `!include' directive, which accepts wildcards
- += to append to an existing object group definition
- the ability to divert output to an arbitrary file.

So now each puzzle has a `.R' file containing a fragment of Recipe
code describing that puzzle, and the central Recipe does `!include
*.R' to construct the Makefiles. That way, I can keep as many
experimental half-finished puzzles lying around my working directory
as I like, and I won't have to keep reverting Recipe when I check in
any other changes.

As part of this change, list.c is no longer a version-controlled
file; it's now constructed by mkfiles.pl, so that it too can take
advantage of this mechanism.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6781 cda61777-01e9-0310-a592-d414129be87e
"
"7b202ea2803e6e00b92c36b437f26b7c8648fca3","2006-08-05 17:25:09+00:00","Always something. Mention `svn add'ing the .R file in the new-puzzle
checklist, and mention the now-not-version-controlled list.c in
svn:ignore.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6782 cda61777-01e9-0310-a592-d414129be87e
"
"7baaea75333d5e20201a579afea183e134ff2ce5","2006-08-25 07:10:59+00:00","Jesse W points out that I forgot to update the OS X front end in
r6420, so both drawing.c _and_ the front end were prepending the
time to the front of the Mines status bar, leading to a double
timestamp.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6796 cda61777-01e9-0310-a592-d414129be87e
"
"8f1555dc65c6a092ef0f2ceb82baadeecc248a83","2006-09-06 08:23:15+00:00","Forgot to put the new .R files into makedist.sh. Oops!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6849 cda61777-01e9-0310-a592-d414129be87e
"
"23b8c187d36d5db7a9f32b8ee4f40cbe35cd0c02","2006-10-17 08:25:40+00:00","Couple of minor errors.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6872 cda61777-01e9-0310-a592-d414129be87e
"
"8acebe364fc413c6b98311ee32ea8220f59199e6","2006-10-28 15:38:53+00:00","Mike Pinna has done some major reworking of the Loopy solver, giving
rise to a new Hard difficulty level.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6880 cda61777-01e9-0310-a592-d414129be87e
"
"c5fd531c963b287fe2decc38fed387f9b8ba22bc","2006-10-29 09:17:07+00:00","Add HTML documentation to the ignore list.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6881 cda61777-01e9-0310-a592-d414129be87e
"
"a8d5f64ee0a929faed3bcaf28bad19d878d2906c","2006-10-29 09:34:09+00:00","r6880 accidentally backed out r6780. That's what I get for accepting
source files from Mike rather than patches, and not adequately
checking the result...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6882 cda61777-01e9-0310-a592-d414129be87e
"
"6aefef414e7e5f07424c9cbdccbe05e026c2c576","2006-10-29 09:41:02+00:00","I'm sick and tired of having unfinished puzzle code lying around on
several different systems in strange directories. So I'm creating an
`unfinished' directory within source control, and centralising all
my half-finished, half-baked or otherwise half-arsed puzzle
implementations into it. Herewith Sokoban (playable but rubbish
generation), Pearl (Masyu - rubbish generation and nothing else),
Path (Number Link - rubbish generation and nothing else) and NumGame
(the Countdown numbers game - currently just a solver and not even a
generator yet).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6883 cda61777-01e9-0310-a592-d414129be87e
"
"46e5ecc155c8f1cc9896f0d602b0e4a8476ea875","2006-10-29 17:40:45+00:00","Minimal (i.e., lame) update to Loopy documentation to match reality -- it's
been wrong since r6299.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6884 cda61777-01e9-0310-a592-d414129be87e
"
"0fa78ace081051b557ba0114f0dc40ebac5dbd8e","2006-11-01 11:31:20+00:00","Mike's changes to dsf.c alter the internal storage format of dsf
structures, meaning that ad-hoc initialisation now doesn't work.
Hence, this checkin converts all ad-hoc dsf initialisations into
calls to dsf_init() or snew_dsf(). At least, I _hope_ I've caught
all of them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6888 cda61777-01e9-0310-a592-d414129be87e
"
"e3ea89b3a1a0202599a84afe1d67de3b5d48fac8","2006-11-01 13:25:25+00:00","James H's Palm-compatibility updates to the latest Loopy changes,
working around bugs in the Palm compiler and removing Palm-
incompatible diagnostics such as fprintf.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6889 cda61777-01e9-0310-a592-d414129be87e
"
"7d1854ef14f476c50df3f6b9df7d22580fc5219d","2006-11-20 10:20:46+00:00","Patch I've had lurking around for over a year and not remembered to
commit: arrange that midend_set_timer(), hence game_timing_state(),
is called when the game_ui is changed. This allows timed games to
work by obscuring the initial layout until an initial click causes
it to be revealed, without requiring that they store that reveal
operation as a move in the undo chain. Not that any games actually
do this, but it's clearly a sensible thing to want to do: since
game_timing_state() _receives_ a game_ui as a parameter, obviously
it should be consulted when the game_ui changes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6914 cda61777-01e9-0310-a592-d414129be87e
"
"63763b28ad79d5b5c7073bd9b6152f6ed4806dd1","2006-11-23 13:17:31+00:00","Optionally label the colours in Guess with letters of the alphabet.
Labels are toggled on and off by pressing L (just like Map). Might
help colour-blind users, and might also make it easier to describe
game positions to other people because `abbc' has fewer syllables
than `red, yellow, yellow, green', and hugely fewer letters if
you're typing it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6916 cda61777-01e9-0310-a592-d414129be87e
"
"ca3fd79dc66699323270016b0af6ecddb85850a5","2006-11-24 18:24:01+00:00","Fix a couple of rounding errors in Inertia's gem-drawing code which
didn't happen to show up at the default resolution but made the gem
slightly skewed at larger sizes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6919 cda61777-01e9-0310-a592-d414129be87e
"
"c8f00e45cfbad709c95c8be5231855012e807fe9","2006-12-21 17:11:56+00:00","Small printing fix from Gary Wong. Shows up when printing with
solutions: the rightmost and lowermost lines of the grid never get
solution lines drawn on them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7003 cda61777-01e9-0310-a592-d414129be87e
"
"d9577deb44e327f1f6b1dcb9300b0116531f66e3","2006-12-23 08:44:51+00:00","Ability to build a .CHM for Puzzles. I haven't yet arranged for it
to be used by the Windows binaries; that's the next step.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7006 cda61777-01e9-0310-a592-d414129be87e
"
"98ae9f5d1c25155084ad5343927266c2b9e266d8","2006-12-24 15:56:47+00:00","HTML Help support for Puzzles, with the same kind of automatic
fallback behaviour as PuTTY's support.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7009 cda61777-01e9-0310-a592-d414129be87e
"
"389c8ad9a9d94e5c984aad6cc5eecafc8595b994","2006-12-24 16:30:45+00:00","Minor const fix.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7013 cda61777-01e9-0310-a592-d414129be87e
"
"1ff90bd39382a9536f46f152dcbe8f553ff2a2bb","2006-12-26 16:47:28+00:00","New mechanism for automatic generation of the puzzle screenshots on
the web, which I hope will also end up being extended to generate
both Windows and X icons for each individual puzzle. The mechanism
is: for each puzzle there's a save file in the `icons' subdirectory
showing a game state which I think is a decent illustration of the
puzzle, and then there's a nasty set of scripts which runs each
puzzle binary, loads that save file, grabs a screenshot using xwd,
and munges it into shape.

In order to support this I've added two new options (--redo and
--windowid) to all the GTK puzzles, which I don't expect ever to be
used outside the icons makefile. I've also added two more options
(--load and --id) which force a GTK puzzle to treat its command-line
option as a save file or as a game ID respectively (the previous
behaviour was always to guess, and sometimes it guessed wrong).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7014 cda61777-01e9-0310-a592-d414129be87e
"
"d0331a34e2123dd0e2651a2303fcf03d3512b1cf","2006-12-26 22:00:11+00:00","Code to construct Windows icon files for the puzzles, by munging the
screenshots into appropriate sizes and colour depths. This is all
done with a nasty Perl script, because ImageMagick does not output
correct .ICO format. Not sure why; it isn't _that_ hard.

I intend at some point to link the resulting icons into the actual
Windows puzzle binaries, but before then I have to make them
prettier: most of them would benefit from being derived from a
smaller crop of the puzzle screenshot instead of trying to fit the
whole thing in.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7017 cda61777-01e9-0310-a592-d414129be87e
"
"bd0e7a5c705c753a6ebb13f92e352b1d9f5ab9e5","2006-12-27 10:26:13+00:00","Improve the icon images by cropping selected pieces out of most of
the main screenshots. (A few, like Map, were perfect already.)

In the process I've vertically reflected the puzzle shown in the
Pattern save file, to bring a more interesting piece of it into the
top left corner :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7019 cda61777-01e9-0310-a592-d414129be87e
"
"079ed79021150d7206f165247ab925c4bb4e5486","2006-12-27 11:05:20+00:00","Actually introduce the ability to build the Windows icons into the
Windows puzzle binaries. This checkin involves several distinct
changes:
- mkfiles.pl now has an extra feature: if an object file is listed
in Recipe with a trailing question mark, it will be considered
optional, and silently dropped from the makefile if its primary
source file isn't present at the time mkfiles.pl runs. This means
people who check out the puzzles from Subversion and just run
mkfiles.pl shouldn't get build failures; they just won't get the
icons.
- all the .R files now use this feature to include an optional
Windows resource file.
- the .rc resource source files are built by icons/Makefile.
- windows.c finds the icon if present and uses it in place of the
standard Windows application icon.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7020 cda61777-01e9-0310-a592-d414129be87e
"
"5c7c44fe5d3ad09df1d58ac01b295e8f12f4735e","2006-12-27 15:10:59+00:00","Support for run-time icons in the GTK puzzles. This involved another
mkfiles.pl change (I don't seem to be planning ahead very well this
week), this time to provide a list of fallback options for an object
file. That way, I have a no-icon.c which quietly replaces
icons/foo-icon.c if the latter doesn't exist, and so again people
checking straight out from Subversion shouldn't have trouble.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7021 cda61777-01e9-0310-a592-d414129be87e
"
"fef04b800459758948654ca6883a859c19d75bb7","2006-12-27 15:21:55+00:00","Aha, this seems to be a more sensible way of getting screenshots:
instead of having the puzzle binary export its window ID to a script
which then runs xwd, we can use the gdk-pixbuf library to have the
puzzle binary _itself_ read its own internal pixmap and save it
straight to a PNG. How handy. And faster, and less timing-sensitive.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7022 cda61777-01e9-0310-a592-d414129be87e
"
"3c4386cb8c75cfef20505bc4c280fe8c88d15334","2006-12-27 15:33:43+00:00","Fix the Cygwin RCFLAGS in the light of recent changes.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7023 cda61777-01e9-0310-a592-d414129be87e
"
"445568c58b87c9c5a3a97fd1a96725fbf258f3d7","2006-12-27 15:36:27+00:00","And update makedist.sh to put all the new stuff into the source
tarball.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7024 cda61777-01e9-0310-a592-d414129be87e
"
"94af623ac4c23503f3d34268b9d21d866801dad5","2006-12-27 15:49:16+00:00","Er, further makedist fixes. Helps if you test _before_ checkin.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7025 cda61777-01e9-0310-a592-d414129be87e
"
"af869be7e30fae164dcf8d843a33cb4034bd25aa","2006-12-27 16:49:39+00:00","`make all' targets are usually useful.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7026 cda61777-01e9-0310-a592-d414129be87e
"
"c969b2d50109f0ccdd48d1acf5e52d4a2e26f8ab","2006-12-28 17:07:21+00:00","Enhance icon.pl to be a fully general Windows icon builder: it now
supports monochrome icons, can deal with any size of image you're
mad enough to put in there, and will construct icons with whatever
combination of sizes and resolutions you feel like specifying. This
has involved a change in the command-line syntax, hence the
adjustment to Makefile.

(I don't imagine that the changes described here will be critical to
Puzzles any time soon, but I might reuse this script elsewhere and
then I won't want it to have arbitrary limitations.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7031 cda61777-01e9-0310-a592-d414129be87e
"
"88cd5c170d8de9b7fbe489d200227ad7752ee5ee","2006-12-28 21:39:22+00:00","Add NO_HTMLHELP and turn it on by default in Makefile.cyg.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7033 cda61777-01e9-0310-a592-d414129be87e
"
"0fb03851bda5446e23d00cc09dec72eec5758cba","2006-12-29 16:42:02+00:00","Update manual copyright to 2006.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7036 cda61777-01e9-0310-a592-d414129be87e
"
"2b1eebae9ca6c8d6802f70190c94efd8c67a22cf","2006-12-29 22:43:47+00:00","Bring .R files for nullgame and unfinished puzzles up to date with the rest of
the world (by adding icon support).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7038 cda61777-01e9-0310-a592-d414129be87e
"
"aa37da062d3a76d27089ad804bf6be95d9ed99b5","2006-12-30 00:26:16+00:00","Make errors in option parsing actually _do_ something in interactive mode.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7039 cda61777-01e9-0310-a592-d414129be87e
"
"86f1df11788622fd5fdd272ce748c8653ab1c6c6","2006-12-30 00:50:29+00:00","Document the new --game and --load options on Unix.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7040 cda61777-01e9-0310-a592-d414129be87e
"
"381e580e4a436a161be5998d76f0e6c0d55db96a","2007-01-01 21:19:14+00:00","It's a new year.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7048 cda61777-01e9-0310-a592-d414129be87e
"
"3b28c9a745336efa3376c678d128239f4f657a7e","2007-01-02 19:45:19+00:00","Phil Bordelon points out that my invocation of gdk_pixbuf_save()
isn't quite right.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7050 cda61777-01e9-0310-a592-d414129be87e
"
"31d34133f72aa81153dbe8b1f71bbf34a803d2b3","2007-01-03 09:51:42+00:00","Phil Bordelon's patch yesterday should have initialised the GError
to NULL.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7052 cda61777-01e9-0310-a592-d414129be87e
"
"74f5f038124e6e9fc345efc800fd84c50e7eb58d","2007-01-04 19:24:43+00:00","In Windows/Gtk front-ends, consistently use the ellipsis convention for naming
menu items which bring up dialogs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7058 cda61777-01e9-0310-a592-d414129be87e
"
"80b155f1c0d95b8e3fced755e50c8986f8fcafe7","2007-01-11 09:26:09+00:00","Rather to my surprise given the amount of testing this code has had,
Kevin Lyles spotted a tree234 bug! copytree234() segfaulted when
asked to copy a tree containing no elements, due to failing to allow
for the case that t->root might be NULL. Fixed, and added a
regression test.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7092 cda61777-01e9-0310-a592-d414129be87e
"
"57eda5e4615cc9f879807b811519b2b74fcfd45c","2007-01-13 12:03:42+00:00","Remove a couple of rogue make targets for `osx.icns.o' and
`osx-info.plist.o' which had crept into most of the Makefiles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7099 cda61777-01e9-0310-a592-d414129be87e
"
"6ada8fff9a5b99c47b7aefd7c16e7eb491cc3f03","2007-01-13 14:44:50+00:00","Add James H's new puzzle, `Unequal' (otherwise known as the
Guardian's `Futoshiki').


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7100 cda61777-01e9-0310-a592-d414129be87e
"
"f0b37c195eae1c4f3a2655bc1cbbe93ad40c31ed","2007-01-13 14:59:15+00:00","Icon for Unequal.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7101 cda61777-01e9-0310-a592-d414129be87e
"
"89095e1cef70825aaa15d92b688a2a87a7c71bd2","2007-01-13 15:17:55+00:00","First time I've added a new puzzle since the icons-and-screenshots
upheaval. Modify the checklist accordingly.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7103 cda61777-01e9-0310-a592-d414129be87e
"
"773fe38f826286cf6909dd1192562c0dfbb47cb0","2007-01-13 19:19:21+00:00","Formatting tweaks / index terms in Unequal docs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7105 cda61777-01e9-0310-a592-d414129be87e
"
"8d0ee15a3a92bcc12a6fbd8c8fdde73bf5e06208","2007-01-14 10:13:29+00:00","Give all the intermediate files distinct file names, so that a
multi-CPU machine can speed up the icon build using `make -j' and
not have it break.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7106 cda61777-01e9-0310-a592-d414129be87e
"
"70b46076da203ed0d64f63bd901f4874eaff609f","2007-01-15 20:04:11+00:00","Phil Bordelon points out that the Unequal difficulty settings
documentation is a bit odd, and also offers a signedness fix in
latin.c.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7112 cda61777-01e9-0310-a592-d414129be87e
"
"73a274fc3e23c5ce58324998ddfe276a9d321728","2007-01-15 20:07:18+00:00","Patch from James H to fix the occasional generation of puzzles
harder than requested.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7113 cda61777-01e9-0310-a592-d414129be87e
"
"85b3076a2bff7a747ccd96daf6bebfa04ad774f1","2007-01-15 20:21:57+00:00","Patch from James H which shouldn't change the functionality of
Loopy, but makes it build more sensibly on the Palm.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7114 cda61777-01e9-0310-a592-d414129be87e
"
"54010d09091eb92e5e8d7cc963ed038ee104fffb","2007-01-15 23:30:44+00:00","Phil Bordelon points out an off-by-one error: since Solo doesn't use
zero as a valid puzzle symbol, it can support at most 35 symbols,
not 36. (This is largely academic since IME anything above about 25
is impractical to generate, but there we go.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7115 cda61777-01e9-0310-a592-d414129be87e
"
"7020ebe0f522ff22fae4ab909a44401a375fa6af","2007-01-16 12:54:24+00:00","Marcin Wojdyr points out that the use of `>&' to redirect both
stdout and stderr is non-standard. Switch to a POSIX-blessed
alternative.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7116 cda61777-01e9-0310-a592-d414129be87e
"
"70a6c18f573b9f37c83ba748a198b0665ec272a6","2007-01-27 10:25:20+00:00","Misdirected cross-reference spotted by Jonas Koelker.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7172 cda61777-01e9-0310-a592-d414129be87e
"
"3c74b243a2f5482a57ea3667fc520d3acb7df33d","2007-02-04 11:44:10+00:00","Build script for Puzzles using bob. I've also added a piece of extra
infrastructure to the mkfiles.pl framework for the convenience of
the build script: it generates `wingames.lst', a list of the Windows
binaries which are ship-worthy games as opposed to nullgame or
command-line auxiliary programs.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7206 cda61777-01e9-0310-a592-d414129be87e
"
"32d4da6d6a1d4a577fa9d426d3cd50e0192827df","2007-02-04 13:44:38+00:00","Looking for puzzles*.tar.gz in the right directory is liable to make
the .htaccess build work better :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7214 cda61777-01e9-0310-a592-d414129be87e
"
"72b4ebf957699ba9732bf4fb36eb0b849da5fa69","2007-02-04 14:03:52+00:00","Forgot to tag the Mac and Windows binaries with the revision number.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7215 cda61777-01e9-0310-a592-d414129be87e
"
"c0eb163410a72072423b5f6d01693f8029d68b35","2007-02-04 14:35:23+00:00","Reinstate the icons in the Windows binaries.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7217 cda61777-01e9-0310-a592-d414129be87e
"
"a14dac5e381fda51de153dd2068f45bae268ebd8","2007-02-05 12:41:21+00:00","Now we have the new `module' command, use it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7224 cda61777-01e9-0310-a592-d414129be87e
"
"90cba095cf69bd1e9d65ed56ac16aae0dcd39c9e","2007-02-13 23:01:50+00:00","Replicate r7285 from PuTTY: make keyboard input work in HTML Help.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7286 cda61777-01e9-0310-a592-d414129be87e
"
"a1f5915df6ab8b1d3b97212e5fd15ee8d4f3f1ae","2007-02-19 19:38:00+00:00","Forgot to shuffle the num[] array! That was probably introducing
some really subtle probabilistic bias in the generated latin squares.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7302 cda61777-01e9-0310-a592-d414129be87e
"
"7f2ded39d6c9b52ef48ade92ce2da39836de05c4","2007-02-22 09:31:43+00:00","Add James Harvey's excellent new puzzle, `Galaxies'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7304 cda61777-01e9-0310-a592-d414129be87e
"
"365bc8f014f61692256ea2463625aeb50b6476b6","2007-02-22 09:50:33+00:00","Missing uses of \q{}.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7305 cda61777-01e9-0310-a592-d414129be87e
"
"0bef8a1ce362c9e857d6f9a034fb2dd374011ab3","2007-02-22 09:54:52+00:00","Update the new-puzzle checklist for the post-bob world.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7307 cda61777-01e9-0310-a592-d414129be87e
"
"0d858b1f2a50a15c2fb50f9bf7997441f03025a0","2007-02-22 10:06:59+00:00","James H forgot to credit himself for Galaxies!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7308 cda61777-01e9-0310-a592-d414129be87e
"
"48ed5d16f034151d5a88746b1c2c6373d47e53c4","2007-02-22 18:09:51+00:00","We may reluctantly permit the returning of a too-easy puzzle if an
adequately hard one couldn't be found, but we must never return a
puzzle harder than the user asked for, and we _certainly_ mustn't
return one that we aren't even sure has a unique solution.

However, when I attempted to implement this rule, it turned out that
an attempt to generate a 15x15 Easy puzzle didn't terminate before I
got bored and killed it. I'm therefore retiring the Easy difficulty
level on the grounds that it's not a wide enough band to be useful.
I've renamed Hard to Normal, and (while I was there) renamed
Recursive to Unreasonable in line with my normal practice.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7309 cda61777-01e9-0310-a592-d414129be87e
"
"78925fe9aec8e509865d93a4fbe0eda6f3fc90e6","2007-02-22 18:13:12+00:00","Patch from James H to make the Palm compiler stop objecting to my
(as far as I could tell) perfectly legal use of floats, and also
remove some VC warnings.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7310 cda61777-01e9-0310-a592-d414129be87e
"
"dbff29a51d97d7ab913eecc9e112a851b2b517fa","2007-02-22 18:59:15+00:00","Part of r7310 completely changed the careful semantics of my
coordinate-rounding, causing picking up arrows from a dot anywhere
other than at the centre of a square to break.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7311 cda61777-01e9-0310-a592-d414129be87e
"
"5e86b544d9f8f5795a827c42168f672903a845af","2007-02-22 19:05:10+00:00","And fix the error _I_ made in r7311. I should stop coding now,
because I'm clearly too sleepy to get it right.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7312 cda61777-01e9-0310-a592-d414129be87e
"
"d1acc1fb7b73974d8f9386ca4ae0259337391ef6","2007-02-22 21:31:59+00:00","Remove spurious semicolons from macros; their upset compilers that don't like
mixing declarations and code (I accidentally tried to compile it with one
such).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7313 cda61777-01e9-0310-a592-d414129be87e
"
"de15e96e2e4dc59cd86782c3eb1af27385e8f083","2007-02-22 23:18:51+00:00","Phil Bordelon points out that when I renamed `Recursive' I missed a
bit.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7314 cda61777-01e9-0310-a592-d414129be87e
"
"02c9f9a5e2a712985616faa9c87b84506f8d60c4","2007-02-23 10:42:01+00:00","Update ignore property. (Again.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7315 cda61777-01e9-0310-a592-d414129be87e
"
"4dbdbeb0bf78b0cc89a48647fd430767c38a808a","2007-02-24 17:34:21+00:00","Somehow I let a couple of // comments get past me when I accepted
this file. Remove them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7318 cda61777-01e9-0310-a592-d414129be87e
"
"5c2c64348160a94699b8d426e4d1beaa2504fcf3","2007-02-24 19:33:38+00:00","Build an installer for Puzzles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7319 cda61777-01e9-0310-a592-d414129be87e
"
"305469a4cab37a49970631d158e7d51a20059f6b","2007-02-25 10:10:51+00:00","Oops. Having built the installer, we need a redirect for it in
.htaccess.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7324 cda61777-01e9-0310-a592-d414129be87e
"
"aa27eb5a611383e6d3a30fc29f5ba38e51f43bf4","2007-02-25 11:03:29+00:00","More ignores.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7325 cda61777-01e9-0310-a592-d414129be87e
"
"2d5d4e7046c5085982fa00ee4638ceb64bbafc84","2007-02-25 11:37:05+00:00","New puzzle: `Filling', a Fillomino implementation by Jonas Koelker.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7326 cda61777-01e9-0310-a592-d414129be87e
"
"12fb13cdea94b1dcfbfa0a8bf07c1d51ee0f468e","2007-02-25 12:04:42+00:00","More updates to the new-puzzle checklist.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7327 cda61777-01e9-0310-a592-d414129be87e
"
"6a3d092663aa350e2cc75461cb714deaf8541bb4","2007-02-25 12:11:47+00:00","Forgot to enable the Windows icon.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7328 cda61777-01e9-0310-a592-d414129be87e
"
"a99a613012758f73e000e744fc8b875b4431c582","2007-02-25 12:12:35+00:00","Update the checklist (yet again) to try to prevent a recurrence of
the error I corrected in r7328.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7329 cda61777-01e9-0310-a592-d414129be87e
"
"e31dabf72688a5ba330c492f0d4394446ffb43c5","2007-02-25 12:18:20+00:00","Tweak the cropping of the Filling icon very slightly.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7330 cda61777-01e9-0310-a592-d414129be87e
"
"b7f7519f68765ee60f5afc8582fad93134ab3d65","2007-02-25 12:54:46+00:00","Fix a UI glitch where dragging an existing arrow could change what it
referred to.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7331 cda61777-01e9-0310-a592-d414129be87e
"
"f8904d7531c1a519496c97d935edaa9153622549","2007-02-25 13:00:58+00:00","Don't create an undo-chain entry for a move with no effect.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7333 cda61777-01e9-0310-a592-d414129be87e
"
"9d0390cbab6fb0136eeb7f49ef68031757c5958e","2007-02-25 15:50:24+00:00","Galaxies doesn't print in colour.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7334 cda61777-01e9-0310-a592-d414129be87e
"
"56c16925f6a52e52a21affc04d525b7e46b54365","2007-02-25 15:57:35+00:00","Hardwiring the grid line width to 1 is really bad for printing. Use
a slightly more conventional method of drawing the grid lines, and
thereby fix printing.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7335 cda61777-01e9-0310-a592-d414129be87e
"
"5d884e04b9ebb276e7c0375db633c4c45b4e5661","2007-02-25 23:30:14+00:00","After it confused Verity, clarify in the Unequal docs that the
Trivial and Recursive difficulty levels are available for custom
selection even though no preset uses them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7336 cda61777-01e9-0310-a592-d414129be87e
"
"55ed7df720fedcf3dc1be39a874727428f8e868f","2007-02-26 20:35:47+00:00","Dariusz Olszewski's changes to support compiling for PocketPC. This
is mostly done with ifdefs in windows.c; so mkfiles.pl generates a
new makefile (Makefile.wce) and Recipe enables it, but it's hardly
any different from Makefile.vc apart from a few definitions at the
top of the files.

Currently the PocketPC build is not enabled in the build script, but
with any luck I'll be able to do so reasonably soon.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7337 cda61777-01e9-0310-a592-d414129be87e
"
"b4d8954139195809b23e5d50c8dcd103e324e015","2007-02-27 20:46:15+00:00","This game requires the numpad.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7338 cda61777-01e9-0310-a592-d414129be87e
"
"e9a0a2bc300e7ab1cc54902e7fbda8c8d5b9df08","2007-02-27 20:49:40+00:00","Create a blank .rc file to be used in the absence of icons/foo.rc.
This means that puzzles.rc2 is always included in all Windows and
PocketPC builds, which in turn means that I should be able to start
filling it full of VERSIONINFO and have that reliably included as
well.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7339 cda61777-01e9-0310-a592-d414129be87e
"
"c755b3589310b4cdc56e082c9ad93383a9766282","2007-02-27 20:52:03+00:00","Another thing to watch out for when adding new puzzles.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7340 cda61777-01e9-0310-a592-d414129be87e
"
"efa9bf836d113f9202af0abd384bdef14ada7c91","2007-02-27 21:03:06+00:00","Provide my old drag-based interface to Net as an ifdef-enabled
option, and turn it on by default on stylus-based platforms (i.e.
currently PocketPC).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7341 cda61777-01e9-0310-a592-d414129be87e
"
"8d5de8322d3fead98d7b1b98f94e256e1889e46e","2007-02-28 21:02:31+00:00","Gary Wong points out a couple of minor errors in the setting of
`used_solve'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7343 cda61777-01e9-0310-a592-d414129be87e
"
"cb67e5e94a29836a38c39859a2c552ab1611b545","2007-02-28 21:19:15+00:00","General cleanups patch from James H:
- missing static in filling.c
- better robustness in execute_move() in filling.c
- remove side effects in assert statements
- remove rogue diagnostic in galaxies.c
- remove // comment in map.c
- add more stylus-friendly UI to Pattern
- bias Unequal towards generating inequality clues rather than numeric


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7344 cda61777-01e9-0310-a592-d414129be87e
"
"188c1afa675cb36436df5c673478f872c1d81feb","2007-02-28 21:49:48+00:00","MinGW windres doesn't like an empty resource file, so invent a resource to
keep it happy. (Hopefully this hack will be temporary.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7346 cda61777-01e9-0310-a592-d414129be87e
"
"0422b014dffd99e7e9e0e78fa7ff4d64e046fc66","2007-02-28 22:22:30+00:00","Fix some border drawing issues.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7347 cda61777-01e9-0310-a592-d414129be87e
"
"30bd0a18486c6a3accaf76b37d16bfd9baa8d674","2007-03-01 07:32:35+00:00","Bound edge thicknesses below so that they're always thicker than the
grid lines.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7349 cda61777-01e9-0310-a592-d414129be87e
"
"f99275a789decc73d69ed01c3d923e3374a17540","2007-03-01 07:39:05+00:00","Adam D. Lopresto and Phil Bordelon independently point out a
signedness mismatch.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7350 cda61777-01e9-0310-a592-d414129be87e
"
"5b0d232f94bdc12e02ad9619343c310936f45ab0","2007-03-01 07:41:11+00:00","Cleanup patch from James H: disable the `s' key, which was only in
there by accident.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7351 cda61777-01e9-0310-a592-d414129be87e
"
"b87704d28367884a05b582f4b29c81969f40455a","2007-03-01 13:29:53+00:00","Amend README so that it makes reasonable sense no matter whether
you've got your source code from a tarball (with makefiles) or from
svn (without makefiles). While I'm here, mention Makefile.wce.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7352 cda61777-01e9-0310-a592-d414129be87e
"
"58683504329d609e5a394040da2a4eaf965a80c0","2007-03-01 18:57:36+00:00","Silliness! Here's a somewhat hacky patch which builds an additional
binary from the Galaxies source file. The function of the new
`galaxiespicture' is to take a .xbm bitmap on standard input and
convert it into a Galaxies game ID using both black and white dots,
such that when solved the puzzle displays the input bitmap.

In the process of this I've implemented a post-processing pass after
the main game generation, to prevent clusters of adjacent
singletons. James H already solved that problem for unconstrained
game generation, but for some reason it came back when I did this.
However, the post-processing pass is still turned off for normal
usage, on the basis that (a) if it ain't broke don't fix it, and (b)
it's rather slow and best avoided if not necessary.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7354 cda61777-01e9-0310-a592-d414129be87e
"
"a5f79f94da270808c6389dfe17b27ca93640cf95","2007-03-02 20:14:15+00:00","Fix problems with arrow UI with non-square grid.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7355 cda61777-01e9-0310-a592-d414129be87e
"
"fdf6f2e36004453bea2d929bf4278d1855bbdaf5","2007-03-03 09:41:51+00:00","About time I got round to documenting the new
REQUIRE_{RBUTTON,NUMPAD} flags.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7356 cda61777-01e9-0310-a592-d414129be87e
"
"33f06d2e3e993cdf1b15c6fec0fd30d88b7cfbf3","2007-03-03 17:15:25+00:00","My favourite kind of patch, from James H: one which decreases the
amount of code. James has ripped out the solver's version of
check_complete(), in favour of using the one I wrote for the
game-playing UI. My one checks connectedness, which means that the
solver will now not believe non-solutions to puzzles where
connectedness becomes a difficult issue. Examples of game IDs which
are now solved correctly but were previously not are 5x3:ubb and
7x7:ajfzmfqgtdzgt.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7362 cda61777-01e9-0310-a592-d414129be87e
"
"b364c63ec568b636d74d4e801a71892a42f9769c","2007-03-03 17:25:13+00:00","Minor cleanups (mostly \ns in diagnostic printfs) from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7363 cda61777-01e9-0310-a592-d414129be87e
"
"e57cad6f3f24a97c94687cba1bcc89c70cdd18d4","2007-03-03 17:36:44+00:00","Patch from James H to provide resizability on Windows.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7364 cda61777-01e9-0310-a592-d414129be87e
"
"a4d2240b232c9312968fed8ef4cdc98d600c0ea7","2007-03-03 22:05:05+00:00","Refactoring patch from Ben Hutchings: move all the Gtk resize code into one
place. (From Debian bug#379452)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7366 cda61777-01e9-0310-a592-d414129be87e
"
"011ac92e94ace7eab9593c7bc4dcb0a334f04bf6","2007-03-03 22:39:17+00:00","Ben Hutchings' patch to allow Gtk windows to be shrunk as well as grown
(from Debian bug#379452).
Tested on Gtk 2. I've been unable to find a Gtk+-1.2 installation on which
Puzzles compiles, so not tested there.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7367 cda61777-01e9-0310-a592-d414129be87e
"
"3636d7b6e2487255a23b41a85455ab1a996bfd21","2007-03-03 23:17:35+00:00","Patch from Ben Hutchings to allow user-initiated tilesize changes to persist
across changes in game parameters (e.g., changing difficulty without changing
size). This also has the effect of preserving the user-selected tilesize if the
grid size is changed. (From Debian bug#379452.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7368 cda61777-01e9-0310-a592-d414129be87e
"
"25f258c4fc57d78d6245fd7fd083af0544de4d77","2007-03-03 23:43:22+00:00","Since we've changed the semantics of the `expand' argument to midend_size(),
change the name. Also document the new semantics.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7369 cda61777-01e9-0310-a592-d414129be87e
"
"8762bb5509464d0602b9b7336816d9fa0afff536","2007-03-11 10:04:00+00:00","Gary Wong points out that solosolver's verbose output is
inconsistent in whether it numbers rows and columns from zero or
from one. Standardise on one.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7385 cda61777-01e9-0310-a592-d414129be87e
"
"306a8be4eb010e7985aac01d9ad5397af5b2a781","2007-03-11 10:12:45+00:00","Gary Wong observes that solo's decode_params() is overenthusiastic
about eating the letter `d' (for `diagonal') when it appears in a
symmtery description: it should only be used after `m', because
mirror symmetry is the only type that can be diagonal. This was
causing parsing of the parameter description `3x3adu' to produce the
wrong answer: the d would be swallowed, then the u ignored for being
incomprehensible, and you'd get default Trivial difficulty.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7386 cda61777-01e9-0310-a592-d414129be87e
"
"fbdfe096c984a38c1170fe1a82113e1e0210958d","2007-03-11 10:39:44+00:00","r7364 failed to expand a malloc to match the larger data being put
in it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7387 cda61777-01e9-0310-a592-d414129be87e
"
"78e01ae99f239ae1c91ee7d374a1684574d01c16","2007-03-16 13:32:43+00:00","Disallow clicks between squares.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7400 cda61777-01e9-0310-a592-d414129be87e
"
"d9868549bab650c737d439efd867799c6f975742","2007-03-23 18:08:21+00:00","Kyle Brazell points out that the completion checker considers a
region valid if it has _a_ dot at its centre of symmetry, even if
that dot isn't actually within the region in question.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7407 cda61777-01e9-0310-a592-d414129be87e
"
"a83c685c4ae2e5eb1212454716fc1958e14e4b32","2007-03-26 10:20:51+00:00","Stop failing assertions when we encounter an insoluble puzzle.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7408 cda61777-01e9-0310-a592-d414129be87e
"
"d1d9f64345c3ef97551ad1712cb4e0be790c61ea","2007-03-26 10:24:25+00:00","Er, and now do that _without_ introducing further segfaults.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7409 cda61777-01e9-0310-a592-d414129be87e
"
"c2ffca5a16a148529f923cb9fe9efe37bce62b89","2007-03-31 16:00:50+00:00","In the Windows frontend, stop tab navigation from activating buttons.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7436 cda61777-01e9-0310-a592-d414129be87e
"
"1dc904e2fe5f4c9539ec36ba6dce6e492d6d414d","2007-04-04 19:12:17+00:00","Ensure the shuffling process never produces an already-solved grid.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7446 cda61777-01e9-0310-a592-d414129be87e
"
"c27881606c5c8760c259f8d6f43196b36f6e1847","2007-05-06 09:54:34+00:00","I still haven't managed to get the WinCE port building via bob, but
I should at least check in what I've got.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7542 cda61777-01e9-0310-a592-d414129be87e
"
"945936173a8a9a87a41e691d58eee77ffb546c6e","2007-05-07 14:49:05+00:00","Close-to-finished auto-generating implementation of Klotski.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7547 cda61777-01e9-0310-a592-d414129be87e
"
"4b6a06b6cedf90baaa1e5f21eefa9657f29fe868","2007-05-07 17:50:14+00:00","Add a new misc.c function needed by Slide's colour setup.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7552 cda61777-01e9-0310-a592-d414129be87e
"
"1f5efcc6b387c820ec5d772f193a7b175391e58b","2007-05-07 17:51:37+00:00","Slight solver speedup by tracking more carefully which block merges
we've already tried, and not trying them again.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7553 cda61777-01e9-0310-a592-d414129be87e
"
"7ebe39054204b68aed18cebae618a981263bc627","2007-05-07 19:08:52+00:00","Add an optional move limit during game generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7554 cda61777-01e9-0310-a592-d414129be87e
"
"ff54a3ffa76fd86967cd9487c728e24410417bef","2007-05-07 19:36:19+00:00","Stand-alone slidesolver.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7558 cda61777-01e9-0310-a592-d414129be87e
"
"5ac43c07fff7d227c9beb1787e7512e5b49e3b18","2007-05-10 11:10:14+00:00","noicon.rc was missing from the Unix source archive, which caused a
re-run of mkfiles.pl to fail.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7567 cda61777-01e9-0310-a592-d414129be87e
"
"4f8034f58776417a197f55979c980df0753143f7","2007-05-12 08:14:37+00:00","Remove the check for disconnected pieces; it's over-general and
triggers on a perfectly connected piece shaped like an inverted T.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7570 cda61777-01e9-0310-a592-d414129be87e
"
"ec4aaa8d0138a5484bec2792c456d173e068fbd0","2007-05-12 08:26:58+00:00","Fix tiny memory leak if you pressed Solve while part way through an
existing solution path.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7571 cda61777-01e9-0310-a592-d414129be87e
"
"0576dd7a099866bde3e6dd674e49c06e5c0b6bed","2007-05-12 10:26:22+00:00","In-game user interface to the solver.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7572 cda61777-01e9-0310-a592-d414129be87e
"
"f32fc18fdee31cb9037c5aac90ed0089b702b23c","2007-05-12 11:51:39+00:00","Graphics tweak: make the top-right and bottom-left corners of
everything look nicer.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7573 cda61777-01e9-0310-a592-d414129be87e
"
"3f42511ac282dc65dbe2e25dd5bbec23faeb4d03","2007-05-12 13:13:39+00:00","More forgiving selection of dragging targets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7574 cda61777-01e9-0310-a592-d414129be87e
"
"94d32770cda98d9ceb1141acd0a2c2f54099f26b","2007-05-19 06:16:24+00:00","Left puzzles.rc2 out of the tarball. Oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7600 cda61777-01e9-0310-a592-d414129be87e
"
"387173815e7ccd0e63eb1904ff680f1f70042f4e","2007-05-20 14:28:48+00:00","Updates and improvements from Jonas Koelker.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7601 cda61777-01e9-0310-a592-d414129be87e
"
"9e4cc8d095ae910a0bb392df400e15824f2f7432","2007-06-29 09:45:44+00:00","Optimiser placation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7625 cda61777-01e9-0310-a592-d414129be87e
"
"15c14541fec4960970ede17372b894d2d09eed4c","2007-07-05 18:57:50+00:00","A user points out that Loopy's solver relies on elements of the
`clues' array being able to be -1, so we must explicitly declare it
as `signed char' or it will break on platforms whose default char is
unsigned.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7636 cda61777-01e9-0310-a592-d414129be87e
"
"b150534f20f64606611722f1dd2f202b9b40de26","2007-07-31 17:04:20+00:00","Experimental UI tweak enabled by a hacky environment variable:
suppress the display of `this square can't be a light' blobs in a
lit square, on the grounds that we already know _lit_ squares can't
be lights. This makes the solved game look cleaner (I've always
thought the detritus of blobs on some but not all non-light squares
looked messy), but on the other hand it's slightly jarring during
play. So I'm checking it in, but as a configurable option which is
off by default.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7656 cda61777-01e9-0310-a592-d414129be87e
"
"ca342020d979054309c2ae960bfbec520a50645d","2007-08-18 10:07:29+00:00","A piece of library code which constructs a random division of a
rectangle into equally sized ominoes. I have a couple of potential
applications for this, but none I've actually implemented yet, so
for the moment it's living in `unfinished'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7690 cda61777-01e9-0310-a592-d414129be87e
"
"dc49cf4fed08688acba8d3d26c21c4e99d3f2c6f","2007-08-18 11:19:29+00:00","Better test-mode diagnostics.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7691 cda61777-01e9-0310-a592-d414129be87e
"
"58a331ce83c8c111c11860af07281c0c3c1502d7","2007-08-18 13:30:13+00:00","Allow a 1-omino to be completely destroyed and recreated in an
arbitrary unclaimed square. This cures the most common cause of
generation failures (covering a large area in dominoes was the most
difficult case, and would fail even if the large area was 1xn!); the
failure rate is now sufficiently low under all circumstances I've
found that I'm willing to just loop until I get a success.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7693 cda61777-01e9-0310-a592-d414129be87e
"
"e71d2bd03107bec5aa8b65dda9dc2e61e8793b69","2007-08-18 13:32:56+00:00","Ahem. Finishing writing the comment _before_ checkin is generally sensible.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7694 cda61777-01e9-0310-a592-d414129be87e
"
"1025436d4e6f3a9ceee5a2df5475ec87a0ae1da3","2007-08-25 14:10:49+00:00","Commit my work so far on a generator for Nikoli's `Block Puzzle'. It
works, but it's slow, and the puzzles are currently at a relatively
low level of difficulty. Also this is a generator only: no UI yet
(because I'm waiting to see if I can make the generator practical
before bothering to write the rest).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7700 cda61777-01e9-0310-a592-d414129be87e
"
"f8ab26b9a9139c1f3b93e7bba38d26a960abe0ac","2007-08-25 15:32:41+00:00","I've just realised that my deliberate avoidance of non-simply
connected polyominoes actually causes a loss of generality for
sufficiently large k. I hadn't previously noticed, because you need
k to be (I think) at least 23 and none of my potential applications
require anything nearly that large. Add some discussion of this.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7701 cda61777-01e9-0310-a592-d414129be87e
"
"4ee4fd2fc157593b9ea282a3dc5d9639dfed9085","2007-08-25 15:50:33+00:00","Fix an inaccurate comment.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7702 cda61777-01e9-0310-a592-d414129be87e
"
"97276ed163eb7343805002801e24e4a43405fcdd","2007-08-25 17:46:13+00:00","A rigorous proof. Totally unimportant to the code, but I didn't want
to lose it :-)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7703 cda61777-01e9-0310-a592-d414129be87e
"
"d1f4fcf07089a7b0006dd3e609bb116ae7ca5487","2007-12-15 21:09:45+00:00","64-bit cleanliness: we were already carefully using a uint32 type in
the SHA code, but it wasn't correctly defined!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7817 cda61777-01e9-0310-a592-d414129be87e
"
"2708a1b3002a7cba9ec455b92e709b96445257bf","2008-01-15 18:04:13+00:00","Syntactic fixes by Zach Wily to make the OS X build work under 10.5.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7836 cda61777-01e9-0310-a592-d414129be87e
"
"9f7aad80f2419d6c31889054d38d7a82d6e29abb","2008-02-10 17:12:49+00:00","It's another new year.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7848 cda61777-01e9-0310-a592-d414129be87e
"
"56b52619bd1b379f800514ea10878178c3438d18","2008-02-10 18:43:29+00:00","UI change to Filling: allow multiple squares to be set at once.

(This change adds a new possibility to the save format, such that new save
files won't necessarily be loadable by old binaries. I think that's acceptable
-- it's certainly happened before -- but I couldn't find anything in the
developer docs explicitly blessing it.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7849 cda61777-01e9-0310-a592-d414129be87e
"
"29eae381dd9755bff8280dfed023cf6c7b3a895a","2008-03-11 17:59:38+00:00","Update the OS X Puzzles makefile so that it builds on Leopard and
generates PPC/Intel dual-architecture binaries.

This turns out not to be too painful: you compile and link your
programs using `gcc -arch ppc' or `gcc -arch i386', then you use a
command of the form `lipo -create ppc-binary i386-binary -output
binary' to construct a universal binary. It works equally well on
command-line standalone executable files and the executables within
application directories. Also added the -mmacosx-version-min option,
since otherwise the OS X build tools appear to default to building
binaries which will crash (without anything resembling a
comprehensible error message) on any earlier release.

The handling of version.o in this checkin is somewhat grotty. I'd
prefer a method more cleverly intertwingled with mkfiles.pl so I
didn't have to maintain the OS X architecture list in both
mkfiles.pl and Recipe. (Not that I anticipate Apple switching
architectures again in the immediate future, but it's the principle
of the thing.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7916 cda61777-01e9-0310-a592-d414129be87e
"
"3ead50c22539c3053199016155cf1e0b4b2fc1c2","2008-03-20 00:19:27+00:00","I _think_, after some fairly random experimentation, that this ought
to fix the weird blacked-out text in the xvfb-built screenshots.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7931 cda61777-01e9-0310-a592-d414129be87e
"
"366317fbb56715121061d76168c931c15269c3e3","2008-03-20 09:18:26+00:00","Hmm. Telling xvfb to default to a TrueColor visual did help, in that
it got rid of the bogus backgrounds on all the text; but on the
other hand it mysteriously caused all the images to become black and
white! Serves me right for testing with Bridges which was B&W to
start with. Instead, we'll just tell xvfb to use a 24-bit display
and let it sort out the visuals for itself; that seems to work better.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7932 cda61777-01e9-0310-a592-d414129be87e
"
"d3a64e7e3f90a5ef2e4405bf67019cb95234271b","2008-04-07 15:56:42+00:00","Substantial reworking of Solo so that it implements both Sudoku-X
(require both main diagonals to have one of every digit in addition
to all the usual constraints) and Jigsaw Sudoku (replace the array
of rectangular sub-blocks with the sub-blocks being random
polyominoes). To implement the latter, I've moved my `divvy.c'
library routine out of the `unfinished' subdirectory.

Jigsaw mode is currently an undocumented feature: you enable it by
setting the rows parameter to 1 (and the columns parameter to your
desired grid size, which unlike normal Sudoku can be anything you
like including a prime number). The reason it's undocumented is
because generation times are not yet reliably short: sometimes
generating a jigsaw-type puzzle can hang for hours and still get
nowhere. (The algorithm should terminate in principle, but not in
any time you're prepared to wait.) I _think_ I know how to solve
this, but have yet to try it. Until then, jigsaw mode will remain a
hidden feature.

Printing of X-type puzzles is also substandard at present, because
the current print-colour API replaces the desired light shading of
the X-cells with heavy diagonal hatching. I plan to adjust the API
imminently to address this.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7974 cda61777-01e9-0310-a592-d414129be87e
"
"fe80b1c4a2208081e56e3893d6018694ae92ea60","2008-04-07 17:12:21+00:00","Pedantic tweaks to allow successful compilation on Windows. (gcc
failed to point out a declaration after a statement, and gcc's
linker was clever enough to optimise the call to divvy_rectangle()
out of solosolver so that I didn't have to include divvy.c in that.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7975 cda61777-01e9-0310-a592-d414129be87e
"
"7f1eb6de9cf5c72a5f3da81a34f27df9ea3bdd8c","2008-04-07 17:13:29+00:00","Revise the printing colour framework so that we can explicitly
request either of hatching or halftoning, and also choose which to
supply as a fallback when printing in colour.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7976 cda61777-01e9-0310-a592-d414129be87e
"
"2b6cfc5bdb4088390dc3582eed55a4c58deeaa53","2008-04-07 17:16:08+00:00","Ahem. Apparently forgot to compile-test after that one last tiny
change.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7977 cda61777-01e9-0310-a592-d414129be87e
"
"e831f63b80b4493065ac159b998715c13ee20f00","2008-04-08 09:36:33+00:00","Improvements to filled-grid generation. Introduced a cunning idea
suggested by IWJ last night: grid generation can immediately choose
an entire grid row randomly, since all that's doing is nailing down
the names of the numbers, and that gets the whole thing started more
efficiently. But the main difference is that now grid generation is
given only area^2 steps to come up with a filled grid, and then cut
off unceremoniously, causing grid generation to fail and be retried
from scratch. This seems to prevent hangups on jigsaw layouts that
admit few useful solutions, by changing layout constantly. 9j
puzzles now generate at a sensible rate, and as an added bonus so do
5x5 normal puzzles, which they never used to.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7978 cda61777-01e9-0310-a592-d414129be87e
"
"77ac642eddbdc880f4a7a2387a40d5a39a0d5110","2008-04-08 10:30:18+00:00","Having got Jigsaw mode generation working at reasonable speed, we
can now productise it.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7979 cda61777-01e9-0310-a592-d414129be87e
"
"7f994848e6b35454d84c6f00b128477500f89001","2008-04-08 16:25:39+00:00","New feature in midend.c which allows us to ask for the number of the
currently selected preset, if any. I've used this in the GTK front
end to have the Type menu mark the currently selected menu item.
(After considerable beating of GTK with sticks, I might add. Grr.)
Currently the same UI feature is not yet supported on Windows or
MacOS, but I hope to do those too at some point if it's feasible.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7980 cda61777-01e9-0310-a592-d414129be87e
"
"8cd66b24f5ecae948ce99da4fa2b081398816f81","2008-04-09 14:36:08+00:00","Implement tick marks in the Type menu on OS X.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7981 cda61777-01e9-0310-a592-d414129be87e
"
"2dabf400f365c698eac8eace767e01f08d0dadc1","2008-04-09 14:57:20+00:00","Implement tick marks in the Type menu on Windows. Now all my front
ends have got them.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7982 cda61777-01e9-0310-a592-d414129be87e
"
"bfd3ba40e09696a747223f3b25340bc8bd5738ec","2008-04-10 11:11:33+00:00","Now that we're highlighting the currently selected preset in the
Type menu, it looks faintly silly that Fifteen doesn't have any
presets other than Custom: you open a Fifteen window in its default
state, and the Type menu appears to be telling you it has a custom
size! Fixed by adding a preset for the default parameters.

I'd quite like to fix this properly by revamping the presets
mechanism in a way that _enforces_ that there must always be a
preset which matches the default parameters, but that's more fiddly
than it sounds. For the moment, this change fixes the only
externally visible infelicity in the current game set.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7983 cda61777-01e9-0310-a592-d414129be87e
"
"f092d83b057d7d19af2afe071764acf80874240a","2008-04-14 11:32:06+00:00","Shamelessly pander to compilers whose data flow warning systems
insist that a variable should be initialised in all branches of an
if, instead of just all the non-assertion-failing ones.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7989 cda61777-01e9-0310-a592-d414129be87e
"
"ed77b07efaff923ed61c7cf803fd3f56a29bbd11","2008-06-09 18:28:03+00:00","New -A mode permitting even madder operators, and also -m to try to
print all possible paths to a value. The latter has a lot of
de-duplication left to be done, due to multiple evaluation orders.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8061 cda61777-01e9-0310-a592-d414129be87e
"
"be825ca8a3aa74d5ad6a8aa002299194e884cb43","2008-06-10 17:24:09+00:00","Just noticed that the return value of midend_process_key() wasn't
documented.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8062 cda61777-01e9-0310-a592-d414129be87e
"
"6829cf0238cf00ca7bedc4bb9cdb83d454cf3d83","2008-06-10 20:35:17+00:00","Michael Schierl's patch to compile the puzzles as Java applets using
NestedVM. Wow!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8064 cda61777-01e9-0310-a592-d414129be87e
"
"1ee164ad098c4fae792ed08624c9828763fa6842","2008-06-23 17:34:56+00:00","An option to enable a debugging mode for the BFS.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8091 cda61777-01e9-0310-a592-d414129be87e
"
"d1a1998805fd7f32b630c07914870cdc54e247ab","2008-06-24 20:58:35+00:00","James H has helpfully provided yet more silly operators for the -A
mode. I think some user-defined ruleset configuration options are
now required...


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8092 cda61777-01e9-0310-a592-d414129be87e
"
"90a3578b6cce61cb79aa3aa4123f5be4208289c5","2008-06-26 19:07:44+00:00","The Java console keeps showing up error reports due to being asked
to resize the puzzle to zero size. Ignore all such requests, in the
assumption that a more sensible resize will be along soon enough
(which does seem to happen, though I haven't debugged the NestedVM
front end hard enough to figure out why the bogus resizes happen in
the first place).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8094 cda61777-01e9-0310-a592-d414129be87e
"
"cc709b6da84fa63fd0102970e37da96aa2db177f","2008-06-26 19:09:07+00:00","Handle a <param name='game_id'> by passing it in to the C side as
argv[1], which in turn feeds it into the midend as a game ID. This
can of course take any of the forms supported by the native C
puzzles: a pure game parameter string, a params:description specific
game ID, or a params#seed random game ID.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8095 cda61777-01e9-0310-a592-d414129be87e
"
"f6742c654ff3e2b120dfd4d10dabc5e397107e2b","2008-06-27 17:28:32+00:00","Build the Java versions of the puzzles automatically as part of the
build process. Also update the new-puzzle checklist to make sure I
set up and test the Java applet for any new game I add.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8096 cda61777-01e9-0310-a592-d414129be87e
"
"7d003e045552d7dead59ff9cedf762e64a678b01","2008-07-05 13:31:59+00:00","Add a build version designation to the NestedVM build, after Jacob
pointed out that Help > About in the Java applets on my website
currently reports 'Unidentified build'.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8105 cda61777-01e9-0310-a592-d414129be87e
"
"f47a47159c460ef7c37671ce57b25d5bc5a12a63","2008-07-05 13:32:28+00:00","Remove rogue diagnostic.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8106 cda61777-01e9-0310-a592-d414129be87e
"
"abc79f63fa40e2ae8414223d92b2a47e9403f3b8","2008-07-05 15:40:43+00:00","More operations and bug fixes from James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8107 cda61777-01e9-0310-a592-d414129be87e
"
"25df1395ac966642b0b94e8739f86008961afe13","2008-07-05 22:07:35+00:00","Correction from James H: sqrt(0) shouldn't occur any more than
sqrt(1) should.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8108 cda61777-01e9-0310-a592-d414129be87e
"
"c3dae28374b29d5251d1b63c90e86f125177c5c4","2008-08-18 18:00:33+00:00","Extra ignore properties for the dual-architecture OS X build, which
I've managed to go a fair while without realising the need for.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8148 cda61777-01e9-0310-a592-d414129be87e
"
"7d411bebafba85f6d7fa7127ae10e441cc579488","2008-08-18 18:01:35+00:00","Oh, and some more ignore properties, oops.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8149 cda61777-01e9-0310-a592-d414129be87e
"
"f7418ca0b2810998719b3db0a60119ae7889679b","2008-09-06 09:27:56+00:00","New infrastructure feature. Games are now permitted to be
_conditionally_ able to format the current puzzle as text to be sent
to the clipboard. For instance, if a game were to support playing on
a square grid and on other kinds of grid such as hexagonal, then it
might reasonably feel that only the former could be sensibly
rendered in ASCII art; so it can now arrange for the 'Copy' menu
item to be greyed out depending on the game_params.

To do this I've introduced a new backend function
(can_format_as_text_now()), and renamed the existing static backend
field 'can_format_as_text' to 'can_format_as_text_ever'. The latter
will cause compile errors for anyone maintaining a third-party front
end; if any such person is reading this, I apologise to them for the
inconvenience, but I did do it deliberately so that they'd know to
update their front end.

As yet, no checked-in game actually uses this feature; all current
games can still either copy always or copy never.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8161 cda61777-01e9-0310-a592-d414129be87e
"
"9c2df2bb12061d0eba310d74abd8afa662afa359","2008-09-06 15:19:47+00:00","Completely re-engineered version of Loopy, courtesy of Lambros
Lambrou. Now capable of handling triangular and hexagonal grids as
well as square ones, and then a number of semiregular plane tilings
and duals of semiregular ones. In fact, most of the solver code
supports an _arbitrary_ planar graph (well, provided both the graph
and its dual have no self-edges), so it could easily be extended
further with only a little more effort.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8162 cda61777-01e9-0310-a592-d414129be87e
"
"3c7534b740b1560ef574922264698183b8dfaa72","2008-09-06 17:33:04+00:00","Don't call changed_preset() until after we've initialised
fe->copy_menu_item.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8163 cda61777-01e9-0310-a592-d414129be87e
"
"d2457b9c4c67c16798d9637c08f595f6d1adfb7d","2008-09-06 17:38:43+00:00","Nearly forgot: Lambros definitely deserves a place in the copyright
statement!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8164 cda61777-01e9-0310-a592-d414129be87e
"
"e0bcda7be2b6ccbb2b20f61343b02cddab7230cd","2008-09-06 21:24:21+00:00","New Loopy save file, compatible with the new Loopy.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8165 cda61777-01e9-0310-a592-d414129be87e
"
"4e96e6a456559407a26bbee56d025894e58b37b0","2008-09-07 08:35:52+00:00","How did I manage to check this in without actually trying to build
on Windows at all?! Fix some departures from the C standard, mostly
declaring variables after a statement has already been issued in the
same block. MSVC is picky about this where gcc is forgiving, and TBH
I'd change the latter given the choice.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8166 cda61777-01e9-0310-a592-d414129be87e
"
"2636e497c63c456dd650b021ec6a4402173a9b66","2008-09-07 10:02:40+00:00","Having played new-Loopy a bit recently, I've had occasion to think a
bit harder about advanced solver techniques. Expand the comment at
the top of the file.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8167 cda61777-01e9-0310-a592-d414129be87e
"
"1cf64af5e21b88e11c9bbffe2c17db981642f7eb","2008-09-10 21:44:23+00:00","Patch from James H to make new-Loopy port more easily.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8174 cda61777-01e9-0310-a592-d414129be87e
"
"e327966276989c5e6033767546b53ea5f9504587","2008-09-13 18:25:19+00:00","Since the lack of this has caused portability issues in the past:
add '-ansi -pedantic' to the main Unix makefile, and clean up a few
minor problems pointed out thereby.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8175 cda61777-01e9-0310-a592-d414129be87e
"
"834a759dfd4c0fbd097d97b5b41587c3238b7ac0","2008-09-13 18:26:53+00:00","Patch from James H to centralise some generally useful cursor-
handling functionality into misc.c.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8176 cda61777-01e9-0310-a592-d414129be87e
"
"729d09dd08fb5682b57c8462a112c7cc06176a7b","2008-09-13 18:29:20+00:00","Patch from James H providing lots more paranoid casting. Also one
actual behaviour change: Untangle now permits dragging with the
right mouse button, which has exactly the same effect as it does
with the left. (Harmless on desktop platforms, but helpful when
'right-click' is achieved by press-and-hold; now the drag takes
place even if you hesitate first.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8177 cda61777-01e9-0310-a592-d414129be87e
"
"7d0832df00462502477d9f63736d8b4d2c3d67c9","2008-09-13 19:17:26+00:00","Change to the handling of -DCOMBINED in the makefiles. Instead of
defining it centrally per port, I think it's neater to define it for
each puzzle when adding that puzzle to the ALL list - because those
front ends which take -DCOMBINED are precisely those which use ALL.
In particular, this change opens up the possibility of compiling
both individual puzzles _and_ a combined monolith within the same
makefile.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8178 cda61777-01e9-0310-a592-d414129be87e
"
"6254e39b07017f24d3b3185fa473c1eff554d4b2","2008-09-13 19:18:42+00:00","Oops, left this out of r8178: having defined COMBINED everywhere in
the puzzles, we can now remove it from the OS X makefile section.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8179 cda61777-01e9-0310-a592-d414129be87e
"
"4eef605888b4d0a12be44751908d094c7a538430","2008-09-13 19:21:53+00:00","Typo spotted by James H.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8180 cda61777-01e9-0310-a592-d414129be87e
"
"1ef17fba6352eb3abbd6b7e5bee250ac973a4016","2008-09-14 08:52:59+00:00","Lambros provides this workaround for a compiler warning on his
Ubuntu system. I'm inclined to think the real problem is in his gtk
headers, but this is a harmless enough change to avoid hassle.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8181 cda61777-01e9-0310-a592-d414129be87e
"
"2a4f2f1b20816f62d9decdb1e12b22df367c72e9","2008-09-16 23:51:57+00:00","Cosmetic: fix mismatch between game_compute_size() and game_redraw()
(was causing unwanted 'drop-shadow' type effect).


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8186 cda61777-01e9-0310-a592-d414129be87e
"
"0bd4a6b35cca9ade70932a44555e3e178905e48a","2008-09-17 16:43:36+00:00","Yet another complete rewrite of Slant's loop detection during
gameplay. Having tried methods based on using the slashes to define
a dsf on grid vertices, and also methods based on tracing round the
loops using conventional (non-dsf-based) graph theory, it occurred
to me the other day that there's a far simpler technique involving
connectivity. A loop is precisely that which causes the playing area
to become disconnected; so what we do now is to go through and build
a dsf describing connectedness of the _area_ of the grid rather than
the vertices. That divides the area into its maximal connected
components, and then we can trivially identify every edge that's
part of a loop by noticing that it separates two nonequivalent
pieces of space. The resulting algorithm is half the size of the old
one, and it's much easier to be confident of its correctness.

(Having said which, there will doubtless turn out to be an
embarrassing bug in it, but I haven't found it yet.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8187 cda61777-01e9-0310-a592-d414129be87e
"
"15aad1aecfb5d1dec66c802c37e7f5238069fb95","2008-09-18 15:33:13+00:00","Patch from Lambros implementing error highlighting in Loopy.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8190 cda61777-01e9-0310-a592-d414129be87e
"
"4cfa4b0713bd887bffe552936e503df5ed58d345","2008-09-18 18:19:55+00:00","Lambros points out that trying to generate a 3x3 Cairo Easy grid
spins forever, but observes that raising the limit to 4x4 across all
grid types is not good for the complex grids like great-hexagonal.
Introduce per-grid minimum sizes using mad macro trickery.

(In fact, for each grid type I've put in a minimum size which _both_
dimensions must equal or exceed, plus another minimum size which _at
least one_ must equal or exceed; that permits both 3x4 and 4x3 Cairo
while disallowing 3x3.)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8191 cda61777-01e9-0310-a592-d414129be87e
"
"e75c783678a5716eb605bb0145e49119e1a30550","2008-09-19 07:31:52+00:00","Cut-and-paste error which was preventing any drop-down list in the
custom game configuration code from working in the Java applets.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8192 cda61777-01e9-0310-a592-d414129be87e
"
"531c682ff282f6ea55dd3ef50f44b54e58c8e23f","2008-10-04 21:49:44+00:00","Remove strange punctuation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8199 cda61777-01e9-0310-a592-d414129be87e
"
"172e616d9eae4c71cc243412f085bee41071a5b6","2008-10-05 12:22:37+00:00","Apply '103_fix-unequal-digit-h.diff' from the Debian package:
Unequal 18x18 or above was unplayable due to a clash with the undocumented
'H' (hint) key. Resolve the clash by making the hint function only fire
when no square is selected.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8200 cda61777-01e9-0310-a592-d414129be87e
"
"5072e15cfef110e1eaded078d3c25738cfe0b126","2009-11-01 15:16:03+00:00","Committing version 8220.1 as released.
"
